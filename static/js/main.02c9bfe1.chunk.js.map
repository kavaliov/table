{"version":3,"sources":["components/table/duck/context.ts","components/table/duck/state.ts","components/table/duck/actions.ts","components/table/duck/reducer.ts","components/table/components/col/Col.tsx","components/table/components/col/duck/operations.ts","components/table/components/row/Row.tsx","components/table/Table.tsx","App.tsx","index.tsx","components/table/components/col/Col.module.css","components/table/Table.module.css"],"names":["TableContext","React","tableState","touched","selectionState","selected","rows","id","height","cols","content","type","setStartSelection","createStandardAction","setEndSelection","setTouched","clearSelection","tableReducer","createReducer","initialState","handleAction","actions","state","positionStart","payload","start","positionEnd","end","Col","colData","rowId","useContext","dispatch","useState","setSelected","useEffect","current","rowCord","colCord","colId","belongs","selectStartHandler","selectEndHandler","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onDoubleClick","console","log","colSpan","rowSpan","className","classNames","styles","col","Row","rowData","style","map","Table","useReducer","Provider","value","wrapper","table","row","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.02c9bfe1.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { SketchContext as SketchContextType } from \"./types\";\n\nexport const TableContext = React.createContext<SketchContextType>(\n  null as any\n);\n","import { TableState } from \"./types\";\n\nconst tableState: TableState = {\n  touched: false,\n  selectionState: {\n    selected: false,\n  },\n  rows: [\n    {\n      id: 1,\n      height: 60,\n      cols: [\n        { id: 1, content: \"11\", type: \"text\" },\n        { id: 2, content: \"12\", type: \"text\" },\n        { id: 3, content: \"13\", type: \"text\" },\n      ],\n    },\n    {\n      id: 2,\n      height: 50,\n      cols: [\n        { id: 1, content: \"21\", type: \"text\" },\n        { id: 2, content: \"22\", type: \"text\" },\n        { id: 3, content: \"23\", type: \"text\" },\n      ],\n    },\n    {\n      id: 3,\n      height: 70,\n      cols: [\n        { id: 1, content: \"31\", type: \"text\" },\n        { id: 2, content: \"32\", type: \"text\" },\n        { id: 3, content: \"33\", type: \"text\" },\n      ],\n    },\n  ],\n};\n\nexport default tableState;\n","import { createStandardAction } from \"typesafe-actions\";\nimport { PositionStateType } from \"./types\";\n\nexport const setStartSelection = createStandardAction(\n  \"TABLE/SET_START_SELECTION\"\n)<{\n  positionStart: PositionStateType;\n}>();\n\nexport const setEndSelection = createStandardAction(\"TABLE/SET_END_SELECTION\")<{\n  positionEnd: PositionStateType;\n}>();\n\nexport const setTouched = createStandardAction(\"TABLE/SET_TOUCHED\")<{\n  touched: boolean;\n}>();\n\nexport const clearSelection = createStandardAction(\"TABLE/CLEAR_SELECTION\")();\n","import { createReducer, ActionType } from \"typesafe-actions\";\nimport initialState from \"./state\";\nimport * as actions from \"./actions\";\nimport * as Types from \"./types\";\n\ntype Action = ActionType<typeof actions>;\n\nconst tableReducer = createReducer<Types.TableState, Action>(initialState)\n  .handleAction(\n    actions.setStartSelection,\n    (state, { payload: { positionStart } }) => ({\n      ...state,\n      selectionState: {\n        ...state.selectionState,\n        start: positionStart,\n      },\n    })\n  )\n  .handleAction(\n    actions.setEndSelection,\n    (state, { payload: { positionEnd } }) => ({\n      ...state,\n      selectionState: {\n        ...state.selectionState,\n        selected: true,\n        end: positionEnd,\n      },\n    })\n  )\n  .handleAction(actions.setTouched, (state, { payload: { touched } }) => ({\n    ...state,\n    touched,\n  }))\n  .handleAction(actions.clearSelection, (state) => ({\n    ...state,\n    selectionState: {\n      selected: false,\n    },\n  }));\n\nexport default tableReducer;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { ColType as ColDataType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport {\n  clearSelection,\n  setEndSelection,\n  setStartSelection,\n  setTouched,\n} from \"../../duck/actions\";\nimport { belongs } from \"./duck/operations\";\nimport styles from \"./Col.module.css\";\n\ninterface ColType {\n  colData: ColDataType;\n  rowId: number;\n}\n\nconst Col: React.FC<ColType> = ({ colData, rowId }) => {\n  const { state, dispatch } = React.useContext(TableContext);\n  const [selected, setSelected] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setSelected(\n        belongs(state.selectionState.start, state.selectionState.end, {\n          rowId,\n          colId: colData.id,\n        })\n      );\n    } else {\n      setSelected(false);\n    }\n  }, [state, rowId, colData]);\n\n  const selectStartHandler = () => {\n    dispatch(clearSelection());\n    dispatch(setTouched({ touched: true }));\n    dispatch(\n      setStartSelection({ positionStart: { rowId, colId: colData.id } })\n    );\n  };\n\n  const selectEndHandler = () => {\n    dispatch(setTouched({ touched: false }));\n    dispatch(setEndSelection({ positionEnd: { rowId, colId: colData.id } }));\n  };\n\n  const selectUpdateHandler = () => {\n    if (state.touched) {\n      dispatch(setEndSelection({ positionEnd: { rowId, colId: colData.id } }));\n    }\n  };\n\n  return (\n    <td\n      onMouseDown={selectStartHandler}\n      onTouchStart={selectStartHandler}\n      onMouseUp={selectEndHandler}\n      onTouchEnd={selectEndHandler}\n      onMouseEnter={selectUpdateHandler}\n      onDoubleClick={() => console.log(\"dbl\")}\n      colSpan={colData.colSpan}\n      rowSpan={colData.rowSpan}\n      className={classNames(styles.col, { [styles.selected]: selected })}\n    >\n      {colData.content}\n    </td>\n  );\n};\n\nexport default Col;\n","import { PositionStateType } from \"../../../duck/types\";\n\nexport const belongs = (\n  start: PositionStateType,\n  end: PositionStateType,\n  current: PositionStateType\n): boolean => {\n  const rowCord =\n    start.rowId < end.rowId\n      ? [start.rowId, end.rowId]\n      : [end.rowId, start.rowId];\n  const colCord =\n    start.colId < end.colId\n      ? [start.colId, end.colId]\n      : [end.colId, start.colId];\n\n  return (\n    current.rowId >= rowCord[0] &&\n    current.rowId <= rowCord[1] &&\n    current.colId >= colCord[0] &&\n    current.colId <= colCord[1]\n  );\n};\n","import React from \"react\";\nimport { RowType as RowDataType, ColType } from \"../../duck/types\";\nimport Col from \"../col\";\n\ninterface RowType {\n  rowData: RowDataType;\n}\n\nconst Row: React.FC<RowType> = ({ rowData }) => {\n  return (\n    <tr style={{ height: rowData.height }}>\n      {rowData.cols.map((col: ColType) => (\n        <Col key={col.id} colData={col} rowId={rowData.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport { TableContext } from \"./duck/context\";\nimport tableState from \"./duck/state\";\nimport tableReducer from \"./duck/reducer\";\nimport { RowType } from \"./duck/types\";\nimport { Row } from \"./components\";\nimport styles from \"./Table.module.css\";\n\nconst Table: React.FC = () => {\n  const [state, dispatch] = React.useReducer(tableReducer, tableState);\n\n  React.useEffect(() => {\n    console.log(state);\n  }, [state]);\n\n  return (\n    <TableContext.Provider value={{ dispatch, state }}>\n      <div className={styles.wrapper}>\n        <table className={styles.table}>\n          <tbody>\n            {state.rows.map((row: RowType) => (\n              <Row key={row.id} rowData={row} />\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { Table } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"col\":\"Col_col__IUG5H\",\"selected\":\"Col_selected__29n3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__2oJSk\",\"table\":\"Table_table__3Cw9e\"};"],"sourceRoot":""}