{"version":3,"sources":["components/table/components/col/components/text/components/panel/components/insert-image/InsertImage.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/ImageMenu.module.css","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/components/change-size/ChangeSize.module.css","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/KatexMenu.module.css","components/table/components/row/components/remove-row/RemoveRow.module.css","components/table/components/tech-row/components/remove-col/RemoveCol.module.css","components/table/components/tech-row/components/change-width/ChangeWidth.module.css","components/table/duck/context.ts","components/table/duck/state.ts","components/table/duck/actions.ts","components/table/duck/utils.ts","components/table/duck/reducer.ts","components/table/components/col/components/text/components/panel/components/bold/bold.svg","components/table/components/button/Button.tsx","components/table/components/col/components/text/components/panel/components/bold/Bold.tsx","components/table/components/col/components/text/components/panel/components/italic/italic.svg","components/table/components/col/components/text/components/panel/components/italic/Italic.tsx","components/table/components/col/components/text/components/panel/components/underline/underline.svg","components/table/components/col/components/text/components/panel/components/underline/Underline.tsx","components/table/components/col/components/text/components/panel/components/unordered-list/unordered-list.svg","components/table/components/col/components/text/components/panel/components/unordered-list/UnorderedList.tsx","components/table/components/col/components/text/components/panel/components/ordered-list/ordered-list.svg","components/table/components/col/components/text/components/panel/components/ordered-list/OrderedList.tsx","components/table/components/col/components/text/components/panel/components/headers/duck/constants.ts","components/table/components/col/components/text/components/panel/components/headers/duck/utils.ts","components/table/components/col/components/text/components/panel/components/headers/Headers.tsx","components/table/components/col/components/text/duck/context.ts","components/table/components/col/components/text/components/panel/components/font-size/duck/constants.ts","components/table/components/col/components/text/components/panel/components/font-size/duck/utils.ts","components/table/components/col/components/text/components/panel/components/font-size/FontSize.tsx","components/table/components/col/components/text/components/panel/components/align-right/align-right.svg","components/table/components/col/components/text/components/panel/components/align-right/AlignRight.tsx","components/table/components/col/components/text/components/panel/components/align-left/align-left.svg","components/table/components/col/components/text/components/panel/components/align-left/AlignLeft.tsx","components/table/components/col/components/text/components/panel/components/align-center/align-center.svg","components/table/components/col/components/text/components/panel/components/align-center/AlignCenter.tsx","components/table/components/col/components/text/components/panel/components/insert-image/picture.svg","components/table/components/col/components/text/duck/utils.ts","components/table/components/col/components/text/components/panel/components/insert-image/InsertImage.tsx","components/table/components/col/components/text/components/panel/components/insert-katex/function.svg","components/table/components/col/components/text/components/panel/components/insert-katex/InsertKatex.tsx","components/table/components/col/components/text/components/panel/Panel.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/remove/delete.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/remove/Remove.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/duck/operations.ts","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-left/pic-left.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-left/FloatLeft.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-right/pic-right.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-right/FloatRight.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-center/pic-center.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-center/FloatCenter.tsx","components/table/components/col/components/text/components/custom-blocks/duck/operations.ts","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/change-size/crop.svg","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/change-size/ChangeSize.tsx","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/link/link.svg","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/link/Link.tsx","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/ImageMenu.tsx","components/table/components/col/components/text/components/custom-blocks/components/image/Image.tsx","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/components/change-size/duck/constants.ts","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/components/change-size/ChangeSize.tsx","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/KatexMenu.tsx","components/table/components/col/components/text/components/custom-blocks/components/katex/Katex.tsx","components/table/components/col/components/text/components/custom-blocks/CustomBlock.tsx","components/table/components/col/components/text/duck/constants.ts","components/table/components/col/components/text/Text.tsx","components/table/components/col/Col.tsx","components/table/duck/constants.ts","components/table/components/row/components/add-row/duck/utils.ts","components/table/components/row/components/add-row/AddRow.tsx","components/table/components/row/components/remove-row/assets/close-circle.svg","components/table/components/row/components/remove-row/RemoveRow.tsx","components/table/components/row/Row.tsx","components/table/components/selection-menu/components/merge/duck/operations.ts","components/table/components/selection-menu/components/merge/Merge.tsx","components/table/components/selection-menu/components/unmerge/Unmerge.tsx","components/table/components/selection-menu/components/unmerge/duck/operations.ts","components/table/components/selection-menu/components/change-background/ChangeBackground.tsx","components/table/components/selection-menu/components/change-type/duck/constants.ts","components/table/components/selection-menu/components/change-type/assets/check-circle.svg","components/table/components/selection-menu/components/change-type/ChangeType.tsx","components/table/components/selection-menu/assets/setting.svg","components/table/components/selection-menu/SelectionMenu.tsx","components/table/components/selection-menu/duck/utils.ts","components/table/components/tech-row/duck/utils.ts","components/table/components/tech-row/components/add-col/AddCol.tsx","components/table/components/tech-row/components/remove-col/assets/close-circle.svg","components/table/components/tech-row/components/remove-col/RemoveCol.tsx","components/table/components/tech-row/components/change-width/ChangeWidth.tsx","components/table/components/tech-row/components/tech-col/TechCol.tsx","components/table/components/tech-row/TechRow.tsx","components/table/Table.tsx","App.tsx","index.tsx","components/table/components/col/components/text/components/panel/Panel.module.css","components/table/components/col/components/text/components/panel/components/headers/Headers.module.css","components/table/components/col/components/text/components/panel/components/insert-katex/InsertKatex.module.css","components/table/components/selection-menu/components/change-background/ChangeBackground.module.css","components/table/components/button/Button.module.css","components/table/components/col/components/text/components/panel/components/font-size/FontSize.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/change-size/ChangeSize.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/link/Link.module.css","components/table/components/col/components/text/components/custom-blocks/components/katex/Katex.module.css","components/table/components/selection-menu/components/change-type/ChangeType.module.css","components/table/components/selection-menu/SelectionMenu.module.css","components/table/components/col/Col.module.css","components/table/Table.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/Image.module.css","components/table/components/col/components/text/Text.module.css","components/table/components/row/components/add-row/AddRow.module.css","components/table/components/row/Row.module.css","components/table/components/tech-row/components/add-col/AddCol.module.css","components/table/components/tech-row/components/tech-col/TechCol.module.css"],"names":["module","exports","TableContext","React","initialTableState","touched","selectionState","selectedCols","selected","initialRowsState","id","cols","content","type","display","setStartSelection","createStandardAction","setEndSelection","clearSelection","selectRow","selectCol","rowsUpdate","updateColContent","updateColBackground","updateColType","removeRow","setColWidth","removeCol","tableStateActions","rowsStateActions","getRange","start","end","row","min","rowId","max","col","colId","belongs","current","range","isSingleSelection","firstCol","rowSpan","colSpan","length","tableStateReducer","createReducer","handleAction","state","payload","positionStart","positionEnd","finished","rows","stateStart","push","allocatedRow","map","r","rowsStateReducer","background","newCols","width","newRows","decreasedParent","forEach","rowIndex","colToDelete","resources","newResources","reduce","acc","resource","omit","resourceFor","parentCol","parentId","includes","newColSpan","item","splice","index","rowToRemove","colIndex","slice","newRowSpan","Button","children","onClick","onMouseDown","onBlur","className","style","active","disabled","small","e","undefined","classNames","styles","wrapper","Bold","editorState","setEditorState","useState","bold","setBold","useEffect","inlineStyle","getCurrentInlineStyle","has","preventDefault","RichUtils","toggleInlineStyle","src","icon","alt","Italic","italic","setItalic","Underline","underline","setUnderline","UnorderedList","unordered","setUnordered","blockType","getCurrentBlockType","toggleBlockType","OrderedList","ordered","setOrdered","HEADERS","label","value","getLabel","header","Headers","setType","opened","setOpened","headerHandler","select","openButton","list","TextContext","FONT_SIZES","getFontSize","toJS","indexOf","FontSize","useContext","fontSize","setFontSize","currentFontSize","font","find","size","fontSelect","newState","changeFontSizeHandler","fontButton","AlignRight","right","setRight","AlignLeft","left","setLeft","AlignCenter","getBlockStyle","block","getType","getBlockTypeByKey","blockKey","getCurrentContent","getBlockForKey","removeBlock","contentState","before","getBlockBefore","getKey","after","getBlockAfter","selectionOfAtomicBlock","getSelection","merge","anchorKey","anchorOffset","focusKey","focusOffset","contentStateWithoutEntity","Modifier","applyEntity","editorStateWithoutEntity","EditorState","contentStateWithoutBlock","removeRange","InsertImage","inputRef","useRef","ref","onChange","fileInput","Promise","resolve","reject","files","reader","FileReader","readAsDataURL","onload","result","onerror","error","then","blob","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","input","click","InsertKatex","String","raw","expression","setExpression","target","textarea","buttons","insertButton","Panel","separator","Remove","removeIcon","changeAtomicFloating","oldSelection","newSelection","createAtomicSelection","acceptSelection","selection","setBlockType","setAtomicBlockType","prevEditorState","FloatLeft","alignLeft","setAlignLeft","FloatRight","alignRight","setAlignRight","alignCenter","setAlignCenter","changeBlockData","data","entityAt","getEntityAt","newContent","mergeEntityData","ChangeSize","setEditMode","widthInputRef","getEntity","getData","height","setSize","focus","closeHandler","onChangeHandler","prevSize","name","stopPropagation","onDoubleClick","onOutsideClick","formTitle","autoComplete","forceSelection","changeButton","Link","hrefInputRef","href","setHref","ImageMenu","FloatCenter","rel","Image","entity","editMode","imageRef","clickHandler","prevOpened","SIZES","KatexMenu","Katex","containerRef","katex","render","throwOnError","container","CustomBlock","setSelected","getAnchorKey","customStyleMap","FONT_SIZE_9","FONT_SIZE_10","FONT_SIZE_13","FONT_SIZE_14","FONT_SIZE_16","FONT_SIZE_18","FONT_SIZE_21","FONT_SIZE_24","Text","dispatchRowsState","editorRef","createEmpty","createWithContent","convertFromRaw","console","log","Provider","editor","convertToRaw","blockStyleFn","blockRendererFn","component","editable","readOnly","handleKeyCommand","command","beforeBlock","getFocusKey","getBeforeBlock","getEndOffset","Col","memo","colData","setPositionEnd","rowsState","tableState","dispatchTableState","onMouseUp","onMouseEnter","emptyCol","BACKGROUND_COLORS","generateNewRows","prevRow","nextRow","newRow","newCol","prevCol","nextCol","increasedCols","AddRow","addButton","RemoveRow","setRowSelected","Row","rowData","rowSelected","setWidth","tdRef","techCol","closest","offsetWidth","selectArea","mergeAvailable","context","singleSelection","mergedCols","isIntersects","maxColId","maxRowId","startColId","startRowId","get","this","mergedCol","colRange","selectionRange","Math","bottom","top","colSquare","intersects","Merge","targetCol","prevRowId","prevColId","count","selectedCol","currentPosition","isTargetCol","isBelongs","mergeCols","Unmerge","canUnmerged","setCanUnmerged","position","selectionStart","unmergeColPosition","unmergeCol","resourceCol","unmergeCols","ChangeBackground","changeColorHandler","color","colors","colorButton","transparent","TYPES","ChangeType","currentType","setCurrentType","selectedRowId","selectedColId","types","SelectionMenu","setPosition","cell","document","getElementById","offsetTop","offsetLeft","getMenuPosition","settingButton","menu","generateRowsWithNewCol","currentResource","lineContinuation","AddCol","RemoveCol","setColSelected","ChangeWidth","tableHeight","pressed","setPressed","setStart","onUpHandler","screenX","onMouseLeave","onMouseMove","div","TechCol","colSelected","setHeight","td","offsetHeight","TechRow","setCols","Array","getColCount","fill","Table","useReducer","table","filled","App","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.684dde1d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InsertImage_input__UORoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ImageMenu_wrapper__hyI8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"ChangeSize_select__2PxxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KatexMenu_wrapper__1QQ__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveRow_wrapper__QxJap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveCol_wrapper__2M4QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeWidth_wrapper__Ul3dY\"};","import * as React from \"react\";\nimport { TableContext as TableContextType } from \"./types\";\n\nexport const TableContext = React.createContext<TableContextType>(null as any);\n","import { TableState, RowsState } from \"./types\";\n\nexport const initialTableState: TableState = {\n  touched: false,\n  selectionState: {\n    selectedCols: [],\n    selected: false,\n  },\n};\n\nexport const initialRowsState: RowsState = [\n  {\n    id: 1,\n    cols: [\n      {\n        content: \"\",\n        type: \"text\",\n        display: true,\n        id: 1,\n      },\n      {\n        content: \"\",\n        type: \"text\",\n        display: true,\n        id: 2,\n      },\n    ],\n  },\n];\n","import { createStandardAction } from \"typesafe-actions\";\nimport {\n  PositionStateType,\n  RowType,\n  SelectionStateType,\n} from \"./types\";\n\nconst setStartSelection = createStandardAction(\"TABLE/SET_START_SELECTION\")<{\n  positionStart: PositionStateType;\n}>();\n\nconst setEndSelection = createStandardAction(\"TABLE/SET_END_SELECTION\")<{\n  positionEnd: PositionStateType;\n  finished: boolean;\n  rows: RowType[];\n}>();\n\nconst clearSelection = createStandardAction(\"TABLE/CLEAR_SELECTION\")();\n\nconst selectRow = createStandardAction(\"TABLE/SELECT_ROW\")<{\n  rowId: number;\n  rows: RowType[];\n}>();\n\nconst selectCol = createStandardAction(\"TABLE/SELECT_COL\")<{\n  colId: number;\n  rows: RowType[];\n}>();\n\nconst rowsUpdate = createStandardAction(\"TABLE/ROWS_UPDATE\")<{\n  rows: RowType[];\n}>();\n\nconst updateColContent = createStandardAction(\"TABLE/UPDATE_COL_CONTENT\")<{\n  rowId: number;\n  colId: number;\n  content: any;\n}>();\n\nconst updateColBackground = createStandardAction(\n  \"TABLE/UPDATE_COL_BACKGROUND\"\n)<{\n  selectionState: SelectionStateType;\n  background: string | undefined;\n}>();\n\nconst updateColType = createStandardAction(\"TABLE/UPDATE_COL_TYPE\")<{\n  selectionState: SelectionStateType;\n  type: string;\n}>();\n\nconst removeRow = createStandardAction(\"TABLE/REMOVE_ROW\")<{\n  rowId: number;\n}>();\n\nconst setColWidth = createStandardAction(\"TABLE/SET_COL_WIDTH\")<{\n  colId: number;\n  width: number;\n}>();\n\nconst removeCol = createStandardAction(\"TABLE/REMOVE_COL\")<{\n  colId: number;\n}>();\n\nconst tableStateActions = {\n  setStartSelection,\n  setEndSelection,\n  clearSelection,\n  selectCol,\n  selectRow,\n};\n\nconst rowsStateActions = {\n  rowsUpdate,\n  updateColContent,\n  updateColBackground,\n  updateColType,\n  removeRow,\n  setColWidth,\n  removeCol,\n};\n\nexport { tableStateActions, rowsStateActions };\n","import {\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectionStateType,\n} from \"./types\";\n\nexport const getRange = (\n  start: PositionStateType,\n  end: PositionStateType\n): RangeType => ({\n  row: {\n    min: start.rowId < end.rowId ? start.rowId : end.rowId,\n    max: start.rowId < end.rowId ? end.rowId : start.rowId,\n  },\n  col: {\n    min: start.colId < end.colId ? start.colId : end.colId,\n    max: start.colId < end.colId ? end.colId : start.colId,\n  },\n});\n\nexport const belongs = (\n  start: PositionStateType,\n  end: PositionStateType,\n  current: PositionStateType\n): boolean => {\n  const range = getRange(start, end);\n\n  return (\n    current.rowId >= range.row.min &&\n    current.rowId <= range.row.max &&\n    current.colId >= range.col.min &&\n    current.colId <= range.col.max\n  );\n};\n\nexport const isSingleSelection = (\n  selectionState: SelectionStateType\n): boolean => {\n  const { selectedCols, start, end } = selectionState;\n  const firstCol = selectedCols[0];\n  const rowSpan = firstCol?.rowSpan ? firstCol.rowSpan - 1 : 0;\n  const colSpan = firstCol?.colSpan ? firstCol.colSpan - 1 : 0;\n\n  if (start && end && start.rowId === end.rowId && start.colId === end.colId) {\n    return true;\n  }\n\n  return (\n    (rowSpan > 0 || colSpan > 0) &&\n    !!start &&\n    !!end &&\n    end.rowId === start.rowId + rowSpan &&\n    end.colId === start.colId + colSpan &&\n    selectedCols.length > 1\n  );\n};\n\nexport const intersects = (\n  colRange: RangeType,\n  selectionRange: RangeType\n): \"full\" | \"part\" | \"not\" => {\n  const left = Math.max(colRange.col.min - 1, selectionRange.col.min - 1);\n  const right = Math.min(colRange.col.max, selectionRange.col.max);\n  const bottom = Math.max(colRange.row.min - 1, selectionRange.row.min - 1);\n  const top = Math.min(colRange.row.max, selectionRange.row.max);\n  const colSquare =\n    (colRange.col.max - colRange.col.min + 1) *\n    (colRange.row.max - colRange.row.min + 1);\n\n  if (left < right && bottom < top) {\n    const intersectsSquare = (right - left) * (top - bottom);\n    if (intersectsSquare === colSquare) {\n      return \"full\";\n    } else {\n      return \"part\";\n    }\n  } else {\n    return \"not\";\n  }\n};\n\nexport const getCol = (rows: RowType[], position: PositionStateType): ColType =>\n  rows[position.rowId - 1].cols[position.colId - 1];\n","import { ActionType, createReducer } from \"typesafe-actions\";\nimport { omit } from \"lodash-es\";\nimport { initialRowsState, initialTableState } from \"./state\";\nimport { rowsStateActions, tableStateActions } from \"./actions\";\nimport * as Types from \"./types\";\nimport { ColType, PositionStateType, RowType, SelectedColsType } from \"./types\";\nimport { belongs, getRange } from \"./utils\";\n\ntype TableStateAction = ActionType<typeof tableStateActions>;\ntype RowsStateAction = ActionType<typeof rowsStateActions>;\n\nexport const tableStateReducer = createReducer<\n  Types.TableState,\n  TableStateAction\n>(initialTableState)\n  .handleAction(\n    tableStateActions.setStartSelection,\n    (state, { payload: { positionStart } }) => ({\n      touched: true,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n        start: positionStart,\n      },\n    })\n  )\n  .handleAction(\n    tableStateActions.setEndSelection,\n    (state, { payload: { positionEnd, finished, rows } }) => {\n      const selectedCols: SelectedColsType[] = [];\n      const stateStart = state.selectionState.start;\n\n      if (finished && stateStart) {\n        const range = getRange(stateStart, positionEnd);\n        const start = { rowId: range.row.min, colId: range.col.min };\n        const end = { rowId: range.row.max, colId: range.col.max };\n\n        for (let rowId = start.rowId; rowId <= end.rowId; rowId += 1) {\n          const col = { rowId };\n\n          for (let colId = start.colId; colId <= end.colId; colId += 1) {\n            const colSpan = rows[rowId - 1].cols[colId - 1].colSpan;\n            const rowSpan = rows[rowId - 1].cols[colId - 1].rowSpan;\n\n            selectedCols.push({\n              ...col,\n              colId,\n              ...(rowSpan ? { rowSpan } : {}),\n              ...(colSpan ? { colSpan } : {}),\n            });\n          }\n        }\n      }\n\n      return {\n        ...state,\n        ...(finished ? { touched: false } : {}),\n        selectionState: {\n          ...state.selectionState,\n          selectedCols,\n          ...(finished ? { selected: true } : {}),\n          end: positionEnd,\n        },\n      };\n    }\n  )\n  .handleAction(tableStateActions.clearSelection, (state) => ({\n    ...state,\n    selectionState: {\n      selectedCols: [],\n      selected: false,\n    },\n  }))\n  .handleAction(\n    tableStateActions.selectRow,\n    (state, { payload: { rowId, rows } }) => {\n      const allocatedRow = rows[rowId - 1];\n\n      const selectedCols = allocatedRow.cols.map((col: ColType) => ({\n        rowId,\n        colId: col.id,\n      }));\n\n      return {\n        ...state,\n        selectionState: {\n          selected: true,\n          selectedCols,\n          start: { rowId, colId: allocatedRow.cols[0].id },\n          end: {\n            rowId,\n            colId: allocatedRow.cols[allocatedRow.cols.length - 1].id,\n          },\n        },\n      };\n    }\n  )\n  .handleAction(\n    tableStateActions.selectCol,\n    (state, { payload: { colId, rows } }) => {\n      const selectedCols: PositionStateType[] = [];\n\n      for (let r = 1; r <= rows.length; r += 1) {\n        selectedCols.push({ rowId: r, colId });\n      }\n\n      return {\n        ...state,\n        selectionState: {\n          selected: true,\n          selectedCols,\n          start: { rowId: rows[0].id, colId },\n          end: {\n            rowId: rows[rows.length - 1].id,\n            colId,\n          },\n        },\n      };\n    }\n  );\n\nexport const rowsStateReducer = createReducer<Types.RowsState, RowsStateAction>(\n  initialRowsState\n)\n  .handleAction(\n    rowsStateActions.rowsUpdate,\n    (state, { payload: { rows } }) => rows\n  )\n  .handleAction(\n    rowsStateActions.updateColBackground,\n    (state, { payload: { selectionState, background } }) =>\n      state.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, background };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      })\n  )\n  .handleAction(\n    rowsStateActions.updateColType,\n    (state, { payload: { selectionState, type } }) =>\n      state.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, type };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      })\n  )\n  .handleAction(\n    rowsStateActions.setColWidth,\n    (state, { payload: { colId, width } }) =>\n      state.map((row) => {\n        const newCols = row.cols.map((col: ColType) => ({\n          ...col,\n          ...(col.id === colId ? { width } : {}),\n        }));\n\n        return { ...row, cols: newCols };\n      })\n  )\n  .handleAction(\n    rowsStateActions.updateColContent,\n    (state, { payload: { colId, rowId, content } }) =>\n      state.map((row: RowType) => ({\n        ...row,\n        ...(row.id === rowId\n          ? {\n              cols: row.cols.map((col: ColType) => ({\n                ...col,\n                ...(col.id === colId ? { ...col, content } : col),\n              })),\n            }\n          : {}),\n      }))\n  )\n  .handleAction(rowsStateActions.removeCol, (state, { payload: { colId } }) => {\n    const newRows = state;\n    const decreasedParent: string[] = [];\n\n    newRows.forEach((row: RowType, rowIndex) => {\n      const colToDelete = row.cols[colId - 1];\n\n      if (colToDelete.resources && colToDelete.colSpan) {\n        const { resources } = colToDelete;\n\n        const newResources = resources.reduce(\n          (acc: PositionStateType[], resource) => {\n            if (\n              resource.colId !==\n              colToDelete.id + (colToDelete.colSpan || 0) - 1\n            ) {\n              acc.push(resource);\n            }\n            return acc;\n          },\n          []\n        );\n\n        newRows[rowIndex].cols[colId] = {\n          ...omit(colToDelete, [\"colSpan\", \"resources\"]),\n          ...(colToDelete.colSpan && colToDelete.colSpan > 2\n            ? { colSpan: colToDelete.colSpan - 1 }\n            : {}),\n        };\n\n        if (newResources.length > 0) {\n          newRows[rowIndex].cols[colId].resources = newResources;\n        }\n      }\n\n      if (colToDelete.resourceFor && colToDelete.resourceFor.colId !== colId) {\n        let parentCol =\n          newRows[colToDelete.resourceFor.rowId - 1].cols[\n            colToDelete.resourceFor.colId - 1\n          ];\n\n        const parentId = `${colToDelete.resourceFor.rowId}-${colToDelete.resourceFor.colId}`;\n\n        if (!decreasedParent.includes(parentId)) {\n          decreasedParent.push(parentId);\n          const newColSpan = (parentCol.colSpan || 1) - 1;\n          const newResources = parentCol.resources?.reduce(\n            (acc: PositionStateType[], item) => {\n              if (item.colId !== parentCol.id + (parentCol.colSpan || 0) - 1) {\n                acc.push(item);\n              }\n              return acc;\n            },\n            []\n          );\n\n          if (newColSpan > 1) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].colSpan = newColSpan;\n          } else {\n            parentCol = omit(parentCol, [\"colSpan\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n\n          if (newResources && newResources.length > 0) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].resources = newResources;\n          } else {\n            parentCol = omit(parentCol, [\"resources\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n        }\n      }\n\n      row.cols.splice(colId - 1, 1);\n\n      row.cols = row.cols.map((col: ColType, index) => {\n        return {\n          ...col,\n          id: index + 1,\n        };\n      });\n    });\n\n    return newRows.map((row: RowType, index: number) => {\n      const newCols = row.cols.map((col: ColType) => {\n        const newResources = col.resources?.map((resource) => ({\n          ...resource,\n          colId: resource.colId > colId ? resource.colId - 1 : resource.colId,\n        }));\n\n        return {\n          ...col,\n          ...(newResources ? { resources: newResources } : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId - 1,\n                },\n              }\n            : {}),\n        };\n      });\n\n      return {\n        ...row,\n        id: index + 1,\n        cols: newCols,\n      };\n    });\n  })\n  .handleAction(rowsStateActions.removeRow, (state, { payload: { rowId } }) => {\n    const rowToRemove = state[rowId - 1];\n    const newRows = state;\n    const decreasedParent: string[] = [];\n\n    rowToRemove.cols.forEach((colToDelete: ColType, colIndex) => {\n      if (colToDelete.resources && colToDelete.rowSpan) {\n        const { resources } = colToDelete;\n\n        const newResources = resources?.slice(\n          0,\n          resources.length - (colToDelete.colSpan || 1)\n        );\n\n        newRows[rowId].cols[colIndex] = {\n          ...omit(colToDelete, [\"rowSpan\", \"resources\"]),\n          ...(colToDelete.rowSpan && colToDelete.rowSpan > 2\n            ? { rowSpan: colToDelete.rowSpan - 1 }\n            : {}),\n        };\n\n        if (newResources.length > 0 && newRows[rowId].cols[colIndex]) {\n          newRows[rowId].cols[colIndex].resources = newResources;\n        }\n      }\n\n      if (colToDelete.resourceFor && colToDelete.resourceFor.rowId !== rowId) {\n        let parentCol =\n          newRows[colToDelete.resourceFor.rowId - 1].cols[\n            colToDelete.resourceFor.colId - 1\n          ];\n\n        const parentId = `${colToDelete.resourceFor.rowId}-${colToDelete.resourceFor.colId}`;\n\n        if (!decreasedParent.includes(parentId)) {\n          decreasedParent.push(parentId);\n          const newRowSpan = (parentCol.rowSpan || 1) - 1;\n          const newResources = parentCol.resources?.slice(\n            0,\n            parentCol.resources.length - (parentCol.colSpan || 1)\n          );\n\n          if (newRowSpan > 1) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].rowSpan = newRowSpan;\n          } else {\n            parentCol = omit(parentCol, [\"rowSpan\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n\n          if (newResources && newResources.length > 0) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].resources = newResources;\n          } else {\n            parentCol = omit(parentCol, [\"resources\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n        }\n      }\n    });\n\n    newRows.splice(rowId - 1, 1);\n\n    return newRows.map((row: RowType, index: number) => {\n      const newCols = row.cols.map((col: ColType) => {\n        return {\n          ...col,\n          ...(col.resourceFor && col.resourceFor.rowId > rowId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  rowId: col.resourceFor.rowId - 1,\n                },\n              }\n            : {}),\n        };\n      });\n\n      return {\n        ...row,\n        id: index + 1,\n        cols: newCols,\n      };\n    });\n  });\n","export default __webpack_public_path__ + \"static/media/bold.aaa73dad.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.css\";\n\ninterface ButtonType {\n  onClick?: (e: any) => any;\n  onMouseDown?: (e: any) => any;\n  onBlur?: () => any;\n  className?: string;\n  active?: boolean;\n  style?: any;\n  disabled?: boolean;\n  small?: boolean;\n}\n\nconst Button: React.FC<ButtonType> = ({\n  children,\n  onClick,\n  onMouseDown,\n  onBlur,\n  className,\n  style,\n  active = false,\n  disabled = false,\n  small,\n}) => (\n  <button\n    disabled={disabled}\n    onClick={onClick ? (e: any) => onClick(e) : undefined}\n    onMouseDown={onMouseDown ? (e: any) => onMouseDown(e) : undefined}\n    onBlur={onBlur}\n    className={classNames(styles.wrapper, className, {\n      [styles.active]: active,\n      [styles.disabled]: disabled,\n      [styles.small]: small,\n    })}\n    style={style}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./bold.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Bold: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const [bold, setBold] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const inlineStyle = editorState.getCurrentInlineStyle();\n    setBold(inlineStyle.has(\"BOLD\"));\n  }, [editorState]);\n\n  const boldHandler = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"BOLD\"));\n  };\n\n  return (\n    <Button\n      active={bold}\n      small\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={boldHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Bold;\n","export default __webpack_public_path__ + \"static/media/italic.8e03cb99.svg\";","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./italic.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Italic: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const [italic, setItalic] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const inlineStyle = editorState.getCurrentInlineStyle();\n    setItalic(inlineStyle.has(\"ITALIC\"));\n  }, [editorState]);\n\n  const italicHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"ITALIC\"));\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={italic}\n      small\n      onClick={italicHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Italic;\n","export default __webpack_public_path__ + \"static/media/underline.037f1cd5.svg\";","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./underline.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Underline: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const [underline, setUnderline] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const inlineStyle = editorState.getCurrentInlineStyle();\n    setUnderline(inlineStyle.has(\"UNDERLINE\"));\n  }, [editorState]);\n\n  const underlineHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"UNDERLINE\"));\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={underline}\n      small\n      onClick={underlineHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Underline;\n","export default __webpack_public_path__ + \"static/media/unordered-list.d3b3a77e.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./unordered-list.svg\";\n\ninterface UnorderedListType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst UnorderedList: React.FC<UnorderedListType> = ({\n  setEditorState,\n  editorState,\n}) => {\n  const [unordered, setUnordered] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setUnordered(blockType === \"unordered-list-item\");\n  }, [editorState]);\n\n  const listHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(\n      RichUtils.toggleBlockType(editorState, \"unordered-list-item\")\n    );\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={unordered}\n      small\n      onClick={listHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default UnorderedList;\n","export default __webpack_public_path__ + \"static/media/ordered-list.f732fa03.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./ordered-list.svg\";\n\ninterface UnorderedListType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst OrderedList: React.FC<UnorderedListType> = ({\n  setEditorState,\n  editorState,\n}) => {\n  const [ordered, setOrdered] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setOrdered(blockType === \"ordered-list-item\");\n  }, [editorState]);\n\n  const listHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"ordered-list-item\"));\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={ordered}\n      small\n      onClick={listHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default OrderedList;\n","export const HEADERS = [\n  { label: \"header 1\", value: \"header-one\" },\n  { label: \"header 2\", value: \"header-two\" },\n  { label: \"header 3\", value: \"header-three\" },\n  { label: \"header 4\", value: \"header-four\" },\n  { label: \"header 5\", value: \"header-five\" },\n  { label: \"header 6\", value: \"header-six\" },\n];\n","import { HEADERS } from \"./constants\";\n\nexport const getLabel = (value: string): string => {\n  let label = \"unstyled\";\n\n  HEADERS.forEach((header) => {\n    if (header.value === value) {\n      label = header.label;\n    }\n  });\n\n  return label;\n};\n","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport { HEADERS } from \"./duck/constants\";\nimport { getLabel } from \"./duck/utils\";\nimport styles from \"./Headers.module.css\";\n\ninterface HeadersType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Headers: React.FC<HeadersType> = ({ editorState, setEditorState }) => {\n  const [type, setType] = React.useState(\"unstyled\");\n  const [opened, setOpened] = React.useState(false);\n\n  React.useEffect(() => {\n    setType(RichUtils.getCurrentBlockType(editorState));\n  }, [editorState]);\n\n  const headerHandler = (value: string) => {\n    setType(value);\n    setEditorState(RichUtils.toggleBlockType(editorState, value));\n    setOpened(false);\n  };\n\n  return (\n    <div className={styles.select}>\n      <Button\n        onClick={() => setOpened(!opened)}\n        small\n        className={styles.openButton}\n        onMouseDown={(e) => e.preventDefault()}\n      >\n        {getLabel(type)}\n      </Button>\n      {opened && (\n        <ul className={styles.list}>\n          <li>\n            <button\n              onMouseDown={(e) => e.preventDefault()}\n              onClick={() => headerHandler(\"unstyled\")}\n              className={styles.header}\n            >\n              unstyled\n            </button>\n          </li>\n          {HEADERS.map((header) => (\n            <li key={header.label}>\n              <button\n                onMouseDown={(e) => e.preventDefault()}\n                onClick={() => headerHandler(header.value)}\n                className={styles.header}\n              >\n                {header.label}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Headers;\n","import * as React from \"react\";\nimport { TextContext as TextContextType } from \"./types\";\n\nexport const TextContext = React.createContext<TextContextType>(null as any);\n","export const FONT_SIZES = [\n  { label: \"9 px\", value: \"FONT_SIZE_9\" },\n  { label: \"10 px\", value: \"FONT_SIZE_10\" },\n  { label: \"13 px\", value: \"FONT_SIZE_13\" },\n  { label: \"14 px\", value: \"FONT_SIZE_14\" },\n  { label: \"16 px\", value: \"FONT_SIZE_16\" },\n  { label: \"18 px\", value: \"FONT_SIZE_18\" },\n  { label: \"21 px\", value: \"FONT_SIZE_21\" },\n  { label: \"24 px\", value: \"FONT_SIZE_24\" },\n];\n","import { EditorState } from \"draft-js\";\n\nexport const getFontSize = (editorState: EditorState) => {\n  const inlineStyle = editorState.getCurrentInlineStyle();\n  const stylesArray = inlineStyle.toJS();\n\n  return stylesArray.reduce((acc: string[], current: string) => {\n    if (current.indexOf(\"FONT_SIZE\") > -1) {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n};\n","import React from \"react\";\nimport { RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { FONT_SIZES } from \"./duck/constants\";\nimport { getFontSize } from \"./duck/utils\";\nimport styles from \"./FontSize.module.css\";\n\nconst FontSize: React.FC = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [fontSize, setFontSize] = React.useState(\"13 px\");\n  const [opened, setOpened] = React.useState(false);\n\n  React.useEffect(() => {\n    const currentFontSize = getFontSize(editorState)[0];\n    if (currentFontSize) {\n      const font = FONT_SIZES.find((size) => size.value === currentFontSize);\n      setFontSize(font?.label || \"\");\n    }\n  }, [editorState]);\n\n  const changeFontSizeHandler = (size: {\n    label: string;\n    value: string;\n  }): void => {\n    const currentFontSize = getFontSize(editorState)[0];\n\n    const newState = RichUtils.toggleInlineStyle(\n      currentFontSize\n        ? RichUtils.toggleInlineStyle(editorState, currentFontSize)\n        : editorState,\n      size.value\n    );\n    setEditorState(newState);\n    setOpened(false);\n  };\n\n  return (\n    <div className={styles.fontSelect}>\n      <Button\n        onClick={() => setOpened(!opened)}\n        onMouseDown={(e) => e.preventDefault()}\n        small\n        className={styles.openButton}\n      >\n        {fontSize}\n      </Button>\n      {opened && (\n        <ul className={styles.list}>\n          {FONT_SIZES.map((font) => (\n            <li key={font.value}>\n              <button\n                onClick={() => changeFontSizeHandler(font)}\n                onMouseDown={(e) => e.preventDefault()}\n                className={styles.fontButton}\n              >\n                {font.label}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default FontSize;\n","export default __webpack_public_path__ + \"static/media/align-right.9b80b95b.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./align-right.svg\";\n\ninterface AlignRightType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst AlignRight: React.FC<AlignRightType> = ({\n  editorState,\n  setEditorState,\n}) => {\n  const [right, setRight] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setRight(blockType === \"right\");\n  }, [editorState]);\n\n  const rightHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"right\"));\n  };\n\n  return (\n    <Button\n      active={right}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={rightHandler}\n      small\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default AlignRight;\n","export default __webpack_public_path__ + \"static/media/align-left.39c3c5bc.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./align-left.svg\";\n\ninterface AlignRightType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst AlignLeft: React.FC<AlignRightType> = ({\n  editorState,\n  setEditorState,\n}) => {\n  const [left, setLeft] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setLeft(blockType === \"left\");\n  }, [editorState]);\n\n  const leftHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"left\"));\n  };\n\n  return (\n    <Button\n      active={left}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={leftHandler}\n      small\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default AlignLeft;\n","export default __webpack_public_path__ + \"static/media/align-center.6b7955c5.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./align-center.svg\";\n\ninterface AlignRightType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst AlignCenter: React.FC<AlignRightType> = ({\n  editorState,\n  setEditorState,\n}) => {\n  const [right, setRight] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setRight(blockType === \"center\");\n  }, [editorState]);\n\n  const centerHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"center\"));\n  };\n\n  return (\n    <Button\n      active={right}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={centerHandler}\n      small\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default AlignCenter;\n","export default __webpack_public_path__ + \"static/media/picture.3e97766c.svg\";","import {\n  ContentBlock,\n  EditorState,\n  SelectionState,\n  ContentState,\n  Modifier,\n  genKey,\n} from \"draft-js\";\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  const type = block.getType();\n  let className = \"\";\n\n  if (type.indexOf(\"left\") > -1) {\n    className = `${className} align-left`;\n  }\n\n  if (type.indexOf(\"center\") > -1) {\n    className = `${className} align-center`;\n  }\n\n  if (type.indexOf(\"right\") > -1) {\n    className = `${className} align-right`;\n  }\n\n  if (type.indexOf(\"floatLeft\") > -1) {\n    className = `${className} float-left`;\n  }\n\n  if (type.indexOf(\"floatRight\") > -1) {\n    className = `${className} float-right`;\n  }\n\n  if (type.indexOf(\"floatCenter\") > -1) {\n    className = `${className} float-center`;\n  }\n\n  return className;\n};\n\nexport const getBlockTypeByKey = (\n  editorState: EditorState,\n  blockKey: string\n): string => editorState.getCurrentContent().getBlockForKey(blockKey).getType();\n\nexport const getImageInfo = (fileInput: HTMLInputElement): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const { files } = fileInput;\n    const reader = new FileReader();\n    if (files) {\n      reader.readAsDataURL(files[0]);\n    }\n\n    reader.onload = () => {\n      resolve(reader.result as string);\n    };\n\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const createAtomicSelection = (\n  editorState: EditorState,\n  blockKey: string\n): SelectionState => {\n  const selection = editorState.getSelection();\n\n  return selection.merge({\n    anchorKey: blockKey,\n    anchorOffset: 0,\n    focusKey: blockKey,\n    focusOffset: 0,\n  });\n};\n\nexport const setAtomicBlockType = (\n  editorState: EditorState,\n  selection: SelectionState,\n  type: string\n) =>\n  EditorState.push(\n    editorState,\n    Modifier.setBlockType(editorState.getCurrentContent(), selection, type),\n    \"change-block-type\"\n  );\n\nexport const getNextBlock = (editorState: EditorState): ContentBlock | null => {\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const anchorKey = selection.getAnchorKey();\n  const focusKey = selection.getFocusKey();\n\n  // single line selection\n  if (anchorKey === focusKey) {\n    const after = contentState.getBlockAfter(anchorKey);\n\n    if (after) {\n      return after;\n    }\n  }\n\n  return null;\n};\n\nexport const getBeforeBlock = (\n  editorState: EditorState\n): ContentBlock | null => {\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const anchorKey = selection.getAnchorKey();\n  const focusKey = selection.getFocusKey();\n\n  // single line selection\n  if (anchorKey === focusKey) {\n    const before = contentState.getBlockBefore(anchorKey);\n\n    if (before) {\n      return before;\n    }\n  }\n\n  return null;\n};\n\nexport const addEmptyBlock = (editorState: EditorState, blockKey: string) => {\n  const contentState = editorState.getCurrentContent();\n\n  const newBlock = new ContentBlock({\n    key: genKey(),\n    type: \"unstyled\",\n    text: \"\",\n  });\n  const newBlockMap = contentState\n    .getBlockMap()\n    .set(newBlock.getKey(), newBlock);\n\n  return EditorState.push(\n    editorState,\n    ContentState.createFromBlockArray(newBlockMap.toArray()),\n    \"split-block\"\n  );\n};\n\nexport const removeBlock = (\n  editorState: EditorState,\n  blockKey: string\n): EditorState => {\n  const contentState = editorState.getCurrentContent();\n  const block = contentState.getBlockForKey(blockKey);\n  const before = contentState.getBlockBefore(block.getKey());\n  const after = contentState.getBlockAfter(block.getKey());\n  const selection = editorState.getSelection();\n\n  const selectionOfAtomicBlock = selection.merge({\n    anchorKey: before ? before.getKey() : blockKey,\n    anchorOffset: 0,\n    focusKey: after ? after.getKey() : blockKey,\n    focusOffset: 0,\n  });\n\n  const contentStateWithoutEntity = Modifier.applyEntity(\n    contentState,\n    selectionOfAtomicBlock,\n    null\n  );\n\n  const editorStateWithoutEntity = EditorState.push(\n    editorState,\n    contentStateWithoutEntity,\n    \"apply-entity\"\n  );\n\n  const contentStateWithoutBlock = Modifier.removeRange(\n    contentStateWithoutEntity,\n    selectionOfAtomicBlock,\n    \"backward\"\n  );\n\n  return EditorState.push(\n    editorStateWithoutEntity,\n    contentStateWithoutBlock,\n    \"remove-range\"\n  );\n};\n","import React from \"react\";\nimport icon from \"./picture.svg\";\nimport { EditorState, AtomicBlockUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { getImageInfo } from \"../../../../duck/utils\";\nimport styles from \"./InsertImage.module.css\";\n\nconst InsertImage: React.FC = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const changeFileHandler = () => {\n    if (inputRef.current) {\n      getImageInfo(inputRef.current).then((blob) => {\n        const contentState = editorState.getCurrentContent();\n        const contentStateWithEntity = contentState.createEntity(\n          \"IMAGE\",\n          \"IMMUTABLE\",\n          { src: blob }\n        );\n\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n        const newEditorState = EditorState.set(editorState, {\n          currentContent: contentStateWithEntity,\n        });\n\n        setEditorState(\n          AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n        );\n      });\n    }\n  };\n\n  const buttonClickHandler = () => {\n    inputRef.current?.click();\n  };\n\n  return (\n    <>\n      <input\n        ref={inputRef}\n        type=\"file\"\n        onChange={changeFileHandler}\n        className={styles.input}\n      />\n      <Button\n        small\n        onMouseDown={(e) => e.preventDefault()}\n        onClick={buttonClickHandler}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n    </>\n  );\n};\n\nexport default InsertImage;\n","export default __webpack_public_path__ + \"static/media/function.4b8d7631.svg\";","import React, { ChangeEvent } from \"react\";\nimport { AtomicBlockUtils, EditorState } from \"draft-js\";\nimport classNames from \"classnames\";\nimport Button from \"../../../../../../../button\";\nimport { TextContext } from \"../../../../duck/context\";\nimport icon from \"./function.svg\";\nimport styles from \"./InsertKatex.module.css\";\n\ninterface InsertKatexProps {}\n\nconst InsertKatex: React.FC<InsertKatexProps> = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [opened, setOpened] = React.useState(false);\n  const [expression, setExpression] = React.useState<string>(\n    String.raw`c = \\pm\\sqrt{a^2 + b^2}`\n  );\n\n  const clickHandler = () => {\n    setOpened(!opened);\n  };\n\n  const changeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setExpression(String.raw`${e.target.value}`);\n  };\n\n  const cancelHandler = () => {\n    setOpened(false);\n  };\n\n  const insertHandler = () => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      \"KATEX\",\n      \"IMMUTABLE\",\n      { expression, size: \"size1\" }\n    );\n\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n\n    setEditorState(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n\n    setOpened(false);\n    setExpression(\"\");\n  };\n\n  return (\n    <>\n      <Button small onClick={clickHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n      <div className={classNames(styles.wrapper, { [styles.opened]: opened })}>\n        Type an expression\n        <textarea\n          value={expression}\n          onChange={changeHandler}\n          className={styles.textarea}\n        />\n        <div className={styles.buttons}>\n          <Button small onClick={cancelHandler}>\n            Cancel\n          </Button>\n          <Button small onClick={insertHandler} className={styles.insertButton}>\n            Insert\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default InsertKatex;\n","import React from \"react\";\nimport { EditorState } from \"draft-js\";\nimport {\n  Bold,\n  Italic,\n  Underline,\n  UnorderedList,\n  OrderedList,\n  Headers,\n  FontSize,\n  AlignRight,\n  AlignLeft,\n  AlignCenter,\n  InsertImage,\n  InsertKatex,\n} from \"./components\";\nimport styles from \"./Panel.module.css\";\n\ninterface PanelType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Panel: React.FC<PanelType> = ({ editorState, setEditorState }) => (\n  <div className={styles.wrapper}>\n    <Bold editorState={editorState} setEditorState={setEditorState} />\n    <Italic editorState={editorState} setEditorState={setEditorState} />\n    <Underline editorState={editorState} setEditorState={setEditorState} />\n    <div className={styles.separator} />\n    <FontSize />\n    <div className={styles.separator} />\n    <AlignLeft editorState={editorState} setEditorState={setEditorState} />\n    <AlignCenter editorState={editorState} setEditorState={setEditorState} />\n    <AlignRight editorState={editorState} setEditorState={setEditorState} />\n    <div className={styles.separator} />\n    <UnorderedList editorState={editorState} setEditorState={setEditorState} />\n    <OrderedList editorState={editorState} setEditorState={setEditorState} />\n    <div className={styles.separator} />\n    <InsertImage />\n    <InsertKatex />\n    <div className={styles.separator} />\n    <Headers editorState={editorState} setEditorState={setEditorState} />\n  </div>\n);\n\nexport default Panel;\n","export default __webpack_public_path__ + \"static/media/delete.a12f546f.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { removeBlock } from \"../../../../../duck/utils\";\nimport removeIcon from \"./delete.svg\";\n\ninterface RemoveType {\n  blockKey: string;\n}\n\nconst Remove: React.FC<RemoveType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n\n  const removeHandler = (): void => {\n    setEditorState(removeBlock(editorState, blockKey));\n  };\n\n  return (\n    <Button onClick={removeHandler}>\n      <img src={removeIcon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Remove;\n","import { EditorState } from \"draft-js\";\nimport {\n  createAtomicSelection,\n  setAtomicBlockType,\n} from \"../../../../../duck/utils\";\n\nexport const changeAtomicFloating = (\n  editorState: EditorState,\n  setEditorState: any,\n  blockKey: string,\n  type: string\n): void => {\n  const oldSelection = editorState.getSelection();\n  const newSelection = createAtomicSelection(editorState, blockKey);\n  const newEditorState = EditorState.acceptSelection(editorState, newSelection);\n\n  setEditorState(\n    setAtomicBlockType(newEditorState, newEditorState.getSelection(), type)\n  );\n\n  setEditorState((prevEditorState: EditorState) =>\n    EditorState.acceptSelection(prevEditorState, oldSelection)\n  );\n};\n","export default __webpack_public_path__ + \"static/media/pic-left.55843bb4.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { getBlockTypeByKey } from \"../../../../../duck/utils\";\nimport { changeAtomicFloating } from \"../duck/operations\";\nimport icon from \"./pic-left.svg\";\n\ninterface FloatLeftType {\n  blockKey: string;\n}\n\nconst FloatLeft: React.FC<FloatLeftType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [alignLeft, setAlignLeft] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = getBlockTypeByKey(editorState, blockKey);\n    setAlignLeft(blockType.indexOf(\"floatLeft\") !== -1);\n  }, [editorState, blockKey]);\n\n  const clickHandler = () => {\n    changeAtomicFloating(\n      editorState,\n      setEditorState,\n      blockKey,\n      `atomic ${!alignLeft && \"floatLeft\"}`\n    );\n  };\n\n  return (\n    <Button\n      active={alignLeft}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={clickHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default FloatLeft;\n","export default __webpack_public_path__ + \"static/media/pic-right.9b35e01a.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { getBlockTypeByKey } from \"../../../../../duck/utils\";\nimport { changeAtomicFloating } from \"../duck/operations\";\nimport icon from \"./pic-right.svg\";\n\ninterface FloatRightType {\n  blockKey: string;\n}\n\nconst FloatRight: React.FC<FloatRightType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [alignRight, setAlignRight] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = getBlockTypeByKey(editorState, blockKey);\n    setAlignRight(blockType.indexOf(\"floatRight\") !== -1);\n  }, [editorState, blockKey]);\n\n  const clickHandler = () => {\n    changeAtomicFloating(\n      editorState,\n      setEditorState,\n      blockKey,\n      `atomic ${!alignRight && \"floatRight\"}`\n    );\n  };\n\n  return (\n    <Button\n      active={alignRight}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={clickHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default FloatRight;\n","export default __webpack_public_path__ + \"static/media/pic-center.11e51db5.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { getBlockTypeByKey } from \"../../../../../duck/utils\";\nimport { changeAtomicFloating } from \"../duck/operations\";\nimport icon from \"./pic-center.svg\";\n\ninterface FloatLeftType {\n  blockKey: string;\n}\n\nconst FloatLeft: React.FC<FloatLeftType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [alignCenter, setAlignCenter] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = getBlockTypeByKey(editorState, blockKey);\n    setAlignCenter(blockType.indexOf(\"floatCenter\") !== -1);\n  }, [editorState, blockKey]);\n\n  const clickHandler = () => {\n    changeAtomicFloating(\n      editorState,\n      setEditorState,\n      blockKey,\n      `atomic ${!alignCenter && \"floatCenter\"}`\n    );\n  };\n\n  return (\n    <Button\n      active={alignCenter}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={clickHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default FloatLeft;\n","import { EditorState } from \"draft-js\";\n\nexport const changeBlockData = (\n  editorState: EditorState,\n  blockKey: string,\n  data: any\n) => {\n  const contentState = editorState.getCurrentContent();\n  const block = contentState.getBlockForKey(blockKey);\n  const entityAt = block.getEntityAt(0);\n\n  const newContent = contentState.mergeEntityData(entityAt, {\n    ...data,\n  });\n\n  return EditorState.push(editorState, newContent, \"change-block-data\");\n};\n","export default __webpack_public_path__ + \"static/media/crop.8aac24fe.svg\";","import React, { ChangeEvent } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport Button from \"../../../../../../../../../../../button\";\nimport { TextContext } from \"../../../../../../../../duck/context\";\nimport { changeBlockData } from \"../../../../../../duck/operations\";\nimport icon from \"./crop.svg\";\nimport styles from \"./ChangeSize.module.css\";\n\ninterface ChangeSizeType {\n  blockKey: string;\n}\n\nconst ChangeSize: React.FC<ChangeSizeType> = ({ blockKey }) => {\n  const { setEditMode, editorState, setEditorState } = React.useContext(\n    TextContext\n  );\n  const widthInputRef = React.useRef<HTMLInputElement>(null);\n  const [opened, setOpened] = React.useState(false);\n  const contentState = editorState.getCurrentContent();\n  const entityKey = contentState.getBlockForKey(blockKey).getEntityAt(0);\n  const data = contentState.getEntity(entityKey).getData();\n  const [size, setSize] = React.useState({\n    width: data.width || 0,\n    height: data.height || 0,\n  });\n\n  React.useEffect(() => {\n    if (opened && widthInputRef.current) {\n      setEditMode(false);\n      widthInputRef.current.focus();\n    }\n  }, [opened, setEditMode]);\n\n  const openHandler = (): void => {\n    setOpened(true);\n  };\n\n  const closeHandler = () => {\n    setOpened(false);\n    setEditMode(true);\n  };\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setSize((prevSize) => ({ ...prevSize, [e.target.name]: +e.target.value }));\n  };\n\n  const changeSizeHandler = () => {\n    setEditMode(true);\n    setOpened(false);\n    const newEditorState = changeBlockData(editorState, blockKey, size);\n    setEditorState(\n      EditorState.forceSelection(newEditorState, newEditorState.getSelection())\n    );\n  };\n\n  return (\n    <>\n      <Button onClick={openHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <div\n          className={styles.wrapper}\n          onMouseDown={(e) => {\n            e.stopPropagation();\n          }}\n          onDoubleClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <OutsideClickHandler onOutsideClick={closeHandler}>\n            <div className={styles.formTitle}>Change Size (px)</div>\n            <input\n              value={size.width}\n              name=\"width\"\n              onChange={onChangeHandler}\n              type=\"number\"\n              ref={widthInputRef}\n              autoComplete=\"off\"\n            />\n            <input\n              value={size.height}\n              name=\"height\"\n              onChange={onChangeHandler}\n              type=\"number\"\n              autoComplete=\"off\"\n            />\n            <div className={styles.buttons}>\n              <Button small onClick={closeHandler}>\n                Cancel\n              </Button>\n              <Button\n                small\n                onClick={changeSizeHandler}\n                className={styles.changeButton}\n              >\n                Change\n              </Button>\n            </div>\n          </OutsideClickHandler>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChangeSize;\n","export default __webpack_public_path__ + \"static/media/link.6b6bbeaa.svg\";","import React, { ChangeEvent } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Button from \"../../../../../../../../../../../button\";\nimport { TextContext } from \"../../../../../../../../duck/context\";\nimport { changeBlockData } from \"../../../../../../duck/operations\";\nimport icon from \"./link.svg\";\nimport styles from \"./Link.module.css\";\n\ninterface LinkType {\n  blockKey: string;\n}\n\nconst Link: React.FC<LinkType> = ({ blockKey }) => {\n  const { setEditMode, editorState, setEditorState } = React.useContext(\n    TextContext\n  );\n  const [opened, setOpened] = React.useState(false);\n  const hrefInputRef = React.useRef<HTMLInputElement>(null);\n  const contentState = editorState.getCurrentContent();\n  const entityKey = contentState.getBlockForKey(blockKey).getEntityAt(0);\n  const data = contentState.getEntity(entityKey).getData();\n  const [href, setHref] = React.useState(data.href || \"\");\n\n  React.useEffect(() => {\n    if (opened && hrefInputRef.current) {\n      setEditMode(false);\n      hrefInputRef.current.focus();\n    }\n  }, [opened, setEditMode]);\n\n  const clickHandler = (): void => {\n    setOpened(true);\n    setEditMode(true);\n  };\n\n  const closeHandler = (): void => {\n    setOpened(false);\n    setEditMode(false);\n  };\n\n  const setLinkHandler = (): void => {\n    setEditMode(true);\n    setOpened(false);\n    const newEditorState = changeBlockData(editorState, blockKey, { href });\n    setEditorState(\n      EditorState.forceSelection(newEditorState, newEditorState.getSelection())\n    );\n  };\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    setHref(e.target.value);\n  };\n\n  return (\n    <>\n      <Button onClick={clickHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <div className={styles.wrapper}>\n          <div className={styles.formTitle}>Set Link</div>\n          <input\n            ref={hrefInputRef}\n            value={href}\n            onChange={onChangeHandler}\n            autoComplete=\"off\"\n          />\n          <div className={styles.buttons}>\n            <Button small onClick={closeHandler}>\n              Cancel\n            </Button>\n            <Button\n              small\n              onClick={setLinkHandler}\n              className={styles.changeButton}\n            >\n              Add Link\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\nimport {\n  Remove,\n  FloatLeft,\n  FloatRight,\n  FloatCenter,\n} from \"../../../general-controls\";\nimport { ChangeSize, Link } from \"./components\";\nimport styles from \"./ImageMenu.module.css\";\n\ninterface ImageMenuType {\n  blockKey: string;\n}\n\nconst ImageMenu: React.FC<ImageMenuType> = ({ blockKey }) => (\n  <div className={styles.wrapper}>\n    <Remove blockKey={blockKey} />\n    <ChangeSize blockKey={blockKey} />\n    <Link blockKey={blockKey} />\n    <FloatLeft blockKey={blockKey} />\n    <FloatCenter blockKey={blockKey} />\n    <FloatRight blockKey={blockKey} />\n  </div>\n);\n\nexport default ImageMenu;\n","import React, { useRef } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { EntityInstance, ContentBlock } from \"draft-js\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { ImageMenu } from \"./components\";\nimport styles from \"./Image.module.css\";\n\ninterface ImageType {\n  entity: EntityInstance;\n  block: ContentBlock;\n  selected: boolean;\n}\n\ninterface LinkType {\n  href: string;\n}\n\nconst Link: React.FC<LinkType> = ({ href, children }) => (\n  <a target=\"_blank\" rel=\"noreferrer\" href={href}>\n    {children}\n  </a>\n);\n\nconst Image: React.FC<ImageType> = ({ entity, block, selected }) => {\n  const { editMode } = React.useContext(TextContext);\n  const [opened, setOpened] = React.useState(selected);\n  const { src, width, height, href } = entity.getData();\n  const imageRef = useRef<HTMLImageElement>(null);\n  const blockKey = block.getKey();\n\n  React.useEffect(() => {\n    setOpened(selected);\n  }, [selected]);\n\n  const clickHandler = () => {\n    if (editMode) {\n      setOpened((prevOpened) => !prevOpened);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    setOpened(false);\n  };\n\n  const Image = () => (\n    <img\n      ref={imageRef}\n      src={src}\n      alt=\"\"\n      onClick={clickHandler}\n      className={opened ? styles.opened : \"\"}\n      style={{ width, height }}\n    />\n  );\n\n  return (\n    <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n      <div className={styles.wrapper}>\n        {href && !editMode ? (\n          <Link href={href}>\n            <Image />\n          </Link>\n        ) : (\n          <Image />\n        )}\n        {opened && <ImageMenu blockKey={blockKey} />}\n      </div>\n    </OutsideClickHandler>\n  );\n};\n\nexport default Image;\n","export const SIZES = [\n  { label: \"Size 1\", value: \"size1\" },\n  { label: \"Size 2\", value: \"size2\" },\n  { label: \"Size 3\", value: \"size3\" },\n  { label: \"Size 4\", value: \"size4\" },\n  { label: \"Size 5\", value: \"size5\" },\n];\n","import React, { ChangeEvent } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport { changeBlockData } from \"../../../../../../duck/operations\";\nimport { TextContext } from \"../../../../../../../../duck/context\";\nimport { SIZES } from \"./duck/constants\";\nimport styles from \"./ChangeSize.module.css\";\n\ninterface ChangeSizeProps {\n  blockKey: string;\n}\n\nconst ChangeSize: React.FC<ChangeSizeProps> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const contentState = editorState.getCurrentContent();\n  const entityKey = contentState.getBlockForKey(blockKey).getEntityAt(0);\n  const data = contentState.getEntity(entityKey).getData();\n  const [size, setSize] = React.useState(data.size);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSize(e.target.value);\n    const newEditorState = changeBlockData(editorState, blockKey, {\n      size: e.target.value,\n    });\n    setEditorState(\n      EditorState.forceSelection(newEditorState, newEditorState.getSelection())\n    );\n  };\n\n  return (\n    <select value={size} onChange={onChangeHandler} className={styles.select}>\n      {SIZES.map((size) => (\n        <option key={size.value} value={size.value}>\n          {size.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default ChangeSize;\n","import React from \"react\";\nimport { Remove, FloatLeft, FloatRight } from \"../../../general-controls\";\nimport { ChangeSize } from \"./components\";\nimport styles from \"./KatexMenu.module.css\";\n\ninterface KatexMenuProps {\n  blockKey: string;\n}\n\nconst KatexMenu: React.FC<KatexMenuProps> = ({ blockKey }) => (\n  <div className={styles.wrapper}>\n    <Remove blockKey={blockKey} />\n    <ChangeSize blockKey={blockKey} />\n    <FloatLeft blockKey={blockKey} />\n    <FloatRight blockKey={blockKey} />\n  </div>\n);\n\nexport default KatexMenu;\n","import React from \"react\";\nimport katex from \"katex\";\nimport classNames from \"classnames\";\nimport { ContentBlock, EntityInstance } from \"draft-js\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { KatexMenu } from \"./components\";\nimport styles from \"./Katex.module.css\";\n\ninterface KatexProps {\n  entity: EntityInstance;\n  block: ContentBlock;\n  selected: boolean;\n}\n\nconst Katex: React.FC<KatexProps> = ({ entity, block, selected }) => {\n  const { editMode } = React.useContext(TextContext);\n  const [opened, setOpened] = React.useState(false);\n  const { expression, size } = entity.getData();\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const blockKey = block.getKey();\n\n  React.useEffect(() => {\n    setOpened(selected);\n  }, [selected]);\n\n  React.useEffect(() => {\n    if (containerRef.current) {\n      katex.render(expression, containerRef.current, {\n        throwOnError: false,\n      });\n    }\n  }, [expression]);\n\n  const selectHandler = () => {\n    if (editMode) {\n      setOpened(true);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    setOpened(false);\n  };\n\n  return (\n    <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n      <div className={classNames(styles.wrapper, styles[size])}>\n        <div\n          ref={containerRef}\n          onClick={selectHandler}\n          className={classNames(styles.container, {\n            [styles.selected]: opened,\n          })}\n        />\n        {opened && <KatexMenu blockKey={blockKey} />}\n      </div>\n    </OutsideClickHandler>\n  );\n};\n\nexport default Katex;\n","import React from \"react\";\nimport { ContentBlock, ContentState } from \"draft-js\";\nimport { TextContext } from \"../../duck/context\";\nimport { Image, Katex } from \"./components\";\n\ninterface CustomBlockType {\n  contentState: ContentState;\n  block: ContentBlock;\n}\n\nconst CustomBlock: React.FC<CustomBlockType> = ({ contentState, block }) => {\n  const { editorState } = React.useContext(TextContext);\n  const [selected, setSelected] = React.useState(false);\n  const entityAt = block.getEntityAt(0);\n\n  React.useEffect(() => {\n    const selection = editorState.getSelection();\n    const after = contentState.getBlockAfter(block.getKey());\n    setSelected(selection.getAnchorKey() === after?.getKey());\n  }, [contentState, block, editorState]);\n\n  if (entityAt) {\n    const entity = contentState.getEntity(entityAt);\n\n    const type = entity.getType();\n\n    if (type === \"IMAGE\") {\n      return <Image entity={entity} block={block} selected={selected} />;\n    }\n\n    if (type === \"KATEX\") {\n      return <Katex entity={entity} block={block} selected={selected} />;\n    }\n  }\n\n  return null;\n};\n\nexport default CustomBlock;\n","export const customStyleMap = {\n  FONT_SIZE_9: {\n    fontSize: \"9px\"\n  },\n  FONT_SIZE_10: {\n    fontSize: \"10px\"\n  },\n  FONT_SIZE_13: {\n    fontSize: \"13px\"\n  },\n  FONT_SIZE_14: {\n    fontSize: \"14px\"\n  },\n  FONT_SIZE_16: {\n    fontSize: \"16px\"\n  },\n  FONT_SIZE_18: {\n    fontSize: \"18px\"\n  },\n  FONT_SIZE_21: {\n    fontSize: \"21px\"\n  },\n  FONT_SIZE_24: {\n    fontSize: \"24px\"\n  }\n};","import React, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport {\n  Editor,\n  EditorState,\n  convertToRaw,\n  convertFromRaw,\n  DraftHandleValue,\n} from \"draft-js\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { Panel, CustomBlock } from \"./components\";\nimport { getBeforeBlock, getBlockStyle, removeBlock } from \"./duck/utils\";\nimport { TextContext } from \"./duck/context\";\nimport { customStyleMap } from \"./duck/constants\";\nimport styles from \"./Text.module.css\";\n\ninterface TextType {\n  value: any;\n  rowId: number;\n  colId: number;\n  background?: string;\n  editMode: boolean;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Text: React.FC<TextType> = ({\n  value,\n  colId,\n  rowId,\n  editMode,\n  setEditMode,\n}) => {\n  const { dispatchRowsState } = React.useContext(TableContext);\n  const editorRef = useRef<Editor>(null);\n  const [editorState, setEditorState] = React.useState(\n    EditorState.createEmpty()\n  );\n\n  React.useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.focus();\n    }\n  }, [editMode]);\n\n  React.useEffect(() => {\n    if (value) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(value)));\n      console.log(value);\n    } else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [value]);\n\n  const outsideClickHandler = () => {\n    if (editMode) {\n      const contentState = editorState.getCurrentContent();\n      dispatchRowsState(\n        rowsStateActions.updateColContent({\n          rowId,\n          colId,\n          content: convertToRaw(contentState),\n        })\n      );\n      setEditMode(false);\n    }\n  };\n\n  const handleKeyCommand = (command: string): DraftHandleValue => {\n    if (command === \"backspace\") {\n      const beforeBlock = getBeforeBlock(editorState);\n      const selection = editorState.getSelection();\n\n      if (\n        beforeBlock &&\n        beforeBlock.getType().indexOf(\"atomic\") > -1 &&\n        !selection.getEndOffset()\n      ) {\n        setEditorState(removeBlock(editorState, beforeBlock.getKey()));\n\n        return \"handled\";\n      }\n    }\n\n    return \"not-handled\";\n  };\n\n  return (\n    <TextContext.Provider\n      value={{\n        editMode,\n        setEditMode,\n        editorState,\n        setEditorState,\n        editor: editorRef.current,\n      }}\n    >\n      <div\n        className={classNames(styles.wrapper, { [styles.editMode]: editMode })}\n      >\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          {editMode && (\n            <Panel editorState={editorState} setEditorState={setEditorState} />\n          )}\n          <Editor\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={(block) => {\n              if (block.getType().indexOf(\"atomic\") > -1) {\n                return {\n                  component: CustomBlock,\n                  editable: false,\n                };\n              }\n\n              return null;\n            }}\n            readOnly={!editMode}\n            editorState={editorState}\n            onChange={setEditorState}\n            handleKeyCommand={handleKeyCommand}\n            customStyleMap={customStyleMap}\n            ref={editorRef}\n          />\n        </OutsideClickHandler>\n      </div>\n    </TextContext.Provider>\n  );\n};\n\nexport default Text;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { ColType as ColDataType, PositionStateType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { tableStateActions } from \"../../duck/actions\";\nimport { belongs } from \"../../duck/utils\";\nimport { Text } from \"./components\";\nimport styles from \"./Col.module.css\";\n\ninterface ColType {\n  colData: ColDataType;\n  rowId: number;\n}\n\nconst Col: React.FC<ColType> = React.memo(({ colData, rowId }) => {\n  const [selected, setSelected] = React.useState<boolean>(false);\n  const [editMode, setEditMode] = React.useState<boolean>(false);\n  const [positionEnd, setPositionEnd] = React.useState<PositionStateType>({\n    rowId: 0,\n    colId: 0,\n  });\n  const { rowsState, tableState, dispatchTableState } = React.useContext(\n    TableContext\n  );\n\n  React.useEffect(() => {\n    if (tableState.selectionState.start && tableState.selectionState.end) {\n      setSelected(\n        belongs(\n          tableState.selectionState.start,\n          tableState.selectionState.end,\n          {\n            rowId,\n            colId: colData.id,\n          }\n        )\n      );\n    } else {\n      setSelected(false);\n    }\n\n    setPositionEnd({\n      rowId:\n        colData.rowSpan &&\n        tableState.selectionState.start &&\n        tableState.selectionState.start.rowId < rowId\n          ? rowId + colData.rowSpan - 1\n          : rowId,\n      colId:\n        colData.colSpan &&\n        tableState.selectionState.start &&\n        tableState.selectionState.start.colId < colData.id\n          ? colData.id + colData.colSpan - 1\n          : colData.id,\n    });\n  }, [tableState, rowId, colData]);\n\n  if (!colData.display) {\n    return null;\n  }\n\n  const selectStartHandler = () => {\n    if (!tableState.touched && !editMode) {\n      dispatchTableState(\n        tableStateActions.setStartSelection({\n          positionStart: { rowId, colId: colData.id },\n        })\n      );\n    } else if (!editMode) {\n      dispatchTableState(\n        tableStateActions.setEndSelection({\n          positionEnd,\n          finished: true,\n          rows: rowsState,\n        })\n      );\n    }\n  };\n\n  const selectEndHandler = () => {\n    if (!editMode) {\n      dispatchTableState(\n        tableStateActions.setEndSelection({\n          positionEnd,\n          finished: true,\n          rows: rowsState,\n        })\n      );\n    }\n  };\n\n  const selectUpdateHandler = () => {\n    if (tableState.touched && !editMode) {\n      dispatchTableState(\n        tableStateActions.setEndSelection({\n          positionEnd: { rowId, colId: colData.id },\n          finished: false,\n          rows: rowsState,\n        })\n      );\n    }\n  };\n\n  const doubleClickHandler = () => {\n    if (tableState.selectionState.selected) {\n      dispatchTableState(tableStateActions.clearSelection());\n    }\n    setEditMode(true);\n  };\n\n  return (\n    <td\n      id={`col-${rowId}-${colData.id}`}\n      onMouseDown={selectStartHandler}\n      onMouseUp={selectEndHandler}\n      onMouseEnter={selectUpdateHandler}\n      onDoubleClick={doubleClickHandler}\n      colSpan={colData.colSpan}\n      rowSpan={colData.rowSpan}\n      className={classNames(styles.wrapper, {\n        [styles.selected]: selected,\n        [styles.editMode]: editMode,\n      })}\n      style={{ background: colData.background }}\n    >\n      {colData.type === \"text\" && (\n        <Text\n          value={colData.content}\n          background={colData.background}\n          rowId={rowId}\n          colId={colData.id}\n          editMode={editMode}\n          setEditMode={setEditMode}\n        />\n      )}\n    </td>\n  );\n});\n\nexport default Col;\n","export const emptyCol = { content: \"\", type: \"text\", display: true };\n\nexport const BACKGROUND_COLORS = [\n  \"#fff1b8\",\n  \"#ffffb8\",\n  \"#f4ffb8\",\n  \"#d9f7be\",\n  \"#b5f5ec\",\n  \"#bae7ff\",\n  \"#d6e4ff\",\n  \"#efdbff\",\n  \"#ffccc7\",\n];\n","import { ColType, RowType } from \"../../../../../duck/types\";\nimport { emptyCol } from \"../../../../../duck/constants\";\n\nexport const generateNewRows = (rows: RowType[], rowId: number): RowType[] => {\n  const prevRow = rows[rowId - 1];\n  const nextRow = rows[rowId];\n  const newRow: RowType = {\n    id: rowId + 1,\n    cols: [],\n  };\n\n  prevRow.cols.forEach((col: ColType, index) => {\n    const newCol = { ...emptyCol, id: col.id };\n\n    if (nextRow) {\n      const prevCol = prevRow.cols[index];\n      const nextCol = nextRow.cols[index];\n\n      if (\n        prevCol.rowSpan &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.id &&\n        nextCol.resourceFor.rowId === prevRow.id\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: { rowId, colId: col.id },\n        });\n      } else if (\n        prevCol.resourceFor &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.resourceFor.colId &&\n        nextCol.resourceFor.rowId === prevCol.resourceFor.rowId\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: prevCol.resourceFor,\n        });\n      } else {\n        newRow.cols.push(newCol);\n      }\n    } else {\n      newRow.cols.push(newCol);\n    }\n  });\n\n  const increasedCols: string[] = [];\n\n  newRow.cols.forEach((col) => {\n    if (col.resourceFor) {\n      const colId = `${col.resourceFor.rowId}${col.resourceFor.colId}`;\n\n      if (!increasedCols.includes(colId)) {\n        const rowSpan =\n          rows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n            .rowSpan || 0;\n\n        rows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].rowSpan = rowSpan + 1;\n\n        increasedCols.push(colId);\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    if (row.id > rowId) {\n      let newCols = row.cols.map((col: ColType) => ({\n        ...col,\n        ...(col.resourceFor && col.resourceFor.rowId > rowId\n          ? {\n              resourceFor: {\n                ...col.resourceFor,\n                rowId: col.resourceFor.rowId + 1,\n              },\n            }\n          : col.resourceFor),\n      }));\n\n      return { ...row, id: row.id + 1, cols: newCols };\n    }\n\n    return row;\n  });\n\n  newRows.splice(rowId, 0, newRow);\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (\n        col.resourceFor &&\n        newRows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n      ) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { generateNewRows } from \"./duck/utils\";\nimport styles from \"./AddRow.module.css\";\n\ninterface AddRowType {\n  rowId: number;\n}\n\nconst AddRow: React.FC<AddRowType> = ({ rowId }) => {\n  const { dispatchRowsState, rowsState } = React.useContext(TableContext);\n\n  const addNewRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchRowsState(\n      rowsStateActions.rowsUpdate({ rows: generateNewRows(rowsState, rowId) })\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addNewRowHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddRow;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveRow.module.css\";\n\ninterface RemoveRowType {\n  rowId: number;\n  setRowSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveRow: React.FC<RemoveRowType> = ({ rowId, setRowSelected }) => {\n  const { dispatchRowsState } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchRowsState(rowsStateActions.removeRow({ rowId }));\n    setRowSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveRow;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { RowType as RowDataType, ColType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { tableStateActions } from \"../../duck/actions\";\nimport Col from \"../col\";\nimport { AddRow, RemoveRow } from \"./components\";\nimport styles from \"./Row.module.css\";\n\ninterface RowType {\n  rowData: RowDataType;\n}\n\nconst Row: React.FC<RowType> = ({ rowData }) => {\n  const [rowSelected, setRowSelected] = React.useState(false);\n  const { rowsState, dispatchTableState } = React.useContext(TableContext);\n  const [width, setWidth] = React.useState(0);\n  const tdRef = React.useRef<HTMLTableDataCellElement>(null);\n\n  const selectRowHandler = () => {\n    setRowSelected(true);\n    dispatchTableState(tableStateActions.clearSelection());\n\n    if (tdRef.current) {\n      setWidth((tdRef.current.closest(\"table\")?.offsetWidth || 0) - 12);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    if (rowSelected) {\n      setRowSelected(false);\n    }\n  };\n\n  return (\n    <tr>\n      <td ref={tdRef} className={styles.techCol} onClick={selectRowHandler}>\n        <AddRow rowId={rowData.id} />\n        {rowSelected && rowsState.length > 1 && (\n          <>\n            <div className={styles.selectArea} style={{ width }} />\n            <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n              <RemoveRow rowId={rowData.id} setRowSelected={setRowSelected} />\n            </OutsideClickHandler>\n          </>\n        )}\n      </td>\n      {rowData.cols.map((col: ColType) => (\n        <Col key={col.id} colData={col} rowId={rowData.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Row;\n","import { omit } from \"lodash-es\";\nimport {\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectedColsType,\n  TableContext,\n} from \"../../../../../duck/types\";\nimport {\n  belongs,\n  intersects,\n  isSingleSelection,\n} from \"../../../../../duck/utils\";\nimport {\n  rowsStateActions,\n  tableStateActions,\n} from \"../../../../../duck/actions\";\n\nexport const mergeCols = (context: TableContext): void => {\n  const { selectionState } = context.tableState;\n  const rows = context.rowsState;\n  const resources: PositionStateType[] = [];\n  const { selectedCols } = selectionState;\n  const targetCol = {\n    rowId: selectedCols[0].rowId,\n    colId: selectedCols[0].colId,\n  };\n  let colSpan = { prevRowId: selectedCols[0].rowId, prevColId: 0, count: 0 };\n  let rowSpan = { prevRowId: 0, count: 0 };\n\n  selectedCols.forEach((selectedCol: SelectedColsType, index) => {\n    if (\n      selectedCol.colId !== colSpan.prevColId &&\n      selectedCol.rowId === colSpan.prevRowId\n    ) {\n      colSpan.prevColId = selectedCol.colId;\n      colSpan.count += 1;\n      if (selectedCols.length === index - 1 && selectedCol.colSpan) {\n        colSpan.count += selectedCol.colSpan;\n      }\n    }\n\n    if (selectedCol.rowId !== rowSpan.prevRowId) {\n      rowSpan.prevRowId = selectedCol.rowId;\n      rowSpan.count += 1;\n      if (\n        selectionState.selectedCols.length === index - 1 &&\n        selectedCol.rowSpan\n      ) {\n        rowSpan.count += selectedCol.rowSpan;\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    const newCols = row.cols.map((col: ColType) => {\n      const currentPosition: PositionStateType = {\n        rowId: row.id,\n        colId: col.id,\n      };\n      const isTargetCol =\n        targetCol.rowId === row.id && targetCol.colId === col.id;\n      const isBelongs = belongs(\n        selectionState.start as PositionStateType,\n        selectionState.end as PositionStateType,\n        currentPosition\n      );\n\n      if (isTargetCol && colSpan.count > 1) {\n        col.colSpan = colSpan.count;\n      }\n\n      if (isTargetCol && rowSpan.count > 1) {\n        col.rowSpan = rowSpan.count;\n      }\n\n      if (isBelongs && !isTargetCol) {\n        resources.push(currentPosition);\n      }\n\n      return {\n        ...(isBelongs && !isTargetCol\n          ? omit(col, [\"colSpan\", \"rowSpan\"])\n          : col),\n        ...(isTargetCol ? { resources: [] } : {}),\n        ...(isBelongs && !isTargetCol\n          ? { display: false, resourceFor: targetCol }\n          : {}),\n      };\n    });\n\n    return { ...row, cols: newCols };\n  });\n\n  newRows[targetCol.rowId - 1].cols[targetCol.colId - 1].resources = resources;\n\n  context.dispatchRowsState(rowsStateActions.rowsUpdate({ rows: newRows }));\n  context.dispatchTableState(tableStateActions.clearSelection());\n};\n\nexport const mergeAvailable = (context: TableContext): boolean => {\n  const { selectionState } = context.tableState;\n  const rows = context.rowsState;\n  const { selectedCols, start, end } = selectionState;\n  const singleSelection = isSingleSelection(selectionState);\n  const mergedCols: RangeType[] = [];\n  let isIntersects = false;\n  const size = {\n    maxColId: 0,\n    maxRowId: 0,\n    startColId: 0,\n    startRowId: 0,\n    get: function () {\n      return (\n        (this.maxColId - this.startColId + 1) *\n        (this.maxRowId - this.startRowId + 1)\n      );\n    },\n  };\n\n  rows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.colSpan || col.rowSpan) {\n        const colSpan = col.colSpan || 0;\n        const rowSpan = col.rowSpan || 0;\n\n        mergedCols.push({\n          row: {\n            min: row.id,\n            max: !!rowSpan ? row.id + rowSpan - 1 : row.id,\n          },\n          col: {\n            min: col.id,\n            max: !!colSpan ? col.id + colSpan - 1 : col.id,\n          },\n        });\n      }\n    });\n  });\n\n  selectedCols.forEach((col: SelectedColsType, index) => {\n    const colId = col.colSpan ? col.colId + col.colSpan - 1 : col.colId;\n    const rowId = col.rowSpan ? col.rowId + col.rowSpan - 1 : col.rowId;\n\n    if (colId > size.maxColId) {\n      size.maxColId = colId;\n    }\n\n    if (rowId > size.maxRowId) {\n      size.maxRowId = rowId;\n    }\n\n    if (index === 0) {\n      size.startColId = col.colId;\n      size.startRowId = col.rowId;\n    }\n  });\n\n  mergedCols.forEach((mergedCol: RangeType) => {\n    if (start && end && !isIntersects) {\n      const intersectStatus = intersects(mergedCol, {\n        row: {\n          min: start.rowId,\n          max: end.rowId,\n        },\n        col: {\n          min: start.colId,\n          max: end.colId,\n        },\n      });\n\n      if (intersectStatus === \"part\") {\n        isIntersects = true;\n      }\n    }\n  });\n\n  return (\n    !singleSelection && size.get() === selectedCols.length && !isIntersects\n  );\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { mergeAvailable, mergeCols } from \"./duck/operations\";\n\nconst Merge: React.FC = () => {\n  const context = React.useContext(TableContext);\n\n  const mergeHandler = () => {\n    mergeCols(context);\n  };\n\n  return (\n    <li>\n      <button disabled={!mergeAvailable(context)} onClick={mergeHandler}>\n        Merge\n      </button>\n    </li>\n  );\n};\n\nexport default Merge;\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { getCol, isSingleSelection } from \"../../../../duck/utils\";\nimport { unmergeCols } from \"./duck/operations\";\n\nconst Unmerge: React.FC = () => {\n  const context = React.useContext(TableContext);\n  const [canUnmerged, setCanUnmerged] = React.useState(false);\n  const { tableState, rowsState } = context;\n\n  const unmergeHandler = () => {\n    unmergeCols(context);\n  };\n\n  React.useEffect(() => {\n    const selectionStart = tableState.selectionState.start;\n    if (selectionStart) {\n      const selectedCol = getCol(rowsState, selectionStart);\n      if (\n        (selectedCol.colSpan || selectedCol.rowSpan) &&\n        isSingleSelection(tableState.selectionState)\n      ) {\n        setCanUnmerged(true);\n      }\n    }\n  }, [tableState, rowsState]);\n\n  return (\n    <li>\n      <button disabled={!canUnmerged} onClick={unmergeHandler}>\n        Unmerge\n      </button>\n    </li>\n  );\n};\n\nexport default Unmerge;\n","import { omit } from \"lodash-es\";\nimport { PositionStateType, TableContext } from \"../../../../../duck/types\";\nimport {\n  tableStateActions,\n  rowsStateActions,\n} from \"../../../../../duck/actions\";\n\nexport const unmergeCols = (context: TableContext) => {\n  const { selectionState } = context.tableState;\n  const rows = context.rowsState;\n  const unmergeColPosition = selectionState.selectedCols[0];\n  const unmergeCol =\n    rows[unmergeColPosition.rowId - 1].cols[unmergeColPosition.colId - 1];\n\n  if (unmergeCol && unmergeCol.resources) {\n    unmergeCol.resources.forEach((resource: PositionStateType) => {\n      const resourceCol = rows[resource.rowId - 1].cols[resource.colId - 1];\n\n      rows[resource.rowId - 1].cols[resource.colId - 1] = {\n        ...omit(resourceCol, [\"resourceFor\"]),\n        display: true,\n      };\n    });\n  }\n\n  rows[unmergeColPosition.rowId - 1].cols[\n    unmergeColPosition.colId - 1\n  ] = omit(unmergeCol, [\"resources\", \"colSpan\", \"rowSpan\"]);\n\n  context.dispatchRowsState(rowsStateActions.rowsUpdate({ rows }));\n  context.dispatchTableState(tableStateActions.clearSelection());\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { BACKGROUND_COLORS } from \"../../../../duck/constants\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport styles from \"./ChangeBackground.module.css\";\n\nconst ChangeBackground: React.FC = () => {\n  const { dispatchRowsState, tableState } = React.useContext(TableContext);\n\n  const changeColorHandler = (color: string | undefined) => {\n    dispatchRowsState(\n      rowsStateActions.updateColBackground({\n        selectionState: tableState.selectionState,\n        background: color,\n      })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Background color</button>\n      <div className={styles.colors}>\n        <button\n          onClick={() => changeColorHandler(undefined)}\n          className={classNames(styles.colorButton, styles.transparent)}\n        />\n        {BACKGROUND_COLORS.map((color: string) => (\n          <button\n            onClick={() => changeColorHandler(color)}\n            key={color}\n            style={{ background: color }}\n            className={styles.colorButton}\n          />\n        ))}\n      </div>\n    </li>\n  );\n};\n\nexport default ChangeBackground;\n","export const TYPES = [\n  { label: \"Text\", value: \"text\" },\n];\n","export default __webpack_public_path__ + \"static/media/check-circle.c253255a.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { TYPES } from \"./duck/constants\";\nimport icon from \"./assets/check-circle.svg\";\nimport styles from \"./ChangeType.module.css\";\n\nconst ChangeType: React.FC = () => {\n  const { dispatchRowsState, tableState, rowsState } = React.useContext(\n    TableContext\n  );\n  const [currentType, setCurrentType] = React.useState(\"\");\n  const { selectionState } = tableState;\n\n  React.useEffect(() => {\n    if (selectionState.selected) {\n      const selectedRowId = selectionState.selectedCols[0].rowId;\n      const selectedColId = selectionState.selectedCols[0].colId;\n      setCurrentType(rowsState[selectedRowId - 1].cols[selectedColId - 1].type);\n    }\n  }, [selectionState, rowsState]);\n\n  const clickHandler = (type: string) => {\n    const { rowId } = selectionState.selectedCols[0];\n    const { colId } = selectionState.selectedCols[0];\n\n    dispatchRowsState(\n      rowsStateActions.updateColType({\n        selectionState: tableState.selectionState,\n        type,\n      })\n    );\n    dispatchRowsState(\n      rowsStateActions.updateColContent({ colId, rowId, content: \"\" })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Type</button>\n      <ul className={styles.types}>\n        {TYPES.map((type) => (\n          <li key={type.value}>\n            <button\n              className={currentType === type.value ? styles.selected : \"\"}\n              onClick={() => clickHandler(type.value)}\n            >\n              {type.label}\n              {currentType === type.value && (\n                <img src={icon} alt=\"\" className={styles.icon} />\n              )}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nexport default ChangeType;\n","export default __webpack_public_path__ + \"static/media/setting.5524b19c.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../duck/context\";\nimport Button from \"../button\";\nimport { getMenuPosition, PositionType } from \"./duck/utils\";\nimport { Merge, ChangeBackground, Unmerge, ChangeType } from \"./components\";\nimport icon from \"./assets/setting.svg\";\nimport styles from \"./SelectionMenu.module.css\";\n\nconst SelectionMenu: React.FC = () => {\n  const { tableState } = React.useContext(TableContext);\n  const [position, setPosition] = React.useState<PositionType>();\n  const [opened, setOpened] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (tableState.selectionState.start && tableState.selectionState.end) {\n      setPosition(\n        getMenuPosition(\n          tableState.selectionState.start,\n          tableState.selectionState.end\n        )\n      );\n    }\n  }, [tableState]);\n\n  const outsideClickHandler = () => {\n    if (opened) {\n      setOpened(false);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(styles.wrapper, {\n        [styles.selected]:\n          tableState.selectionState.selected &&\n          tableState.selectionState.selectedCols.length > 0,\n      })}\n      style={position}\n    >\n      <Button\n        onClick={() => setOpened(!opened)}\n        className={styles.settingButton}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <ul className={styles.menu}>\n            <ChangeBackground />\n            <ChangeType />\n            <Merge />\n            <Unmerge />\n          </ul>\n        </OutsideClickHandler>\n      )}\n    </div>\n  );\n};\n\nexport default SelectionMenu;\n","import { getRange } from \"../../../duck/utils\";\nimport { PositionStateType } from \"../../../duck/types\";\n\nexport interface PositionType {\n  top: number;\n  left: number;\n}\n\nexport const getMenuPosition = (\n  start: PositionStateType,\n  end: PositionStateType\n): PositionType => {\n  const range = getRange(start, end);\n  const cell = document.getElementById(`col-${range.row.min}-${range.col.min}`);\n\n  if (cell) {\n    return {\n      top: cell.offsetTop + 5,\n      left: cell.offsetLeft + 5,\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0,\n  };\n};\n","import { ColType, RowType } from \"../../../duck/types\";\nimport { emptyCol } from \"../../../duck/constants\";\n\nexport const generateRowsWithNewCol = (\n  rows: RowType[],\n  colId: number\n): RowType[] => {\n  const newRows = rows.map((row: RowType) => {\n    const { cols } = row;\n\n    // updating all colId in curren row\n    let newCols = cols.map((col: ColType) => {\n      if (col.id > colId) {\n        return {\n          ...col,\n          id: col.id + 1,\n          ...(col.resources\n            ? {\n                resources: col.resources.map((currentResource) => ({\n                  ...currentResource,\n                  colId: currentResource.colId + 1,\n                })),\n              }\n            : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId + 1,\n                },\n              }\n            : col.resourceFor),\n        };\n      }\n      return col;\n    });\n\n    const lineContinuation =\n      newCols[colId - 1] &&\n      newCols[colId - 1].resourceFor &&\n      newCols[colId] &&\n      newCols[colId].resourceFor &&\n      newCols[colId - 1].resourceFor?.colId ===\n        newCols[colId].resourceFor?.colId;\n\n    const newCol: ColType = {\n      id: colId + 1,\n      ...emptyCol,\n      ...(newCols[colId - 1] && newCols[colId - 1].colSpan\n        ? {\n            display: false,\n            resourceFor: { rowId: row.id, colId: newCols[colId - 1].id },\n          }\n        : {}),\n      ...(lineContinuation\n        ? { display: false, resourceFor: newCols[colId - 1].resourceFor }\n        : {}),\n    };\n\n    if (newCols[colId - 1] && newCols[colId - 1].colSpan) {\n      // @ts-ignore\n      newCols[colId - 1].colSpan += 1;\n    }\n\n    if (lineContinuation) {\n      const { resourceFor } = newCols[colId - 1];\n\n      if (resourceFor && newCols[resourceFor.colId - 1]) {\n        // @ts-ignore\n        newCols[resourceFor.colId - 1].colSpan += 1;\n      }\n    }\n\n    newCols.splice(colId, 0, newCol);\n\n    return {\n      ...row,\n      cols: newCols,\n    };\n  });\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (col.resourceFor) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ]?.resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n\nexport const getColCount = (rows: RowType[]): number => {\n  let count = 0;\n\n  rows.forEach((row: RowType) => {\n    if (row.cols.length > count) {\n      count = row.cols.length;\n    }\n  });\n\n  return count;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { generateRowsWithNewCol } from \"../../duck/utils\";\nimport styles from \"./AddCol.module.css\";\n\ninterface AddColType {\n  colId: number;\n}\n\nconst AddCol: React.FC<AddColType> = ({ colId }) => {\n  const { rowsState, dispatchRowsState } = React.useContext(TableContext);\n\n  const addColHandler = (e: any): void => {\n    e.stopPropagation();\n    dispatchRowsState(\n      rowsStateActions.rowsUpdate({\n        rows: generateRowsWithNewCol(rowsState, colId),\n      })\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addColHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddCol;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveCol.module.css\";\n\ninterface RemoveColType {\n  colId: number;\n  setColSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveCol: React.FC<RemoveColType> = ({ colId, setColSelected }) => {\n  const { dispatchRowsState } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchRowsState(rowsStateActions.removeCol({ colId }));\n    setColSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveCol;\n","import React, { useState } from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { tableStateActions, rowsStateActions } from \"../../../../duck/actions\";\nimport styles from \"./ChangeWidth.module.css\";\n\ninterface ChangeWidthType {\n  tableHeight: number;\n  colId: number;\n}\n\nconst ChangeWidth: React.FC<ChangeWidthType> = ({ tableHeight, colId }) => {\n  const { rowsState, dispatchTableState, dispatchRowsState } = React.useContext(\n    TableContext\n  );\n  const [pressed, setPressed] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(0);\n  const [start, setStart] = useState<number>(0);\n  const [right, setRight] = useState<number>(0);\n\n  const onMouseDownHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchTableState(tableStateActions.clearSelection());\n    setPressed(true);\n    setStart(e.screenX + right);\n  };\n\n  const onUpHandler = (e: any) => {\n    e.stopPropagation();\n    if (pressed) {\n      dispatchRowsState(\n        rowsStateActions.setColWidth({ colId, width: width - right })\n      );\n      setRight(0);\n      setPressed(false);\n    }\n  };\n\n  const onMouseMoveHandler = (e: any) => {\n    e.stopPropagation();\n\n    if (pressed && width - right > 10) {\n      setRight(start - e.screenX);\n    }\n  };\n\n  if (rowsState[0].cols.length === colId) {\n    return null;\n  }\n\n  return (\n    <div\n      onMouseDown={onMouseDownHandler}\n      onMouseUp={onUpHandler}\n      onMouseLeave={onUpHandler}\n      onMouseMove={onMouseMoveHandler}\n      onClick={(e) => e.stopPropagation()}\n      ref={(div: HTMLDivElement) =>\n        setWidth(div?.closest(\"td\")?.offsetWidth || 0)\n      }\n      className={styles.wrapper}\n      style={{ height: tableHeight, right }}\n    />\n  );\n};\n\nexport default ChangeWidth;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { tableStateActions } from \"../../../../duck/actions\";\nimport AddCol from \"../add-col\";\nimport RemoveCol from \"../remove-col\";\nimport ChangeWidth from \"../change-width\";\nimport styles from \"./TechCol.module.css\";\n\ninterface TechColType {\n  colId: number;\n}\n\nconst TechCol: React.FC<TechColType> = ({ colId }) => {\n  const { rowsState, dispatchTableState } = React.useContext(TableContext);\n  const [colSelected, setColSelected] = React.useState(false);\n  const [height, setHeight] = React.useState(0);\n\n  const selectColHandler = () => {\n    dispatchTableState(tableStateActions.clearSelection());\n    setColSelected(true);\n  };\n\n  const outsideClickHandler = () => {\n    if (colSelected) {\n      setColSelected(false);\n    }\n  };\n\n  return (\n    <td\n      ref={(td: HTMLTableDataCellElement) =>\n        setHeight((td?.closest(\"table\")?.offsetHeight || 0) - 12)\n      }\n      onClick={selectColHandler}\n      className={styles.techCol}\n      style={{\n        width:\n          rowsState[0].cols.length > 1\n            ? rowsState[0].cols[colId - 1]?.width\n            : \"auto\",\n      }}\n    >\n      <AddCol colId={colId} />\n      <ChangeWidth tableHeight={height} colId={colId} />\n      {rowsState[0].cols.length > 1 && colSelected && (\n        <>\n          <div className={styles.selectArea} style={{ height }} />\n          <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n            <RemoveCol colId={colId} setColSelected={setColSelected} />\n          </OutsideClickHandler>\n        </>\n      )}\n    </td>\n  );\n};\n\nexport default TechCol;\n","import React from \"react\";\nimport { TableContext } from \"../../duck/context\";\nimport { getColCount } from \"./duck/utils\";\nimport { TechCol } from \"./components\";\n\nconst TechRow: React.FC = () => {\n  const { rowsState } = React.useContext(TableContext);\n  const [cols, setCols] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    setCols(\n      Array(getColCount(rowsState))\n        .fill({})\n        .map((col, index) => ({ ...col, id: index + 1 }))\n    );\n  }, [rowsState]);\n\n  if (!rowsState.length) {\n    return null;\n  }\n\n  return (\n    <tr>\n      <td style={{ width: 10 }} />\n      {cols.map((col: any) => (\n        <TechCol key={col.id} colId={col.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default TechRow;\n","import React from \"react\";\nimport \"draft-js/dist/Draft.css\";\nimport \"katex/dist/katex.min.css\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"./duck/context\";\nimport { initialTableState, initialRowsState } from \"./duck/state\";\nimport { tableStateReducer, rowsStateReducer } from \"./duck/reducer\";\nimport { RowType } from \"./duck/types\";\nimport { tableStateActions } from \"./duck/actions\";\nimport { Row, SelectionMenu, TechRow } from \"./components\";\nimport styles from \"./Table.module.css\";\n\ninterface TableType {\n  onChange?: (rows: RowType[]) => any;\n}\n\nconst Table: React.FC<TableType> = ({ onChange }) => {\n  const [tableState, dispatchTableState] = React.useReducer(\n    tableStateReducer,\n    initialTableState\n  );\n  const [rowsState, dispatchRowsState] = React.useReducer(\n    rowsStateReducer,\n    initialRowsState\n  );\n\n  React.useEffect(() => {\n    if (onChange && typeof onChange === \"function\") {\n      onChange(rowsState);\n    }\n  }, [rowsState, onChange]);\n\n  const outsideClickHandler = () => {\n    if (tableState.selectionState.selected) {\n      dispatchTableState(tableStateActions.clearSelection());\n    }\n  };\n\n  return (\n    <TableContext.Provider\n      value={{ dispatchTableState, tableState, rowsState, dispatchRowsState }}\n    >\n      <div className={classNames(styles.wrapper, \"notranslate\")}>\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <table\n            className={classNames(styles.table, {\n              [styles.filled]: !!rowsState.length,\n            })}\n          >\n            <tbody>\n              <TechRow />\n              {rowsState.map((row: RowType) => (\n                <Row key={row.id} rowData={row} />\n              ))}\n            </tbody>\n          </table>\n          <SelectionMenu />\n        </OutsideClickHandler>\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Table } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Panel_wrapper__15ls_\",\"separator\":\"Panel_separator__3uLZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Headers_wrapper__X7WTc\",\"select\":\"Headers_select__1J-Af\",\"openButton\":\"Headers_openButton__fmsxb\",\"list\":\"Headers_list__33JR1\",\"header\":\"Headers_header__pg6Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InsertKatex_wrapper__dodJP\",\"opened\":\"InsertKatex_opened__22-W0\",\"textarea\":\"InsertKatex_textarea__32QvQ\",\"buttons\":\"InsertKatex_buttons__1xWnc\",\"insertButton\":\"InsertKatex_insertButton__LpxkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeBackground_wrapper__2Uwxj\",\"colors\":\"ChangeBackground_colors__Je-TV\",\"colorButton\":\"ChangeBackground_colorButton__2QEDl\",\"transparent\":\"ChangeBackground_transparent__mqomV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__pj90c\",\"active\":\"Button_active__FWtIw\",\"disabled\":\"Button_disabled__1AAMG\",\"small\":\"Button_small__2T4PP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontSelect\":\"FontSize_fontSelect__Zuhvx\",\"openButton\":\"FontSize_openButton__IL83w\",\"list\":\"FontSize_list__1b88t\",\"fontButton\":\"FontSize_fontButton__3WX-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeSize_wrapper__1REPo\",\"formTitle\":\"ChangeSize_formTitle__tQnyh\",\"buttons\":\"ChangeSize_buttons__3SB7j\",\"changeButton\":\"ChangeSize_changeButton__AHMPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Link_wrapper__pVwoB\",\"formTitle\":\"Link_formTitle__b8RDv\",\"buttons\":\"Link_buttons__nTc6w\",\"changeButton\":\"Link_changeButton__-tGgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Katex_wrapper__32DMN\",\"size1\":\"Katex_size1__1h_Au\",\"size2\":\"Katex_size2__34cOg\",\"size3\":\"Katex_size3__1BKut\",\"size4\":\"Katex_size4__1AeUB\",\"size5\":\"Katex_size5__rSocC\",\"container\":\"Katex_container__1_kc3\",\"selected\":\"Katex_selected__1hAIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeType_wrapper__1P-DQ\",\"types\":\"ChangeType_types__bLLj_\",\"icon\":\"ChangeType_icon__1EOsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SelectionMenu_wrapper__2E3fb\",\"selected\":\"SelectionMenu_selected__1dW4V\",\"settingButton\":\"SelectionMenu_settingButton__2RZd1\",\"menu\":\"SelectionMenu_menu__3_fZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Col_wrapper__3FddR\",\"selected\":\"Col_selected__29n3t\",\"editMode\":\"Col_editMode__3GAwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__2oJSk\",\"table\":\"Table_table__3Cw9e\",\"filled\":\"Table_filled__wq5i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Image_wrapper__1UzAe\",\"opened\":\"Image_opened__2scOB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Text_wrapper__2zOXf\",\"editMode\":\"Text_editMode__2BkYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddRow_wrapper__3NW4Q\",\"addButton\":\"AddRow_addButton__1hGob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"Row_techCol__HSNZB\",\"active\":\"Row_active__1oG0c\",\"selectArea\":\"Row_selectArea__X8N3B\",\"blinker\":\"Row_blinker__6_-6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCol_wrapper__OkM3j\",\"addButton\":\"AddCol_addButton__2VG6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"TechCol_techCol__3-ePx\",\"selectArea\":\"TechCol_selectArea__1hdFm\",\"blinker\":\"TechCol_blinker__3LS_s\"};"],"sourceRoot":""}