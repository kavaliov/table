{"version":3,"sources":["components/table/components/col/components/text-edit/components/panel/Panel.module.css","components/table/components/col/components/text-edit/TextEdit.module.css","components/table/components/row/components/remove-row/RemoveRow.module.css","components/table/components/tech-row/components/remove-col/RemoveCol.module.css","components/table/components/tech-row/components/change-width/ChangeWidth.module.css","components/table/duck/context.ts","components/table/duck/state.ts","components/table/duck/actions.ts","components/table/duck/utils.ts","components/table/duck/reducer.ts","components/table/components/col/components/text-edit/components/panel/components/bold/bold.svg","components/table/components/button/Button.tsx","components/table/components/col/components/text-edit/components/panel/components/bold/Bold.tsx","components/table/components/col/components/text-edit/components/panel/components/italic/italic.svg","components/table/components/col/components/text-edit/components/panel/components/italic/Italic.tsx","components/table/components/col/components/text-edit/components/panel/components/underline/underline.svg","components/table/components/col/components/text-edit/components/panel/components/underline/Underline.tsx","components/table/components/col/components/text-edit/components/panel/components/unordered-list/unordered-list.svg","components/table/components/col/components/text-edit/components/panel/components/unordered-list/UnorderedList.tsx","components/table/components/col/components/text-edit/components/panel/components/ordered-list/ordered-list.svg","components/table/components/col/components/text-edit/components/panel/components/ordered-list/OrderedList.tsx","components/table/components/col/components/text-edit/components/panel/Panel.tsx","components/table/components/col/components/text-edit/TextEdit.tsx","components/table/components/col/Col.tsx","components/table/duck/constants.ts","components/table/components/row/components/add-row/duck/utils.ts","components/table/components/row/components/add-row/AddRow.tsx","components/table/components/row/components/remove-row/assets/close-circle.svg","components/table/components/row/components/remove-row/RemoveRow.tsx","components/table/components/row/Row.tsx","components/table/components/selection-menu/components/merge/duck/operations.ts","components/table/components/selection-menu/components/merge/Merge.tsx","components/table/components/selection-menu/components/unmerge/Unmerge.tsx","components/table/components/selection-menu/components/unmerge/duck/operations.ts","components/table/components/selection-menu/components/change-background/ChangeBackground.tsx","components/table/components/selection-menu/assets/setting.svg","components/table/components/selection-menu/SelectionMenu.tsx","components/table/components/selection-menu/duck/utils.ts","components/table/components/tech-row/duck/utils.ts","components/table/components/tech-row/components/add-col/AddCol.tsx","components/table/components/tech-row/components/remove-col/assets/close-circle.svg","components/table/components/tech-row/components/remove-col/RemoveCol.tsx","components/table/components/tech-row/components/change-width/ChangeWidth.tsx","components/table/components/tech-row/components/tech-col/TechCol.tsx","components/table/components/tech-row/TechRow.tsx","components/table/Table.tsx","App.tsx","index.tsx","components/table/components/selection-menu/components/change-background/ChangeBackground.module.css","components/table/components/button/Button.module.css","components/table/components/selection-menu/SelectionMenu.module.css","components/table/Table.module.css","components/table/components/col/Col.module.css","components/table/components/row/components/add-row/AddRow.module.css","components/table/components/row/Row.module.css","components/table/components/tech-row/components/add-col/AddCol.module.css","components/table/components/tech-row/components/tech-col/TechCol.module.css"],"names":["module","exports","TableContext","React","tableState","touched","selectionState","selectedCols","selected","rows","id","cols","content","type","display","setStartSelection","createStandardAction","setEndSelection","clearSelection","rowsUpdate","updateColContent","updateColBackground","selectRow","removeRow","selectCol","setColWidth","removeCol","getRange","start","end","row","min","rowId","max","col","colId","belongs","current","range","isSingleSelection","firstCol","rowSpan","colSpan","length","tableReducer","createReducer","initialState","handleAction","actions","state","positionStart","payload","positionEnd","finished","stateStart","push","allocatedRow","map","r","rowToRemove","newRows","decreasedParent","forEach","colToDelete","colIndex","resources","newResources","slice","omit","resourceFor","parentCol","parentId","includes","newRowSpan","splice","index","newCols","rowIndex","reduce","acc","resource","newColSpan","item","width","background","Button","children","onClick","onBlur","className","style","active","disabled","small","e","undefined","classNames","styles","wrapper","Bold","editorState","setEditorState","preventDefault","RichUtils","toggleInlineStyle","src","icon","alt","Italic","Underline","UnorderedList","toggleBlockType","OrderedList","Panel","TextEdit","value","setEditMode","dispatch","useContext","editorRef","useRef","useState","EditorState","createWithContent","convertFromRaw","createEmpty","useEffect","focus","onOutsideClick","contentState","getCurrentContent","convertToRaw","onChange","ref","Col","colData","setSelected","editMode","setPositionEnd","onMouseDown","onMouseUp","onMouseEnter","onDoubleClick","readOnly","emptyCol","BACKGROUND_COLORS","generateNewRows","prevRow","nextRow","newRow","newCol","prevCol","nextCol","increasedCols","AddRow","addButton","stopPropagation","RemoveRow","setRowSelected","Row","rowData","rowSelected","setWidth","tdRef","techCol","closest","offsetWidth","selectArea","mergeAvailable","singleSelection","mergedCols","isIntersects","size","maxColId","maxRowId","startColId","startRowId","get","this","mergedCol","colRange","selectionRange","left","Math","right","bottom","top","colSquare","intersects","Merge","targetCol","prevRowId","prevColId","count","selectedCol","currentPosition","isTargetCol","isBelongs","mergeCols","Unmerge","canUnmerged","setCanUnmerged","position","unmergeColPosition","unmergeCol","resourceCol","unmergeCols","ChangeBackground","changeColorHandler","color","colors","colorButton","transparent","SelectionMenu","setPosition","opened","setOpened","cell","document","getElementById","offsetTop","offsetLeft","getMenuPosition","settingButton","menu","generateRowsWithNewCol","currentResource","lineContinuation","AddCol","RemoveCol","setColSelected","ChangeWidth","tableHeight","pressed","setPressed","setStart","setRight","onUpHandler","screenX","onMouseLeave","onMouseMove","div","height","TechCol","colSelected","setHeight","td","offsetHeight","TechRow","setCols","Array","getColCount","fill","Table","useReducer","Provider","table","filled","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.46a24123.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Panel_wrapper__44pnv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextEdit_wrapper__3ANjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveRow_wrapper__QxJap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveCol_wrapper__2M4QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeWidth_wrapper__Ul3dY\"};","import * as React from \"react\";\nimport { SketchContext as SketchContextType } from \"./types\";\n\nexport const TableContext = React.createContext<SketchContextType>(\n  null as any\n);\n","import { TableState } from \"./types\";\n\nconst tableState: TableState = {\n  touched: false,\n  selectionState: {\n    selectedCols: [],\n    selected: false,\n  },\n  rows: [\n    {\n      id: 1,\n      cols: [\n        {\n          content: \"\",\n          type: \"text\",\n          display: true,\n          id: 1,\n        },\n        {\n          content: \"\",\n          type: \"text\",\n          display: true,\n          id: 2,\n        },\n      ],\n    },\n  ],\n};\n\nexport default tableState;\n","import { createStandardAction } from \"typesafe-actions\";\nimport { PositionStateType, RowType, SelectionStateType } from \"./types\";\n\nexport const setStartSelection = createStandardAction(\n  \"TABLE/SET_START_SELECTION\"\n)<{\n  positionStart: PositionStateType;\n}>();\n\nexport const setEndSelection = createStandardAction(\"TABLE/SET_END_SELECTION\")<{\n  positionEnd: PositionStateType;\n  finished: boolean;\n}>();\n\nexport const clearSelection = createStandardAction(\"TABLE/CLEAR_SELECTION\")();\n\nexport const rowsUpdate = createStandardAction(\"TABLE/ROWS_UPDATE\")<{\n  rows: RowType[];\n}>();\n\nexport const updateColContent = createStandardAction(\n  \"TABLE/UPDATE_COL_CONTENT\"\n)<{\n  rowId: number;\n  colId: number;\n  content: any;\n}>();\n\nexport const updateColBackground = createStandardAction(\n  \"TABLE/UPDATE_COL_BACKGROUND\"\n)<{\n  selectionState: SelectionStateType;\n  background: string | undefined;\n}>();\n\nexport const selectRow = createStandardAction(\"TABLE/SELECT_ROW\")<{\n  rowId: number;\n}>();\n\nexport const removeRow = createStandardAction(\"TABLE/REMOVE_ROW\")<{\n  rowId: number;\n}>();\n\nexport const selectCol = createStandardAction(\"TABLE/SELECT_COL\")<{\n  colId: number;\n}>();\n\nexport const setColWidth = createStandardAction(\"TABLE/SET_COL_WIDTH\")<{\n  colId: number;\n  width: number;\n}>();\n\nexport const removeCol = createStandardAction(\"TABLE/REMOVE_COL\")<{\n  colId: number;\n}>();\n","import {\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectionStateType,\n} from \"./types\";\n\nexport const getRange = (\n  start: PositionStateType,\n  end: PositionStateType\n): RangeType => ({\n  row: {\n    min: start.rowId < end.rowId ? start.rowId : end.rowId,\n    max: start.rowId < end.rowId ? end.rowId : start.rowId,\n  },\n  col: {\n    min: start.colId < end.colId ? start.colId : end.colId,\n    max: start.colId < end.colId ? end.colId : start.colId,\n  },\n});\n\nexport const belongs = (\n  start: PositionStateType,\n  end: PositionStateType,\n  current: PositionStateType\n): boolean => {\n  const range = getRange(start, end);\n\n  return (\n    current.rowId >= range.row.min &&\n    current.rowId <= range.row.max &&\n    current.colId >= range.col.min &&\n    current.colId <= range.col.max\n  );\n};\n\nexport const isSingleSelection = (\n  selectionState: SelectionStateType\n): boolean => {\n  const { selectedCols, start, end } = selectionState;\n  const firstCol = selectedCols[0];\n  const rowSpan = firstCol?.rowSpan ? firstCol.rowSpan - 1 : 0;\n  const colSpan = firstCol?.colSpan ? firstCol.colSpan - 1 : 0;\n\n  if (start && end && start.rowId === end.rowId && start.colId === end.colId) {\n    return true;\n  }\n\n  return (\n    (rowSpan > 0 || colSpan > 0) &&\n    !!start &&\n    !!end &&\n    end.rowId === start.rowId + rowSpan &&\n    end.colId === start.colId + colSpan &&\n    selectedCols.length > 1\n  );\n};\n\nexport const intersects = (\n  colRange: RangeType,\n  selectionRange: RangeType\n): \"full\" | \"part\" | \"not\" => {\n  const left = Math.max(colRange.col.min - 1, selectionRange.col.min - 1);\n  const right = Math.min(colRange.col.max, selectionRange.col.max);\n  const bottom = Math.max(colRange.row.min - 1, selectionRange.row.min - 1);\n  const top = Math.min(colRange.row.max, selectionRange.row.max);\n  const colSquare =\n    (colRange.col.max - colRange.col.min + 1) *\n    (colRange.row.max - colRange.row.min + 1);\n\n  if (left < right && bottom < top) {\n    const intersectsSquare = (right - left) * (top - bottom);\n    if (intersectsSquare === colSquare) {\n      return \"full\";\n    } else {\n      return \"part\";\n    }\n  } else {\n    return \"not\";\n  }\n};\n\nexport const getCol = (rows: RowType[], position: PositionStateType): ColType =>\n  rows[position.rowId - 1].cols[position.colId - 1];\n","import { createReducer, ActionType } from \"typesafe-actions\";\nimport initialState from \"./state\";\nimport * as actions from \"./actions\";\nimport * as Types from \"./types\";\nimport { ColType, PositionStateType, RowType, SelectedColsType } from \"./types\";\nimport { belongs, getRange } from \"./utils\";\nimport { omit } from \"lodash-es\";\n\ntype Action = ActionType<typeof actions>;\n\nconst tableReducer = createReducer<Types.TableState, Action>(initialState)\n  .handleAction(\n    actions.setStartSelection,\n    (state, { payload: { positionStart } }) => ({\n      ...state,\n      touched: true,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n        start: positionStart,\n      },\n    })\n  )\n  .handleAction(\n    actions.setEndSelection,\n    (state, { payload: { positionEnd, finished } }) => {\n      const selectedCols: SelectedColsType[] = [];\n      const { rows } = state;\n      const stateStart = state.selectionState.start;\n\n      if (finished && stateStart) {\n        const range = getRange(stateStart, positionEnd);\n        const start = { rowId: range.row.min, colId: range.col.min };\n        const end = { rowId: range.row.max, colId: range.col.max };\n\n        for (let rowId = start.rowId; rowId <= end.rowId; rowId += 1) {\n          const col = { rowId };\n\n          for (let colId = start.colId; colId <= end.colId; colId += 1) {\n            const colSpan = rows[rowId - 1].cols[colId - 1].colSpan;\n            const rowSpan = rows[rowId - 1].cols[colId - 1].rowSpan;\n\n            selectedCols.push({\n              ...col,\n              colId,\n              ...(rowSpan ? { rowSpan } : {}),\n              ...(colSpan ? { colSpan } : {}),\n            });\n          }\n        }\n      }\n\n      return {\n        ...state,\n        ...(finished ? { touched: false } : {}),\n        selectionState: {\n          ...state.selectionState,\n          selectedCols,\n          ...(finished ? { selected: true } : {}),\n          end: positionEnd,\n        },\n      };\n    }\n  )\n  .handleAction(actions.clearSelection, (state) => ({\n    ...state,\n    selectionState: {\n      selectedCols: [],\n      selected: false,\n    },\n  }))\n  .handleAction(actions.rowsUpdate, (state, { payload: { rows } }) => ({\n    ...state,\n    rows,\n  }))\n  .handleAction(actions.selectRow, (state, { payload: { rowId } }) => {\n    const allocatedRow = state.rows[rowId - 1];\n\n    const selectedCols = allocatedRow.cols.map((col: ColType) => ({\n      rowId,\n      colId: col.id,\n    }));\n\n    return {\n      ...state,\n      selectionState: {\n        selected: true,\n        selectedCols,\n        start: { rowId, colId: allocatedRow.cols[0].id },\n        end: {\n          rowId,\n          colId: allocatedRow.cols[allocatedRow.cols.length - 1].id,\n        },\n      },\n    };\n  })\n  .handleAction(actions.selectCol, (state, { payload: { colId } }) => {\n    const selectedCols: PositionStateType[] = [];\n\n    for (let r = 1; r <= state.rows.length; r += 1) {\n      selectedCols.push({ rowId: r, colId });\n    }\n\n    return {\n      ...state,\n      selectionState: {\n        selected: true,\n        selectedCols,\n        start: { rowId: state.rows[0].id, colId },\n        end: {\n          rowId: state.rows[state.rows.length - 1].id,\n          colId,\n        },\n      },\n    };\n  })\n  .handleAction(actions.removeRow, (state, { payload: { rowId } }) => {\n    const rowToRemove = state.rows[rowId - 1];\n    const newRows = state.rows;\n    const decreasedParent: string[] = [];\n\n    rowToRemove.cols.forEach((colToDelete: ColType, colIndex) => {\n      if (colToDelete.resources && colToDelete.rowSpan) {\n        const { resources } = colToDelete;\n\n        const newResources = resources?.slice(\n          0,\n          resources.length - (colToDelete.colSpan || 1)\n        );\n\n        newRows[rowId].cols[colIndex] = {\n          ...omit(colToDelete, [\"rowSpan\", \"resources\"]),\n          ...(colToDelete.rowSpan && colToDelete.rowSpan > 2\n            ? { rowSpan: colToDelete.rowSpan - 1 }\n            : {}),\n        };\n\n        if (newResources.length > 0 && newRows[rowId].cols[colIndex]) {\n          newRows[rowId].cols[colIndex].resources = newResources;\n        }\n      }\n\n      if (colToDelete.resourceFor && colToDelete.resourceFor.rowId !== rowId) {\n        let parentCol =\n          newRows[colToDelete.resourceFor.rowId - 1].cols[\n            colToDelete.resourceFor.colId - 1\n          ];\n\n        const parentId = `${colToDelete.resourceFor.rowId}-${colToDelete.resourceFor.colId}`;\n\n        if (!decreasedParent.includes(parentId)) {\n          decreasedParent.push(parentId);\n          const newRowSpan = (parentCol.rowSpan || 1) - 1;\n          const newResources = parentCol.resources?.slice(\n            0,\n            parentCol.resources.length - (parentCol.colSpan || 1)\n          );\n\n          if (newRowSpan > 1) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].rowSpan = newRowSpan;\n          } else {\n            parentCol = omit(parentCol, [\"rowSpan\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n\n          if (newResources && newResources.length > 0) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].resources = newResources;\n          } else {\n            parentCol = omit(parentCol, [\"resources\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n        }\n      }\n    });\n\n    newRows.splice(rowId - 1, 1);\n\n    return {\n      ...state,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n      },\n      rows: newRows.map((row: RowType, index: number) => {\n        const newCols = row.cols.map((col: ColType) => {\n          return {\n            ...col,\n            ...(col.resourceFor && col.resourceFor.rowId > rowId\n              ? {\n                  resourceFor: {\n                    ...col.resourceFor,\n                    rowId: col.resourceFor.rowId - 1,\n                  },\n                }\n              : {}),\n          };\n        });\n\n        return {\n          ...row,\n          id: index + 1,\n          cols: newCols,\n        };\n      }),\n    };\n  })\n  .handleAction(actions.removeCol, (state, { payload: { colId } }) => {\n    const newRows = state.rows;\n    const decreasedParent: string[] = [];\n\n    newRows.forEach((row: RowType, rowIndex) => {\n      const colToDelete = row.cols[colId - 1];\n\n      if (colToDelete.resources && colToDelete.colSpan) {\n        const { resources } = colToDelete;\n\n        const newResources = resources.reduce(\n          (acc: PositionStateType[], resource) => {\n            if (\n              resource.colId !==\n              colToDelete.id + (colToDelete.colSpan || 0) - 1\n            ) {\n              acc.push(resource);\n            }\n            return acc;\n          },\n          []\n        );\n\n        newRows[rowIndex].cols[colId] = {\n          ...omit(colToDelete, [\"colSpan\", \"resources\"]),\n          ...(colToDelete.colSpan && colToDelete.colSpan > 2\n            ? { colSpan: colToDelete.colSpan - 1 }\n            : {}),\n        };\n\n        if (newResources.length > 0) {\n          newRows[rowIndex].cols[colId].resources = newResources;\n        }\n      }\n\n      if (colToDelete.resourceFor && colToDelete.resourceFor.colId !== colId) {\n        let parentCol =\n          newRows[colToDelete.resourceFor.rowId - 1].cols[\n            colToDelete.resourceFor.colId - 1\n          ];\n\n        const parentId = `${colToDelete.resourceFor.rowId}-${colToDelete.resourceFor.colId}`;\n\n        if (!decreasedParent.includes(parentId)) {\n          decreasedParent.push(parentId);\n          const newColSpan = (parentCol.colSpan || 1) - 1;\n          const newResources = parentCol.resources?.reduce(\n            (acc: PositionStateType[], item) => {\n              if (item.colId !== parentCol.id + (parentCol.colSpan || 0) - 1) {\n                acc.push(item);\n              }\n              return acc;\n            },\n            []\n          );\n\n          if (newColSpan > 1) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].colSpan = newColSpan;\n          } else {\n            parentCol = omit(parentCol, [\"colSpan\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n\n          if (newResources && newResources.length > 0) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].resources = newResources;\n          } else {\n            parentCol = omit(parentCol, [\"resources\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n        }\n      }\n\n      row.cols.splice(colId - 1, 1);\n\n      row.cols = row.cols.map((col: ColType, index) => {\n        return {\n          ...col,\n          id: index + 1,\n        };\n      });\n    });\n\n    return {\n      ...state,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n      },\n      rows: newRows.map((row: RowType, index: number) => {\n        const newCols = row.cols.map((col: ColType) => {\n          const newResources = col.resources?.map((resource) => ({\n            ...resource,\n            colId: resource.colId > colId ? resource.colId - 1 : resource.colId,\n          }));\n\n          return {\n            ...col,\n            ...(newResources ? { resources: newResources } : {}),\n            ...(col.resourceFor && col.resourceFor.colId > colId\n              ? {\n                  resourceFor: {\n                    ...col.resourceFor,\n                    colId: col.resourceFor.colId - 1,\n                  },\n                }\n              : {}),\n          };\n        });\n\n        return {\n          ...row,\n          id: index + 1,\n          cols: newCols,\n        };\n      }),\n    };\n  })\n  .handleAction(\n    actions.updateColContent,\n    (state, { payload: { colId, rowId, content } }) => {\n      const { rows } = state;\n\n      rows[rowId - 1].cols[colId - 1].content = content;\n\n      return {\n        ...state,\n        rows,\n      };\n    }\n  )\n  .handleAction(actions.setColWidth, (state, { payload: { colId, width } }) => {\n    const { rows } = state;\n\n    const newRows = rows.map((row) => {\n      const newCols = row.cols.map((col: ColType) => ({\n        ...col,\n        ...(col.id === colId ? { width } : {}),\n      }));\n\n      return { ...row, cols: newCols };\n    });\n\n    return {\n      ...state,\n      rows: newRows,\n    };\n  })\n  .handleAction(\n    actions.updateColBackground,\n    (state, { payload: { selectionState, background } }) => {\n      const { rows } = state;\n\n      const newRows = rows.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, background };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      });\n\n      return {\n        ...state,\n        rows: newRows,\n      };\n    }\n  );\n\nexport default tableReducer;\n","export default __webpack_public_path__ + \"static/media/bold.aaa73dad.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.css\";\n\ninterface ButtonType {\n  onClick?: (e: any) => any;\n  onBlur?: () => any;\n  className?: string;\n  active?: boolean;\n  style?: any;\n  disabled?: boolean;\n  small?: boolean;\n}\n\nconst Button: React.FC<ButtonType> = ({\n  children,\n  onClick,\n  onBlur,\n  className,\n  style,\n  active = false,\n  disabled = false,\n  small,\n}) => (\n  <button\n    disabled={disabled}\n    onClick={onClick ? (e: any) => onClick(e) : undefined}\n    onBlur={onBlur}\n    className={classNames(styles.wrapper, className, {\n      [styles.active]: active,\n      [styles.disabled]: disabled,\n      [styles.small]: small,\n    })}\n    style={style}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./bold.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Bold: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const boldHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"BOLD\"));\n  };\n\n  return (\n    <Button small onClick={boldHandler}>\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Bold;\n","export default __webpack_public_path__ + \"static/media/italic.8e03cb99.svg\";","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./italic.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Italic: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const italicHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"ITALIC\"));\n  };\n\n  return (\n    <Button small onClick={italicHandler}>\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Italic;\n","export default __webpack_public_path__ + \"static/media/underline.037f1cd5.svg\";","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./underline.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Underline: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const underlineHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"UNDERLINE\"));\n  };\n\n  return (\n    <Button small onClick={underlineHandler}>\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Underline;\n","export default __webpack_public_path__ + \"static/media/unordered-list.d3b3a77e.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./unordered-list.svg\";\n\ninterface UnorderedListType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst UnorderedList: React.FC<UnorderedListType> = ({\n  setEditorState,\n  editorState,\n}) => {\n  const listHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(\n      RichUtils.toggleBlockType(editorState, \"unordered-list-item\")\n    );\n  };\n\n  return (\n    <Button small onClick={listHandler}>\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default UnorderedList;\n","export default __webpack_public_path__ + \"static/media/ordered-list.f732fa03.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./ordered-list.svg\";\n\ninterface UnorderedListType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst OrderedList: React.FC<UnorderedListType> = ({\n  setEditorState,\n  editorState,\n}) => {\n  const listHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(\n      RichUtils.toggleBlockType(editorState, \"ordered-list-item\")\n    );\n  };\n\n  return (\n    <Button small onClick={listHandler}>\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default OrderedList;\n","import React from \"react\";\nimport { EditorState } from \"draft-js\";\nimport {\n  Bold,\n  Italic,\n  Underline,\n  UnorderedList,\n  OrderedList,\n} from \"./components\";\nimport styles from \"./Panel.module.css\";\n\ninterface PanelType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Panel: React.FC<PanelType> = ({ editorState, setEditorState }) => (\n  <div className={styles.wrapper}>\n    <Bold editorState={editorState} setEditorState={setEditorState} />\n    <Italic editorState={editorState} setEditorState={setEditorState} />\n    <Underline editorState={editorState} setEditorState={setEditorState} />\n    <UnorderedList editorState={editorState} setEditorState={setEditorState} />\n    <OrderedList editorState={editorState} setEditorState={setEditorState} />\n  </div>\n);\n\nexport default Panel;\n","import React, { useRef } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { Editor, EditorState, convertToRaw, convertFromRaw } from \"draft-js\";\nimport { updateColContent } from \"../../../../duck/actions\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { Panel } from \"./components\";\nimport styles from \"./TextEdit.module.css\";\n\ninterface TextEditType {\n  value: any;\n  rowId: number;\n  colId: number;\n  background?: string;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst TextEdit: React.FC<TextEditType> = ({\n  value,\n  colId,\n  rowId,\n  setEditMode,\n}) => {\n  const { dispatch } = React.useContext(TableContext);\n  const editorRef = useRef<Editor>(null);\n  const [editorState, setEditorState] = React.useState(\n    value\n      ? EditorState.createWithContent(convertFromRaw(value))\n      : EditorState.createEmpty()\n  );\n\n  React.useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.focus();\n    }\n  }, []);\n\n  const editHandler = () => {\n    const contentState = editorState.getCurrentContent();\n    dispatch(\n      updateColContent({ rowId, colId, content: convertToRaw(contentState) })\n    );\n    setEditMode(false);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <OutsideClickHandler onOutsideClick={editHandler}>\n        <Panel editorState={editorState} setEditorState={setEditorState} />\n        <Editor\n          editorState={editorState}\n          onChange={setEditorState}\n          ref={editorRef}\n        />\n      </OutsideClickHandler>\n    </div>\n  );\n};\n\nexport default TextEdit;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Editor, EditorState, convertFromRaw } from \"draft-js\";\nimport { ColType as ColDataType, PositionStateType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport {\n  clearSelection,\n  setEndSelection,\n  setStartSelection,\n} from \"../../duck/actions\";\nimport { belongs } from \"../../duck/utils\";\nimport { TextEdit } from \"./components\";\nimport styles from \"./Col.module.css\";\n\ninterface ColType {\n  colData: ColDataType;\n  rowId: number;\n}\n\nconst Col: React.FC<ColType> = ({ colData, rowId }) => {\n  const [selected, setSelected] = React.useState<boolean>(false);\n  const [editMode, setEditMode] = React.useState<boolean>(false);\n  const [positionEnd, setPositionEnd] = React.useState<PositionStateType>({\n    rowId: 0,\n    colId: 0,\n  });\n  const { state, dispatch } = React.useContext(TableContext);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setSelected(\n        belongs(state.selectionState.start, state.selectionState.end, {\n          rowId,\n          colId: colData.id,\n        })\n      );\n    } else {\n      setSelected(false);\n    }\n\n    setPositionEnd({\n      rowId:\n        colData.rowSpan &&\n        state.selectionState.start &&\n        state.selectionState.start.rowId < rowId\n          ? rowId + colData.rowSpan - 1\n          : rowId,\n      colId:\n        colData.colSpan &&\n        state.selectionState.start &&\n        state.selectionState.start.colId < colData.id\n          ? colData.id + colData.colSpan - 1\n          : colData.id,\n    });\n  }, [state, rowId, colData]);\n\n  if (!colData.display) {\n    return null;\n  }\n\n  const selectStartHandler = () => {\n    if (!state.touched && !editMode) {\n      dispatch(\n        setStartSelection({ positionStart: { rowId, colId: colData.id } })\n      );\n    } else if (!editMode) {\n      dispatch(\n        setEndSelection({\n          positionEnd,\n          finished: true,\n        })\n      );\n    }\n  };\n\n  const selectEndHandler = () => {\n    if (!editMode) {\n      dispatch(\n        setEndSelection({\n          positionEnd,\n          finished: true,\n        })\n      );\n    }\n  };\n\n  const selectUpdateHandler = () => {\n    if (state.touched && !editMode) {\n      dispatch(\n        setEndSelection({\n          positionEnd: { rowId, colId: colData.id },\n          finished: false,\n        })\n      );\n    }\n  };\n\n  const doubleClickHandler = () => {\n    dispatch(clearSelection());\n    setEditMode(true);\n  };\n\n  return (\n    <td\n      id={`col-${rowId}-${colData.id}`}\n      onMouseDown={selectStartHandler}\n      onMouseUp={selectEndHandler}\n      onMouseEnter={selectUpdateHandler}\n      onDoubleClick={doubleClickHandler}\n      colSpan={colData.colSpan}\n      rowSpan={colData.rowSpan}\n      className={classNames(styles.wrapper, { [styles.selected]: selected })}\n      style={{ background: colData.background }}\n    >\n      {editMode && colData.type === \"text\" && (\n        <TextEdit\n          value={colData.content}\n          background={colData.background}\n          rowId={rowId}\n          colId={colData.id}\n          setEditMode={setEditMode}\n        />\n      )}\n      {!editMode && colData.type === \"text\" && (\n        <Editor\n          editorState={\n            colData.content\n              ? EditorState.createWithContent(convertFromRaw(colData.content))\n              : EditorState.createEmpty()\n          }\n          onChange={() => {}}\n          readOnly\n        />\n      )}\n    </td>\n  );\n};\n\nexport default Col;\n","export const emptyCol = { content: \"\", type: \"text\", display: true };\n\nexport const ROW_HEIGHT = 45;\n\nexport const BACKGROUND_COLORS = [\n  \"#fff1b8\",\n  \"#ffffb8\",\n  \"#f4ffb8\",\n  \"#d9f7be\",\n  \"#b5f5ec\",\n  \"#bae7ff\",\n  \"#d6e4ff\",\n  \"#efdbff\",\n  \"#ffccc7\",\n];\n","import { ColType, RowType } from \"../../../../../duck/types\";\nimport { emptyCol } from \"../../../../../duck/constants\";\n\nexport const generateNewRows = (rows: RowType[], rowId: number): RowType[] => {\n  const prevRow = rows[rowId - 1];\n  const nextRow = rows[rowId];\n  const newRow: RowType = {\n    id: rowId + 1,\n    cols: [],\n  };\n\n  prevRow.cols.forEach((col: ColType, index) => {\n    const newCol = { ...emptyCol, id: col.id };\n\n    if (nextRow) {\n      const prevCol = prevRow.cols[index];\n      const nextCol = nextRow.cols[index];\n\n      if (\n        prevCol.rowSpan &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.id &&\n        nextCol.resourceFor.rowId === prevRow.id\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: { rowId, colId: col.id },\n        });\n      } else if (\n        prevCol.resourceFor &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.resourceFor.colId &&\n        nextCol.resourceFor.rowId === prevCol.resourceFor.rowId\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: prevCol.resourceFor,\n        });\n      } else {\n        newRow.cols.push(newCol);\n      }\n    } else {\n      newRow.cols.push(newCol);\n    }\n  });\n\n  const increasedCols: string[] = [];\n\n  newRow.cols.forEach((col) => {\n    if (col.resourceFor) {\n      const colId = `${col.resourceFor.rowId}${col.resourceFor.colId}`;\n\n      if (!increasedCols.includes(colId)) {\n        const rowSpan =\n          rows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n            .rowSpan || 0;\n\n        rows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].rowSpan = rowSpan + 1;\n\n        increasedCols.push(colId);\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    if (row.id > rowId) {\n      let newCols = row.cols.map((col: ColType) => ({\n        ...col,\n        ...(col.resourceFor && col.resourceFor.rowId > rowId\n          ? {\n              resourceFor: {\n                ...col.resourceFor,\n                rowId: col.resourceFor.rowId + 1,\n              },\n            }\n          : col.resourceFor),\n      }));\n\n      return { ...row, id: row.id + 1, cols: newCols };\n    }\n\n    return row;\n  });\n\n  newRows.splice(rowId, 0, newRow);\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (\n        col.resourceFor &&\n        newRows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n      ) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsUpdate } from \"../../../../duck/actions\";\nimport { generateNewRows } from \"./duck/utils\";\nimport styles from \"./AddRow.module.css\";\n\ninterface AddRowType {\n  rowId: number;\n}\n\nconst AddRow: React.FC<AddRowType> = ({ rowId }) => {\n  const { dispatch, state } = React.useContext(TableContext);\n\n  const addNewRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(rowsUpdate({ rows: generateNewRows(state.rows, rowId) }));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addNewRowHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddRow;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { removeRow } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveRow.module.css\";\n\ninterface RemoveRowType {\n  rowId: number;\n  setRowSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveRow: React.FC<RemoveRowType> = ({ rowId, setRowSelected }) => {\n  const { dispatch } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeRow({ rowId }));\n    setRowSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveRow;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { RowType as RowDataType, ColType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { clearSelection } from \"../../duck/actions\";\nimport Col from \"../col\";\nimport { AddRow, RemoveRow } from \"./components\";\nimport styles from \"./Row.module.css\";\n\ninterface RowType {\n  rowData: RowDataType;\n}\n\nconst Row: React.FC<RowType> = ({ rowData }) => {\n  const [rowSelected, setRowSelected] = React.useState(false);\n  const { state, dispatch } = React.useContext(TableContext);\n  const [width, setWidth] = React.useState(0);\n  const tdRef = React.useRef<HTMLTableDataCellElement>(null);\n\n  const selectRowHandler = () => {\n    setRowSelected(true);\n    dispatch(clearSelection());\n\n    if (tdRef.current) {\n      setWidth((tdRef.current.closest(\"table\")?.offsetWidth || 0) - 12);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    setRowSelected(false);\n  };\n\n  return (\n    <tr>\n      <td ref={tdRef} className={styles.techCol} onClick={selectRowHandler}>\n        <AddRow rowId={rowData.id} />\n        {rowSelected && state.rows.length > 1 && (\n          <>\n            <div className={styles.selectArea} style={{ width }} />\n            <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n              <RemoveRow rowId={rowData.id} setRowSelected={setRowSelected} />\n            </OutsideClickHandler>\n          </>\n        )}\n      </td>\n      {rowData.cols.map((col: ColType) => (\n        <Col key={col.id} colData={col} rowId={rowData.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Row;\n","import { omit } from \"lodash-es\";\nimport {\n  AnyDispatch,\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectedColsType,\n  TableState,\n} from \"../../../../../duck/types\";\nimport {\n  belongs,\n  intersects,\n  isSingleSelection,\n} from \"../../../../../duck/utils\";\nimport { clearSelection, rowsUpdate } from \"../../../../../duck/actions\";\n\nexport const mergeCols = (state: TableState, dispatch: AnyDispatch): void => {\n  const { selectionState, rows } = state;\n  const resources: PositionStateType[] = [];\n  const { selectedCols } = selectionState;\n  const targetCol = {\n    rowId: selectedCols[0].rowId,\n    colId: selectedCols[0].colId,\n  };\n  let colSpan = { prevRowId: selectedCols[0].rowId, prevColId: 0, count: 0 };\n  let rowSpan = { prevRowId: 0, count: 0 };\n\n  selectedCols.forEach((selectedCol: SelectedColsType, index) => {\n    if (\n      selectedCol.colId !== colSpan.prevColId &&\n      selectedCol.rowId === colSpan.prevRowId\n    ) {\n      colSpan.prevColId = selectedCol.colId;\n      colSpan.count += 1;\n      if (selectedCols.length === index - 1 && selectedCol.colSpan) {\n        colSpan.count += selectedCol.colSpan;\n      }\n    }\n\n    if (selectedCol.rowId !== rowSpan.prevRowId) {\n      rowSpan.prevRowId = selectedCol.rowId;\n      rowSpan.count += 1;\n      if (\n        selectionState.selectedCols.length === index - 1 &&\n        selectedCol.rowSpan\n      ) {\n        rowSpan.count += selectedCol.rowSpan;\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    const newCols = row.cols.map((col: ColType) => {\n      const currentPosition: PositionStateType = {\n        rowId: row.id,\n        colId: col.id,\n      };\n      const isTargetCol =\n        targetCol.rowId === row.id && targetCol.colId === col.id;\n      const isBelongs = belongs(\n        selectionState.start as PositionStateType,\n        selectionState.end as PositionStateType,\n        currentPosition\n      );\n\n      if (isTargetCol && colSpan.count > 1) {\n        col.colSpan = colSpan.count;\n      }\n\n      if (isTargetCol && rowSpan.count > 1) {\n        col.rowSpan = rowSpan.count;\n      }\n\n      if (isBelongs && !isTargetCol) {\n        resources.push(currentPosition);\n      }\n\n      return {\n        ...(isBelongs && !isTargetCol\n          ? omit(col, [\"colSpan\", \"rowSpan\"])\n          : col),\n        ...(isTargetCol ? { resources: [] } : {}),\n        ...(isBelongs && !isTargetCol\n          ? { display: false, resourceFor: targetCol }\n          : {}),\n      };\n    });\n\n    return { ...row, cols: newCols };\n  });\n\n  newRows[targetCol.rowId - 1].cols[targetCol.colId - 1].resources = resources;\n\n  dispatch(rowsUpdate({ rows: newRows }));\n  dispatch(clearSelection());\n};\n\nexport const mergeAvailable = (state: TableState): boolean => {\n  const { selectionState, rows } = state;\n  const { selectedCols, start, end } = selectionState;\n  const singleSelection = isSingleSelection(selectionState);\n  const mergedCols: RangeType[] = [];\n  let isIntersects = false;\n  const size = {\n    maxColId: 0,\n    maxRowId: 0,\n    startColId: 0,\n    startRowId: 0,\n    get: function () {\n      return (\n        (this.maxColId - this.startColId + 1) *\n        (this.maxRowId - this.startRowId + 1)\n      );\n    },\n  };\n\n  rows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.colSpan || col.rowSpan) {\n        const colSpan = col.colSpan || 0;\n        const rowSpan = col.rowSpan || 0;\n\n        mergedCols.push({\n          row: {\n            min: row.id,\n            max: !!rowSpan ? row.id + rowSpan - 1 : row.id,\n          },\n          col: {\n            min: col.id,\n            max: !!colSpan ? col.id + colSpan - 1 : col.id,\n          },\n        });\n      }\n    });\n  });\n\n  selectedCols.forEach((col: SelectedColsType, index) => {\n    const colId = col.colSpan ? col.colId + col.colSpan - 1 : col.colId;\n    const rowId = col.rowSpan ? col.rowId + col.rowSpan - 1 : col.rowId;\n\n    if (colId > size.maxColId) {\n      size.maxColId = colId;\n    }\n\n    if (rowId > size.maxRowId) {\n      size.maxRowId = rowId;\n    }\n\n    if (index === 0) {\n      size.startColId = col.colId;\n      size.startRowId = col.rowId;\n    }\n  });\n\n  mergedCols.forEach((mergedCol: RangeType) => {\n    if (start && end && !isIntersects) {\n      const intersectStatus = intersects(mergedCol, {\n        row: {\n          min: start.rowId,\n          max: end.rowId,\n        },\n        col: {\n          min: start.colId,\n          max: end.colId,\n        },\n      });\n\n      if (intersectStatus === \"part\") {\n        isIntersects = true;\n      }\n    }\n  });\n\n  return (\n    !singleSelection && size.get() === selectedCols.length && !isIntersects\n  );\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { mergeAvailable, mergeCols } from \"./duck/operations\";\n\nconst Merge: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const mergeHandler = () => {\n    mergeCols(state, dispatch);\n  };\n\n  return (\n    <li>\n      <button\n        disabled={!mergeAvailable(state)}\n        onClick={mergeHandler}\n      >\n        Merge\n      </button>\n    </li>\n  );\n};\n\nexport default Merge;\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { getCol, isSingleSelection } from \"../../../../duck/utils\";\nimport { unmergeCols } from \"./duck/operations\";\n\nconst Unmerge: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n  const [canUnmerged, setCanUnmerged] = React.useState(false);\n\n  const unmergeHandler = () => {\n    unmergeCols(state, dispatch);\n  };\n\n  React.useEffect(() => {\n    const selectionState = state.selectionState.start;\n    if (selectionState) {\n      const selectedCol = getCol(state.rows, selectionState);\n      if (\n        (selectedCol.colSpan || selectedCol.rowSpan) &&\n        isSingleSelection(state.selectionState)\n      ) {\n        setCanUnmerged(true);\n      }\n    }\n  }, [state]);\n\n  return (\n    <li>\n      <button disabled={!canUnmerged} onClick={unmergeHandler}>\n        Unmerge\n      </button>\n    </li>\n  );\n};\n\nexport default Unmerge;\n","import { omit } from \"lodash-es\";\nimport {\n  AnyDispatch,\n  PositionStateType,\n  TableState,\n} from \"../../../../../duck/types\";\nimport { clearSelection, rowsUpdate } from \"../../../../../duck/actions\";\n\nexport const unmergeCols = (state: TableState, dispatch: AnyDispatch) => {\n  const { selectionState, rows } = state;\n  const unmergeColPosition = selectionState.selectedCols[0];\n  const unmergeCol =\n    rows[unmergeColPosition.rowId - 1].cols[unmergeColPosition.colId - 1];\n\n  if (unmergeCol && unmergeCol.resources) {\n    unmergeCol.resources.forEach((resource: PositionStateType) => {\n      const resourceCol = rows[resource.rowId - 1].cols[resource.colId - 1];\n\n      rows[resource.rowId - 1].cols[resource.colId - 1] = {\n        ...omit(resourceCol, [\"resourceFor\"]),\n        display: true,\n      };\n    });\n  }\n\n  rows[unmergeColPosition.rowId - 1].cols[\n    unmergeColPosition.colId - 1\n  ] = omit(unmergeCol, [\"resources\", \"colSpan\", \"rowSpan\"]);\n\n  dispatch(rowsUpdate({ rows }));\n  dispatch(clearSelection());\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { BACKGROUND_COLORS } from \"../../../../duck/constants\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { updateColBackground } from \"../../../../duck/actions\";\nimport styles from \"./ChangeBackground.module.css\";\n\nconst ChangeBackground: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const changeColorHandler = (color: string | undefined) => {\n    dispatch(\n      updateColBackground({\n        selectionState: state.selectionState,\n        background: color,\n      })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Background color</button>\n      <div className={styles.colors}>\n        <button\n          onClick={() => changeColorHandler(undefined)}\n          className={classNames(styles.colorButton, styles.transparent)}\n        />\n        {BACKGROUND_COLORS.map((color: string) => (\n          <button\n            onClick={() => changeColorHandler(color)}\n            key={color}\n            style={{ background: color }}\n            className={styles.colorButton}\n          />\n        ))}\n      </div>\n    </li>\n  );\n};\n\nexport default ChangeBackground;\n","export default __webpack_public_path__ + \"static/media/setting.5524b19c.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../duck/context\";\nimport Button from \"../button\";\nimport { getMenuPosition, PositionType } from \"./duck/utils\";\nimport { Merge, ChangeBackground, Unmerge } from \"./components\";\nimport icon from \"./assets/setting.svg\";\nimport styles from \"./SelectionMenu.module.css\";\n\nconst SelectionMenu: React.FC = () => {\n  const { state } = React.useContext(TableContext);\n  const [position, setPosition] = React.useState<PositionType>();\n  const [opened, setOpened] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setPosition(\n        getMenuPosition(state.selectionState.start, state.selectionState.end)\n      );\n    }\n  }, [state]);\n\n  return (\n    <div\n      className={classNames(styles.wrapper, {\n        [styles.selected]:\n          state.selectionState.selected &&\n          state.selectionState.selectedCols.length > 0,\n      })}\n      style={position}\n    >\n      <Button\n        onClick={() => setOpened(!opened)}\n        className={styles.settingButton}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <OutsideClickHandler onOutsideClick={() => setOpened(false)}>\n          <ul className={styles.menu}>\n            <ChangeBackground />\n            <Merge />\n            <Unmerge />\n          </ul>\n        </OutsideClickHandler>\n      )}\n    </div>\n  );\n};\n\nexport default SelectionMenu;\n","import { getRange } from \"../../../duck/utils\";\nimport { PositionStateType } from \"../../../duck/types\";\n\nexport interface PositionType {\n  top: number;\n  left: number;\n}\n\nexport const getMenuPosition = (\n  start: PositionStateType,\n  end: PositionStateType\n): PositionType => {\n  const range = getRange(start, end);\n  const cell = document.getElementById(`col-${range.row.min}-${range.col.min}`);\n\n  if (cell) {\n    return {\n      top: cell.offsetTop + 5,\n      left: cell.offsetLeft + 5,\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0,\n  };\n};\n","import { ColType, RowType } from \"../../../duck/types\";\nimport { emptyCol } from \"../../../duck/constants\";\n\nexport const generateRowsWithNewCol = (\n  rows: RowType[],\n  colId: number\n): RowType[] => {\n  const newRows = rows.map((row: RowType) => {\n    const { cols } = row;\n\n    // updating all colId in curren row\n    let newCols = cols.map((col: ColType) => {\n      if (col.id > colId) {\n        return {\n          ...col,\n          id: col.id + 1,\n          ...(col.resources\n            ? {\n                resources: col.resources.map((currentResource) => ({\n                  ...currentResource,\n                  colId: currentResource.colId + 1,\n                })),\n              }\n            : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId + 1,\n                },\n              }\n            : col.resourceFor),\n        };\n      }\n      return col;\n    });\n\n    const lineContinuation =\n      newCols[colId - 1] &&\n      newCols[colId - 1].resourceFor &&\n      newCols[colId] &&\n      newCols[colId].resourceFor &&\n      newCols[colId - 1].resourceFor?.colId ===\n        newCols[colId].resourceFor?.colId;\n\n    const newCol: ColType = {\n      id: colId + 1,\n      ...emptyCol,\n      ...(newCols[colId - 1] && newCols[colId - 1].colSpan\n        ? {\n            display: false,\n            resourceFor: { rowId: row.id, colId: newCols[colId - 1].id },\n          }\n        : {}),\n      ...(lineContinuation\n        ? { display: false, resourceFor: newCols[colId - 1].resourceFor }\n        : {}),\n    };\n\n    if (newCols[colId - 1] && newCols[colId - 1].colSpan) {\n      // @ts-ignore\n      newCols[colId - 1].colSpan += 1;\n    }\n\n    if (lineContinuation) {\n      const { resourceFor } = newCols[colId - 1];\n\n      if (resourceFor && newCols[resourceFor.colId - 1]) {\n        // @ts-ignore\n        newCols[resourceFor.colId - 1].colSpan += 1;\n      }\n    }\n\n    newCols.splice(colId, 0, newCol);\n\n    return {\n      ...row,\n      cols: newCols,\n    };\n  });\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (col.resourceFor) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ]?.resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n\nexport const getColCount = (rows: RowType[]): number => {\n  let count = 0;\n\n  rows.forEach((row: RowType) => {\n    if (row.cols.length > count) {\n      count = row.cols.length;\n    }\n  });\n\n  return count;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsUpdate } from \"../../../../duck/actions\";\nimport { generateRowsWithNewCol } from \"../../duck/utils\";\nimport styles from \"./AddCol.module.css\";\n\ninterface AddColType {\n  colId: number;\n}\n\nconst AddCol: React.FC<AddColType> = ({ colId }) => {\n  const { dispatch, state } = React.useContext(TableContext);\n\n  const addColHandler = (e: any): void => {\n    e.stopPropagation();\n    dispatch(rowsUpdate({ rows: generateRowsWithNewCol(state.rows, colId) }));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addColHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddCol;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { removeCol } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveCol.module.css\";\n\ninterface RemoveColType {\n  colId: number;\n  setColSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveCol: React.FC<RemoveColType> = ({ colId, setColSelected }) => {\n  const { dispatch } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeCol({ colId }));\n    setColSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveCol;\n","import React, { useState } from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { clearSelection, setColWidth } from \"../../../../duck/actions\";\nimport styles from \"./ChangeWidth.module.css\";\n\ninterface ChangeWidthType {\n  tableHeight: number;\n  colId: number;\n}\n\nconst ChangeWidth: React.FC<ChangeWidthType> = ({ tableHeight, colId }) => {\n  const { state, dispatch } = React.useContext(TableContext);\n  const [pressed, setPressed] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(0);\n  const [start, setStart] = useState<number>(0);\n  const [right, setRight] = useState<number>(0);\n\n  const onMouseDownHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(clearSelection());\n    setPressed(true);\n    setStart(e.screenX + right);\n  };\n\n  const onUpHandler = (e: any) => {\n    e.stopPropagation();\n    if (pressed) {\n      dispatch(setColWidth({ colId, width: width - right }));\n      setRight(0);\n      setPressed(false);\n    }\n  };\n\n  const onMouseMoveHandler = (e: any) => {\n    e.stopPropagation();\n\n    if (pressed && width - right > 10) {\n      setRight(start - e.screenX);\n    }\n  };\n\n  if (state.rows[0].cols.length === colId) {\n    return null;\n  }\n\n  return (\n    <div\n      onMouseDown={onMouseDownHandler}\n      onMouseUp={onUpHandler}\n      onMouseLeave={onUpHandler}\n      onMouseMove={onMouseMoveHandler}\n      onClick={(e) => e.stopPropagation()}\n      ref={(div: HTMLDivElement) =>\n        setWidth(div?.closest(\"td\")?.offsetWidth || 0)\n      }\n      className={styles.wrapper}\n      style={{ height: tableHeight, right }}\n    />\n  );\n};\n\nexport default ChangeWidth;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { clearSelection } from \"../../../../duck/actions\";\nimport AddCol from \"../add-col\";\nimport RemoveCol from \"../remove-col\";\nimport ChangeWidth from \"../change-width\";\nimport styles from \"./TechCol.module.css\";\n\ninterface TechColType {\n  colId: number;\n}\n\nconst TechCol: React.FC<TechColType> = ({ colId }) => {\n  const { state, dispatch } = React.useContext(TableContext);\n  const [colSelected, setColSelected] = React.useState(false);\n  const [height, setHeight] = React.useState(0);\n\n  const selectColHandler = () => {\n    dispatch(clearSelection());\n    setColSelected(true);\n  };\n\n  const outsideClickHandler = () => {\n    setColSelected(false);\n  };\n\n  return (\n    <td\n      ref={(td: HTMLTableDataCellElement) =>\n        setHeight((td?.closest(\"table\")?.offsetHeight || 0) - 12)\n      }\n      onClick={selectColHandler}\n      className={styles.techCol}\n      style={{\n        width:\n          state.rows[0].cols.length > 1\n            ? state.rows[0].cols[colId - 1]?.width\n            : \"auto\",\n      }}\n    >\n      <AddCol colId={colId} />\n      <ChangeWidth tableHeight={height} colId={colId} />\n      {state.rows[0].cols.length > 1 && colSelected && (\n        <>\n          <div className={styles.selectArea} style={{ height }} />\n          <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n            <RemoveCol colId={colId} setColSelected={setColSelected} />\n          </OutsideClickHandler>\n        </>\n      )}\n    </td>\n  );\n};\n\nexport default TechCol;\n","import React from \"react\";\nimport { TableContext } from \"../../duck/context\";\nimport { getColCount } from \"./duck/utils\";\nimport { TechCol } from \"./components\";\n\nconst TechRow: React.FC = () => {\n  const { state } = React.useContext(TableContext);\n  const [cols, setCols] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    setCols(\n      Array(getColCount(state.rows))\n        .fill({})\n        .map((col, index) => ({ ...col, id: index + 1 }))\n    );\n  }, [state]);\n\n  if (!state.rows.length) {\n    return null;\n  }\n\n  return (\n    <tr>\n      <td style={{ width: 10 }} />\n      {cols.map((col: any) => (\n        <TechCol key={col.id} colId={col.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default TechRow;\n","import React from \"react\";\nimport 'draft-js/dist/Draft.css'\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"./duck/context\";\nimport tableState from \"./duck/state\";\nimport tableReducer from \"./duck/reducer\";\nimport { RowType } from \"./duck/types\";\nimport { clearSelection } from \"./duck/actions\";\nimport { Row, SelectionMenu, TechRow } from \"./components\";\nimport styles from \"./Table.module.css\";\n\ninterface TableType {\n  onChange?: (rows: RowType[]) => any;\n}\n\nconst Table: React.FC<TableType> = ({ onChange }) => {\n  const [state, dispatch] = React.useReducer(tableReducer, tableState);\n\n  React.useEffect(() => {\n    if (onChange && typeof onChange === \"function\") {\n      onChange(state.rows);\n    }\n  }, [state, onChange]);\n\n  const outsideClickHandler = () => {\n    dispatch(clearSelection());\n  };\n\n  return (\n    <TableContext.Provider value={{ dispatch, state }}>\n      <div className={styles.wrapper}>\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <table\n            className={classNames(styles.table, {\n              [styles.filled]: !!state.rows.length,\n            })}\n          >\n            <tbody>\n              <TechRow />\n              {state.rows.map((row: RowType) => (\n                <Row key={row.id} rowData={row} />\n              ))}\n            </tbody>\n          </table>\n          <SelectionMenu />\n        </OutsideClickHandler>\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { Table } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeBackground_wrapper__2Uwxj\",\"colors\":\"ChangeBackground_colors__Je-TV\",\"colorButton\":\"ChangeBackground_colorButton__2QEDl\",\"transparent\":\"ChangeBackground_transparent__mqomV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__pj90c\",\"active\":\"Button_active__FWtIw\",\"disabled\":\"Button_disabled__1AAMG\",\"small\":\"Button_small__2T4PP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SelectionMenu_wrapper__2E3fb\",\"selected\":\"SelectionMenu_selected__1dW4V\",\"settingButton\":\"SelectionMenu_settingButton__2RZd1\",\"menu\":\"SelectionMenu_menu__3_fZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__2oJSk\",\"table\":\"Table_table__3Cw9e\",\"filled\":\"Table_filled__wq5i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Col_wrapper__3FddR\",\"selected\":\"Col_selected__29n3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddRow_wrapper__3NW4Q\",\"addButton\":\"AddRow_addButton__1hGob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"Row_techCol__HSNZB\",\"active\":\"Row_active__1oG0c\",\"selectArea\":\"Row_selectArea__X8N3B\",\"blinker\":\"Row_blinker__6_-6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCol_wrapper__OkM3j\",\"addButton\":\"AddCol_addButton__2VG6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"TechCol_techCol__3-ePx\",\"selectArea\":\"TechCol_selectArea__1hdFm\",\"blinker\":\"TechCol_blinker__3LS_s\"};"],"sourceRoot":""}