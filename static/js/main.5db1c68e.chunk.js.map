{"version":3,"sources":["components/table/components/selection-menu/components/change-background/ChangeBackground.module.css","components/table/components/selection-menu/SelectionMenu.module.css","components/table/components/button/Button.module.css","components/table/Table.module.css","components/table/components/col/Col.module.css","components/table/components/row/components/add-row/AddRow.module.css","components/table/components/tech-row/components/add-col/AddCol.module.css","components/table/components/col/components/text-edit/TextEdit.module.css","components/table/components/row/components/remove-row/RemoveRow.module.css","components/table/components/row/Row.module.css","components/table/components/tech-row/components/remove-col/RemoveCol.module.css","components/table/components/tech-row/components/tech-col/TechCol.module.css","components/table/duck/context.ts","components/table/duck/state.ts","components/table/duck/actions.ts","components/table/duck/utils.ts","components/table/duck/reducer.ts","components/table/duck/constants.ts","components/table/components/col/components/text-edit/TextEdit.tsx","components/table/components/col/Col.tsx","components/table/components/row/components/add-row/duck/utils.ts","components/table/components/row/components/add-row/AddRow.tsx","components/table/components/row/components/remove-row/assets/close-circle.svg","components/table/components/row/components/remove-row/RemoveRow.tsx","components/table/components/row/Row.tsx","components/table/components/button/Button.tsx","components/table/components/selection-menu/components/merge/duck/operations.ts","components/table/components/selection-menu/components/merge/Merge.tsx","components/table/components/selection-menu/components/unmerge/Unmerge.tsx","components/table/components/selection-menu/components/unmerge/duck/operations.ts","components/table/components/selection-menu/components/change-background/ChangeBackground.tsx","components/table/components/selection-menu/assets/setting.svg","components/table/components/selection-menu/SelectionMenu.tsx","components/table/components/selection-menu/duck/utils.ts","components/table/components/tech-row/duck/utils.ts","components/table/components/tech-row/components/add-col/AddCol.tsx","components/table/components/tech-row/components/remove-col/assets/close-circle.svg","components/table/components/tech-row/components/remove-col/RemoveCol.tsx","components/table/components/tech-row/components/tech-col/TechCol.tsx","components/table/components/tech-row/TechRow.tsx","components/table/Table.tsx","App.tsx","index.tsx"],"names":["module","exports","TableContext","React","tableState","touched","selectionState","selectedCols","selected","rows","id","cols","content","type","display","setStartSelection","createStandardAction","setEndSelection","clearSelection","rowsUpdate","updateColContent","updateColBackground","selectRow","removeRow","selectCol","removeCol","getRange","start","end","row","min","rowId","max","col","colId","belongs","current","range","isSingleSelection","firstCol","rowSpan","colSpan","length","tableReducer","createReducer","initialState","handleAction","actions","state","positionStart","payload","positionEnd","finished","stateStart","push","allocatedRow","map","r","newRows","splice","index","forEach","background","newCols","emptyCol","BACKGROUND_COLORS","TextEdit","value","setEditMode","dispatch","useContext","inputRef","useRef","useEffect","focus","editHandler","e","target","ref","defaultValue","onBlur","onKeyDown","code","className","styles","wrapper","style","Col","colData","useState","setSelected","editMode","setPositionEnd","onMouseDown","onMouseUp","onMouseEnter","onDoubleClick","classNames","generateNewRows","prevRow","nextRow","newRow","newCol","prevCol","nextCol","resourceFor","increasedCols","includes","resources","AddRow","addButton","onClick","stopPropagation","RemoveRow","setRowSelected","src","icon","alt","Row","rowData","rowSelected","height","techCol","onOutsideClick","Button","children","active","disabled","mergeAvailable","singleSelection","mergedCols","isIntersects","size","maxColId","maxRowId","startColId","startRowId","get","this","mergedCol","colRange","selectionRange","left","Math","right","bottom","top","colSquare","intersects","Merge","targetCol","prevRowId","prevColId","count","selectedCol","currentPosition","isTargetCol","isBelongs","omit","mergeCols","Unmerge","unmergeColPosition","unmergeCol","resource","resourceCol","unmergeCols","ChangeBackground","changeColorHandler","color","colors","undefined","colorButton","transparent","SelectionMenu","position","setPosition","opened","setOpened","cell","document","getElementById","offsetTop","offsetLeft","getMenuPosition","settingButton","menu","generateRowsWithNewCol","currentResource","lineContinuation","AddCol","RemoveCol","setColSelected","TechCol","colSelected","TechRow","setCols","Array","getColCount","fill","width","Table","onChange","useReducer","Provider","table","filled","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5db1c68e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeBackground_wrapper__2Uwxj\",\"colors\":\"ChangeBackground_colors__Je-TV\",\"colorButton\":\"ChangeBackground_colorButton__2QEDl\",\"transparent\":\"ChangeBackground_transparent__mqomV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SelectionMenu_wrapper__2E3fb\",\"selected\":\"SelectionMenu_selected__1dW4V\",\"settingButton\":\"SelectionMenu_settingButton__2RZd1\",\"menu\":\"SelectionMenu_menu__3_fZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__pj90c\",\"active\":\"Button_active__FWtIw\",\"disabled\":\"Button_disabled__1AAMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__2oJSk\",\"table\":\"Table_table__3Cw9e\",\"filled\":\"Table_filled__wq5i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Col_wrapper__3FddR\",\"selected\":\"Col_selected__29n3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddRow_wrapper__3NW4Q\",\"addButton\":\"AddRow_addButton__1hGob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCol_wrapper__OkM3j\",\"addButton\":\"AddCol_addButton__2VG6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextEdit_wrapper__3ANjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveRow_wrapper__QxJap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"Row_techCol__HSNZB\",\"active\":\"Row_active__1oG0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveCol_wrapper__2M4QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"TechCol_techCol__3-ePx\"};","import * as React from \"react\";\nimport { SketchContext as SketchContextType } from \"./types\";\n\nexport const TableContext = React.createContext<SketchContextType>(\n  null as any\n);\n","import { TableState } from \"./types\";\n\nconst tableState: TableState = {\n  touched: false,\n  selectionState: {\n    selectedCols: [],\n    selected: false,\n  },\n  rows: [\n    {\n      id: 1,\n      cols: [\n        {\n          content: \"\",\n          type: \"text\",\n          display: true,\n          id: 1,\n        },\n        {\n          content: \"\",\n          type: \"text\",\n          display: true,\n          id: 2,\n        },\n      ],\n    },\n  ],\n};\n\nexport default tableState;\n","import { createStandardAction } from \"typesafe-actions\";\nimport { PositionStateType, RowType, SelectionStateType } from \"./types\";\n\nexport const setStartSelection = createStandardAction(\n  \"TABLE/SET_START_SELECTION\"\n)<{\n  positionStart: PositionStateType;\n}>();\n\nexport const setEndSelection = createStandardAction(\"TABLE/SET_END_SELECTION\")<{\n  positionEnd: PositionStateType;\n  finished: boolean;\n}>();\n\nexport const clearSelection = createStandardAction(\"TABLE/CLEAR_SELECTION\")();\n\nexport const rowsUpdate = createStandardAction(\"TABLE/ROWS_UPDATE\")<{\n  rows: RowType[];\n}>();\n\nexport const updateColContent = createStandardAction(\n  \"TABLE/UPDATE_COL_CONTENT\"\n)<{\n  rowId: number;\n  colId: number;\n  content: string;\n}>();\n\nexport const updateColBackground = createStandardAction(\n  \"TABLE/UPDATE_COL_BACKGROUND\"\n)<{\n  selectionState: SelectionStateType;\n  background: string | undefined;\n}>();\n\nexport const selectRow = createStandardAction(\"TABLE/SELECT_ROW\")<{\n  rowId: number;\n}>();\n\nexport const removeRow = createStandardAction(\"TABLE/REMOVE_ROW\")<{\n  rowId: number;\n}>();\n\nexport const selectCol = createStandardAction(\"TABLE/SELECT_COL\")<{\n  colId: number;\n}>();\n\nexport const removeCol = createStandardAction(\"TABLE/REMOVE_COL\")<{\n  colId: number;\n}>();\n","import { PositionStateType, RangeType, SelectionStateType } from \"./types\";\n\nexport const getRange = (\n  start: PositionStateType,\n  end: PositionStateType\n): RangeType => ({\n  row: {\n    min: start.rowId < end.rowId ? start.rowId : end.rowId,\n    max: start.rowId < end.rowId ? end.rowId : start.rowId,\n  },\n  col: {\n    min: start.colId < end.colId ? start.colId : end.colId,\n    max: start.colId < end.colId ? end.colId : start.colId,\n  },\n});\n\nexport const belongs = (\n  start: PositionStateType,\n  end: PositionStateType,\n  current: PositionStateType\n): boolean => {\n  const range = getRange(start, end);\n\n  return (\n    current.rowId >= range.row.min &&\n    current.rowId <= range.row.max &&\n    current.colId >= range.col.min &&\n    current.colId <= range.col.max\n  );\n};\n\nexport const isSingleSelection = (\n  selectionState: SelectionStateType\n): boolean => {\n  const { selectedCols, start, end } = selectionState;\n  const firstCol = selectedCols[0];\n  const rowSpan = firstCol?.rowSpan ? firstCol.rowSpan - 1 : 0;\n  const colSpan = firstCol?.colSpan ? firstCol.colSpan - 1 : 0;\n\n  if (start && end && start.rowId === end.rowId && start.colId === end.colId) {\n    return true;\n  }\n\n  return (\n    (rowSpan > 0 || colSpan > 0) &&\n    !!start &&\n    !!end &&\n    end.rowId === start.rowId + rowSpan &&\n    end.colId === start.colId + colSpan &&\n    selectedCols.length > 1\n  );\n};\n\nexport const intersects = (\n  colRange: RangeType,\n  selectionRange: RangeType\n): \"full\" | \"part\" | \"not\" => {\n  const left = Math.max(colRange.col.min - 1, selectionRange.col.min - 1);\n  const right = Math.min(colRange.col.max, selectionRange.col.max);\n  const bottom = Math.max(colRange.row.min - 1, selectionRange.row.min - 1);\n  const top = Math.min(colRange.row.max, selectionRange.row.max);\n  const colSquare =\n    (colRange.col.max - colRange.col.min + 1) *\n    (colRange.row.max - colRange.row.min + 1);\n\n  if (left < right && bottom < top) {\n    const intersectsSquare = (right - left) * (top - bottom);\n    if (intersectsSquare === colSquare) {\n      return \"full\";\n    } else {\n      return \"part\";\n    }\n  } else {\n    return \"not\";\n  }\n};\n","import { createReducer, ActionType } from \"typesafe-actions\";\nimport initialState from \"./state\";\nimport * as actions from \"./actions\";\nimport * as Types from \"./types\";\nimport { ColType, PositionStateType, RowType, SelectedColsType } from \"./types\";\nimport { belongs, getRange } from \"./utils\";\n\ntype Action = ActionType<typeof actions>;\n\nconst tableReducer = createReducer<Types.TableState, Action>(initialState)\n  .handleAction(\n    actions.setStartSelection,\n    (state, { payload: { positionStart } }) => ({\n      ...state,\n      touched: true,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n        start: positionStart,\n      },\n    })\n  )\n  .handleAction(\n    actions.setEndSelection,\n    (state, { payload: { positionEnd, finished } }) => {\n      const selectedCols: SelectedColsType[] = [];\n      const { rows } = state;\n      const stateStart = state.selectionState.start;\n\n      if (finished && stateStart) {\n        const range = getRange(stateStart, positionEnd);\n        const start = { rowId: range.row.min, colId: range.col.min };\n        const end = { rowId: range.row.max, colId: range.col.max };\n\n        for (let rowId = start.rowId; rowId <= end.rowId; rowId += 1) {\n          const col = { rowId };\n\n          for (let colId = start.colId; colId <= end.colId; colId += 1) {\n            const colSpan = rows[rowId - 1].cols[colId - 1].colSpan;\n            const rowSpan = rows[rowId - 1].cols[colId - 1].rowSpan;\n\n            selectedCols.push({\n              ...col,\n              colId,\n              ...(rowSpan ? { rowSpan } : {}),\n              ...(colSpan ? { colSpan } : {}),\n            });\n          }\n        }\n      }\n\n      return {\n        ...state,\n        ...(finished ? { touched: false } : {}),\n        selectionState: {\n          ...state.selectionState,\n          selectedCols,\n          ...(finished ? { selected: true } : {}),\n          end: positionEnd,\n        },\n      };\n    }\n  )\n  .handleAction(actions.clearSelection, (state) => ({\n    ...state,\n    selectionState: {\n      selectedCols: [],\n      selected: false,\n    },\n  }))\n  .handleAction(actions.rowsUpdate, (state, { payload: { rows } }) => ({\n    ...state,\n    rows,\n  }))\n  .handleAction(actions.selectRow, (state, { payload: { rowId } }) => {\n    const allocatedRow = state.rows[rowId - 1];\n\n    const selectedCols = allocatedRow.cols.map((col: ColType) => ({\n      rowId,\n      colId: col.id,\n    }));\n\n    return {\n      ...state,\n      selectionState: {\n        selected: true,\n        selectedCols,\n        start: { rowId, colId: allocatedRow.cols[0].id },\n        end: {\n          rowId,\n          colId: allocatedRow.cols[allocatedRow.cols.length - 1].id,\n        },\n      },\n    };\n  })\n  .handleAction(actions.selectCol, (state, { payload: { colId } }) => {\n    const selectedCols: PositionStateType[] = [];\n\n    for (let r = 1; r <= state.rows.length; r += 1) {\n      selectedCols.push({ rowId: r, colId });\n    }\n\n    return {\n      ...state,\n      selectionState: {\n        selected: true,\n        selectedCols,\n        start: { rowId: state.rows[0].id, colId },\n        end: {\n          rowId: state.rows[state.rows.length - 1].id,\n          colId,\n        },\n      },\n    };\n  })\n  .handleAction(actions.removeRow, (state, { payload: { rowId } }) => {\n    const newRows = state.rows;\n    newRows.splice(rowId - 1, 1);\n\n    return {\n      ...state,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n      },\n      rows: newRows.map((row: RowType, index: number) => ({\n        ...row,\n        id: index + 1,\n      })),\n    };\n  })\n  .handleAction(actions.removeCol, (state, { payload: { colId } }) => {\n    const newRows = state.rows;\n\n    newRows.forEach((row: RowType) => {\n      row.cols.splice(colId - 1, 1);\n      row.cols = row.cols.map((col: ColType, index) => ({\n        ...col,\n        id: index + 1,\n      }));\n    });\n\n    return {\n      ...state,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n      },\n      rows: newRows.map((row: RowType, index: number) => ({\n        ...row,\n        id: index + 1,\n      })),\n    };\n  })\n  .handleAction(\n    actions.updateColContent,\n    (state, { payload: { colId, rowId, content } }) => {\n      const { rows } = state;\n\n      rows[rowId - 1].cols[colId - 1].content = content;\n\n      return {\n        ...state,\n        rows,\n      };\n    }\n  )\n  .handleAction(\n    actions.updateColBackground,\n    (state, { payload: { selectionState, background } }) => {\n      const { rows } = state;\n\n      const newRows = rows.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, background };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      });\n\n      return {\n        ...state,\n        rows: newRows,\n      };\n    }\n  );\n\nexport default tableReducer;\n","export const emptyCol = { content: \"\", type: \"text\", display: true };\n\nexport const ROW_HEIGHT = 45;\n\nexport const BACKGROUND_COLORS = [\n  \"#fff1b8\",\n  \"#ffffb8\",\n  \"#f4ffb8\",\n  \"#d9f7be\",\n  \"#b5f5ec\",\n  \"#bae7ff\",\n  \"#d6e4ff\",\n  \"#efdbff\",\n  \"#ffccc7\",\n];\n","import React, { useRef } from \"react\";\nimport { updateColContent } from \"../../../../duck/actions\";\nimport { TableContext } from \"../../../../duck/context\";\nimport styles from \"./TextEdit.module.css\";\n\ninterface TextEditType {\n  value: string;\n  rowId: number;\n  colId: number;\n  background?: string;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst TextEdit: React.FC<TextEditType> = ({\n  value,\n  colId,\n  rowId,\n  background,\n  setEditMode,\n}) => {\n  const { dispatch } = React.useContext(TableContext);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const editHandler = (e: any) => {\n    dispatch(updateColContent({ rowId, colId, content: e.target.value }));\n    setEditMode(false);\n  };\n\n  const keyDownHandler = (e: any) => {\n    if (e.code === \"Enter\") {\n      editHandler(e);\n    }\n  };\n\n  return (\n    <input\n      ref={inputRef}\n      defaultValue={value}\n      onBlur={editHandler}\n      onKeyDown={keyDownHandler}\n      className={styles.wrapper}\n      style={{ background }}\n    />\n  );\n};\n\nexport default TextEdit;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { ColType as ColDataType, PositionStateType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { setEndSelection, setStartSelection } from \"../../duck/actions\";\nimport { belongs } from \"../../duck/utils\";\nimport { TextEdit } from \"./components\";\nimport styles from \"./Col.module.css\";\n\ninterface ColType {\n  colData: ColDataType;\n  rowId: number;\n}\n\nconst Col: React.FC<ColType> = ({ colData, rowId }) => {\n  const [selected, setSelected] = React.useState<boolean>(false);\n  const [editMode, setEditMode] = React.useState<boolean>(false);\n  const [positionEnd, setPositionEnd] = React.useState<PositionStateType>({\n    rowId: 0,\n    colId: 0,\n  });\n  const { state, dispatch } = React.useContext(TableContext);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setSelected(\n        belongs(state.selectionState.start, state.selectionState.end, {\n          rowId,\n          colId: colData.id,\n        })\n      );\n    } else {\n      setSelected(false);\n    }\n\n    setPositionEnd({\n      rowId:\n        colData.rowSpan &&\n        state.selectionState.start &&\n        state.selectionState.start.rowId < rowId\n          ? rowId + colData.rowSpan - 1\n          : rowId,\n      colId:\n        colData.colSpan &&\n        state.selectionState.start &&\n        state.selectionState.start.colId < colData.id\n          ? colData.id + colData.colSpan - 1\n          : colData.id,\n    });\n  }, [state, rowId, colData]);\n\n  if (!colData.display) {\n    return null;\n  }\n\n  const selectStartHandler = () => {\n    if (!state.touched) {\n      dispatch(\n        setStartSelection({ positionStart: { rowId, colId: colData.id } })\n      );\n    } else {\n      dispatch(\n        setEndSelection({\n          positionEnd,\n          finished: true,\n        })\n      );\n    }\n  };\n\n  const selectEndHandler = () => {\n    dispatch(\n      setEndSelection({\n        positionEnd,\n        finished: true,\n      })\n    );\n  };\n\n  const selectUpdateHandler = () => {\n    if (state.touched) {\n      dispatch(\n        setEndSelection({\n          positionEnd: { rowId, colId: colData.id },\n          finished: false,\n        })\n      );\n    }\n  };\n\n  return (\n    <td\n      id={`col-${rowId}-${colData.id}`}\n      onMouseDown={selectStartHandler}\n      onMouseUp={selectEndHandler}\n      onMouseEnter={selectUpdateHandler}\n      onDoubleClick={() => setEditMode(true)}\n      colSpan={colData.colSpan}\n      rowSpan={colData.rowSpan}\n      className={classNames(styles.wrapper, { [styles.selected]: selected })}\n      style={{ background: colData.background }}\n    >\n      {editMode && colData.type === \"text\" && (\n        <TextEdit\n          value={colData.content}\n          background={colData.background}\n          rowId={rowId}\n          colId={colData.id}\n          setEditMode={setEditMode}\n        />\n      )}\n      {!editMode && colData.content}\n    </td>\n  );\n};\n\nexport default Col;\n","import { ColType, RowType } from \"../../../../../duck/types\";\nimport { emptyCol } from \"../../../../../duck/constants\";\n\nexport const generateNewRows = (rows: RowType[], rowId: number): RowType[] => {\n  const prevRow = rows[rowId - 1];\n  const nextRow = rows[rowId];\n  const newRow: RowType = {\n    id: rowId + 1,\n    cols: [],\n  };\n\n  prevRow.cols.forEach((col: ColType, index) => {\n    const newCol = { ...emptyCol, id: col.id };\n\n    if (nextRow) {\n      const prevCol = prevRow.cols[index];\n      const nextCol = nextRow.cols[index];\n\n      if (\n        prevCol.rowSpan &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.id &&\n        nextCol.resourceFor.rowId === prevRow.id\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: { rowId, colId: col.id },\n        });\n      } else if (\n        prevCol.resourceFor &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.resourceFor.colId &&\n        nextCol.resourceFor.rowId === prevCol.resourceFor.rowId\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: prevCol.resourceFor,\n        });\n      } else {\n        newRow.cols.push(newCol);\n      }\n    } else {\n      newRow.cols.push(newCol);\n    }\n  });\n\n  const increasedCols: string[] = [];\n\n  newRow.cols.forEach((col) => {\n    if (col.resourceFor) {\n      const colId = `${col.resourceFor.rowId}${col.resourceFor.colId}`;\n\n      if (!increasedCols.includes(colId)) {\n        const rowSpan =\n          rows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n            .rowSpan || 0;\n\n        rows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].rowSpan = rowSpan + 1;\n\n        increasedCols.push(colId);\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    if (row.id > rowId) {\n      let newCols = row.cols.map((col: ColType) => ({\n        ...col,\n        ...(col.resourceFor && col.resourceFor.rowId > rowId\n          ? {\n              resourceFor: {\n                ...col.resourceFor,\n                rowId: col.resourceFor.rowId + 1,\n              },\n            }\n          : col.resourceFor),\n      }));\n\n      return { ...row, id: row.id + 1, cols: newCols };\n    }\n\n    return row;\n  });\n\n  newRows.splice(rowId, 0, newRow);\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (col.resourceFor) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsUpdate } from \"../../../../duck/actions\";\nimport { generateNewRows } from \"./duck/utils\";\nimport styles from \"./AddRow.module.css\";\n\ninterface AddRowType {\n  rowId: number;\n}\n\nconst AddRow: React.FC<AddRowType> = ({ rowId }) => {\n  const { dispatch, state } = React.useContext(TableContext);\n\n  const addNewRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(rowsUpdate({ rows: generateNewRows(state.rows, rowId) }));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addNewRowHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddRow;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { removeRow } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveRow.module.css\";\n\ninterface RemoveRowType {\n  rowId: number;\n  setRowSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveRow: React.FC<RemoveRowType> = ({ rowId, setRowSelected }) => {\n  const { dispatch } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeRow({ rowId }));\n    setRowSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveRow;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { RowType as RowDataType, ColType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { selectRow } from \"../../duck/actions\";\nimport { ROW_HEIGHT } from \"../../duck/constants\";\nimport Col from \"../col\";\nimport { AddRow, RemoveRow } from \"./components\";\nimport styles from \"./Row.module.css\";\n\ninterface RowType {\n  rowData: RowDataType;\n}\n\nconst Row: React.FC<RowType> = ({ rowData }) => {\n  const [rowSelected, setRowSelected] = React.useState(false);\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const selectRowHandler = () => {\n    setRowSelected(true);\n    dispatch(selectRow({ rowId: rowData.id }));\n  };\n\n  const outsideClickHandler = () => {\n    setRowSelected(false);\n  };\n\n  return (\n    <tr style={{ height: rowData.height || ROW_HEIGHT }}>\n      <td className={styles.techCol} onClick={selectRowHandler}>\n        <AddRow rowId={rowData.id} />\n        {rowSelected && state.rows.length > 1 && (\n          <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n            <RemoveRow rowId={rowData.id} setRowSelected={setRowSelected} />\n          </OutsideClickHandler>\n        )}\n      </td>\n      {rowData.cols.map((col: ColType) => (\n        <Col key={col.id} colData={col} rowId={rowData.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.css\";\n\ninterface ButtonType {\n  onClick?: () => any;\n  onBlur?: () => any;\n  className?: string;\n  active?: boolean;\n  style?: any;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<ButtonType> = ({\n  children,\n  onClick,\n  onBlur,\n  className,\n  style,\n  active = false,\n  disabled = false,\n}) => (\n  <button\n    disabled={disabled}\n    onClick={onClick}\n    onBlur={onBlur}\n    className={classNames(styles.wrapper, className, {\n      [styles.active]: active,\n      [styles.disabled]: disabled,\n    })}\n    style={style}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import { omit } from \"lodash-es\";\nimport {\n  AnyDispatch,\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectedColsType,\n  TableState,\n} from \"../../../../../duck/types\";\nimport {\n  belongs,\n  intersects,\n  isSingleSelection,\n} from \"../../../../../duck/utils\";\nimport { clearSelection, rowsUpdate } from \"../../../../../duck/actions\";\n\nexport const mergeCols = (state: TableState, dispatch: AnyDispatch): void => {\n  const { selectionState, rows } = state;\n  const resources: PositionStateType[] = [];\n  const { selectedCols } = selectionState;\n  const targetCol = {\n    rowId: selectedCols[0].rowId,\n    colId: selectedCols[0].colId,\n  };\n  let colSpan = { prevRowId: selectedCols[0].rowId, prevColId: 0, count: 0 };\n  let rowSpan = { prevRowId: 0, count: 0 };\n\n  selectedCols.forEach((selectedCol: SelectedColsType, index) => {\n    if (\n      selectedCol.colId !== colSpan.prevColId &&\n      selectedCol.rowId === colSpan.prevRowId\n    ) {\n      colSpan.prevColId = selectedCol.colId;\n      colSpan.count += 1;\n      if (selectedCols.length === index - 1 && selectedCol.colSpan) {\n        colSpan.count += selectedCol.colSpan;\n      }\n    }\n\n    if (selectedCol.rowId !== rowSpan.prevRowId) {\n      rowSpan.prevRowId = selectedCol.rowId;\n      rowSpan.count += 1;\n      if (\n        selectionState.selectedCols.length === index - 1 &&\n        selectedCol.rowSpan\n      ) {\n        rowSpan.count += selectedCol.rowSpan;\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    const newCols = row.cols.map((col: ColType) => {\n      const currentPosition: PositionStateType = {\n        rowId: row.id,\n        colId: col.id,\n      };\n      const isTargetCol =\n        targetCol.rowId === row.id && targetCol.colId === col.id;\n      const isBelongs = belongs(\n        selectionState.start as PositionStateType,\n        selectionState.end as PositionStateType,\n        currentPosition\n      );\n\n      if (isTargetCol && colSpan.count > 1) {\n        col.colSpan = colSpan.count;\n      }\n\n      if (isTargetCol && rowSpan.count > 1) {\n        col.rowSpan = rowSpan.count;\n      }\n\n      if (isBelongs && !isTargetCol) {\n        resources.push(currentPosition);\n      }\n\n      return {\n        ...(isBelongs && !isTargetCol\n          ? omit(col, [\"colSpan\", \"rowSpan\"])\n          : col),\n        ...(isTargetCol ? { resources: [] } : {}),\n        ...(isBelongs && !isTargetCol\n          ? { display: false, resourceFor: targetCol }\n          : {}),\n      };\n    });\n\n    return { ...row, cols: newCols };\n  });\n\n  newRows[targetCol.rowId - 1].cols[targetCol.colId - 1].resources = resources;\n\n  dispatch(rowsUpdate({ rows: newRows }));\n  dispatch(clearSelection());\n};\n\nexport const mergeAvailable = (state: TableState): boolean => {\n  const { selectionState, rows } = state;\n  const { selectedCols, start, end } = selectionState;\n  const singleSelection = isSingleSelection(selectionState);\n  const mergedCols: RangeType[] = [];\n  let isIntersects = false;\n  const size = {\n    maxColId: 0,\n    maxRowId: 0,\n    startColId: 0,\n    startRowId: 0,\n    get: function () {\n      return (\n        (this.maxColId - this.startColId + 1) *\n        (this.maxRowId - this.startRowId + 1)\n      );\n    },\n  };\n\n  rows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.colSpan || col.rowSpan) {\n        const colSpan = col.colSpan || 0;\n        const rowSpan = col.rowSpan || 0;\n\n        mergedCols.push({\n          row: {\n            min: row.id,\n            max: !!rowSpan ? row.id + rowSpan - 1 : row.id,\n          },\n          col: {\n            min: col.id,\n            max: !!colSpan ? col.id + colSpan - 1 : col.id,\n          },\n        });\n      }\n    });\n  });\n\n  selectedCols.forEach((col: SelectedColsType, index) => {\n    const colId = col.colSpan ? col.colId + col.colSpan - 1 : col.colId;\n    const rowId = col.rowSpan ? col.rowId + col.rowSpan - 1 : col.rowId;\n\n    if (colId > size.maxColId) {\n      size.maxColId = colId;\n    }\n\n    if (rowId > size.maxRowId) {\n      size.maxRowId = rowId;\n    }\n\n    if (index === 0) {\n      size.startColId = col.colId;\n      size.startRowId = col.rowId;\n    }\n  });\n\n  mergedCols.forEach((mergedCol: RangeType) => {\n    if (start && end && !isIntersects) {\n      const intersectStatus = intersects(mergedCol, {\n        row: {\n          min: start.rowId,\n          max: end.rowId,\n        },\n        col: {\n          min: start.colId,\n          max: end.colId,\n        },\n      });\n\n      if (intersectStatus === \"part\") {\n        isIntersects = true;\n      }\n    }\n  });\n\n  return (\n    !singleSelection && size.get() === selectedCols.length && !isIntersects\n  );\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { mergeAvailable, mergeCols } from \"./duck/operations\";\n\nconst Merge: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const mergeHandler = () => {\n    mergeCols(state, dispatch);\n  };\n\n  return (\n    <li>\n      <button\n        disabled={!mergeAvailable(state)}\n        onClick={mergeHandler}\n      >\n        Merge\n      </button>\n    </li>\n  );\n};\n\nexport default Merge;\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { unmergeCols } from \"./duck/operations\";\nimport { isSingleSelection } from \"../../../../duck/utils\";\n\nconst Unmerge: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const unmergeHandler = () => {\n    unmergeCols(state, dispatch);\n  };\n\n  return (\n    <li>\n      <button\n        disabled={\n          !(isSingleSelection(state.selectionState))\n        }\n        onClick={unmergeHandler}\n      >\n        Unmerge\n      </button>\n    </li>\n  );\n};\n\nexport default Unmerge;\n","import { omit } from \"lodash-es\";\nimport {\n  AnyDispatch,\n  PositionStateType,\n  TableState,\n} from \"../../../../../duck/types\";\nimport { clearSelection, rowsUpdate } from \"../../../../../duck/actions\";\n\nexport const unmergeCols = (state: TableState, dispatch: AnyDispatch) => {\n  const { selectionState, rows } = state;\n  const unmergeColPosition = selectionState.selectedCols[0];\n  const unmergeCol =\n    rows[unmergeColPosition.rowId - 1].cols[unmergeColPosition.colId - 1];\n\n  if (unmergeCol && unmergeCol.resources) {\n    unmergeCol.resources.forEach((resource: PositionStateType) => {\n      const resourceCol = rows[resource.rowId - 1].cols[resource.colId - 1];\n\n      rows[resource.rowId - 1].cols[resource.colId - 1] = {\n        ...omit(resourceCol, [\"resourceFor\"]),\n        display: true,\n      };\n    });\n  }\n\n  rows[unmergeColPosition.rowId - 1].cols[\n    unmergeColPosition.colId - 1\n  ] = omit(unmergeCol, [\"resources\", \"colSpan\", \"rowSpan\"]);\n\n  dispatch(rowsUpdate({ rows }));\n  dispatch(clearSelection());\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { BACKGROUND_COLORS } from \"../../../../duck/constants\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { updateColBackground } from \"../../../../duck/actions\";\nimport styles from \"./ChangeBackground.module.css\";\n\nconst ChangeBackground: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const changeColorHandler = (color: string | undefined) => {\n    dispatch(\n      updateColBackground({\n        selectionState: state.selectionState,\n        background: color,\n      })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Background color</button>\n      <div className={styles.colors}>\n        <button\n          onClick={() => changeColorHandler(undefined)}\n          className={classNames(styles.colorButton, styles.transparent)}\n        />\n        {BACKGROUND_COLORS.map((color: string) => (\n          <button\n            onClick={() => changeColorHandler(color)}\n            key={color}\n            style={{ background: color }}\n            className={styles.colorButton}\n          />\n        ))}\n      </div>\n    </li>\n  );\n};\n\nexport default ChangeBackground;\n","export default __webpack_public_path__ + \"static/media/setting.5524b19c.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../duck/context\";\nimport Button from \"../button\";\nimport { getMenuPosition, PositionType } from \"./duck/utils\";\nimport { Merge, ChangeBackground, Unmerge } from \"./components\";\nimport icon from \"./assets/setting.svg\";\nimport styles from \"./SelectionMenu.module.css\";\n\nconst SelectionMenu: React.FC = () => {\n  const { state } = React.useContext(TableContext);\n  const [position, setPosition] = React.useState<PositionType>();\n  const [opened, setOpened] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setPosition(\n        getMenuPosition(state.selectionState.start, state.selectionState.end)\n      );\n    }\n  }, [state]);\n\n  return (\n    <div\n      className={classNames(styles.wrapper, {\n        [styles.selected]:\n          state.selectionState.selected &&\n          state.selectionState.selectedCols.length > 0,\n      })}\n      style={position}\n    >\n      <Button\n        onClick={() => setOpened(!opened)}\n        className={styles.settingButton}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <OutsideClickHandler onOutsideClick={() => setOpened(false)}>\n          <ul className={styles.menu}>\n            <ChangeBackground />\n            <Merge />\n            <Unmerge />\n          </ul>\n        </OutsideClickHandler>\n      )}\n    </div>\n  );\n};\n\nexport default SelectionMenu;\n","import { getRange } from \"../../../duck/utils\";\nimport { PositionStateType } from \"../../../duck/types\";\n\nexport interface PositionType {\n  top: number;\n  left: number;\n}\n\nexport const getMenuPosition = (\n  start: PositionStateType,\n  end: PositionStateType\n): PositionType => {\n  const range = getRange(start, end);\n  const cell = document.getElementById(`col-${range.row.min}-${range.col.min}`);\n\n  if (cell) {\n    return {\n      top: cell.offsetTop + 5,\n      left: cell.offsetLeft + 5,\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0,\n  };\n};\n","import { ColType, RowType } from \"../../../duck/types\";\nimport { emptyCol } from \"../../../duck/constants\";\n\nexport const generateRowsWithNewCol = (\n  rows: RowType[],\n  colId: number\n): RowType[] => {\n  const newRows = rows.map((row: RowType) => {\n    const { cols } = row;\n\n    // updating all colId in curren row\n    let newCols = cols.map((col: ColType) => {\n      if (col.id > colId) {\n        return {\n          ...col,\n          id: col.id + 1,\n          ...(col.resources\n            ? {\n                resources: col.resources.map((currentResource) => ({\n                  ...currentResource,\n                  colId: currentResource.colId + 1,\n                })),\n              }\n            : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId + 1,\n                },\n              }\n            : col.resourceFor),\n        };\n      }\n      return col;\n    });\n\n    const lineContinuation =\n      newCols[colId - 1] &&\n      newCols[colId - 1].resourceFor &&\n      newCols[colId] &&\n      newCols[colId].resourceFor &&\n      newCols[colId - 1].resourceFor?.colId ===\n        newCols[colId].resourceFor?.colId;\n\n    const newCol: ColType = {\n      id: colId + 1,\n      ...emptyCol,\n      ...(newCols[colId - 1] && newCols[colId - 1].colSpan\n        ? {\n            display: false,\n            resourceFor: { rowId: row.id, colId: newCols[colId - 1].id },\n          }\n        : {}),\n      ...(lineContinuation\n        ? { display: false, resourceFor: newCols[colId - 1].resourceFor }\n        : {}),\n    };\n\n    if (newCols[colId - 1] && newCols[colId - 1].colSpan) {\n      // @ts-ignore\n      newCols[colId - 1].colSpan += 1;\n    }\n\n    if (lineContinuation) {\n      const { resourceFor } = newCols[colId - 1];\n\n      if (resourceFor && newCols[resourceFor.colId - 1]) {\n        // @ts-ignore\n        newCols[resourceFor.colId - 1].colSpan += 1;\n      }\n    }\n\n    newCols.splice(colId, 0, newCol);\n\n    return {\n      ...row,\n      cols: newCols,\n    };\n  });\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (col.resourceFor) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n\nexport const getColCount = (rows: RowType[]): number => {\n  let count = 0;\n\n  rows.forEach((row: RowType) => {\n    if (row.cols.length > count) {\n      count = row.cols.length;\n    }\n  });\n\n  return count;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsUpdate } from \"../../../../duck/actions\";\nimport { generateRowsWithNewCol } from \"../../duck/utils\";\nimport styles from \"./AddCol.module.css\";\n\ninterface AddColType {\n  colId: number;\n}\n\nconst AddCol: React.FC<AddColType> = ({ colId }) => {\n  const { dispatch, state } = React.useContext(TableContext);\n\n  const addColHandler = (e: any): void => {\n    e.stopPropagation();\n    dispatch(rowsUpdate({ rows: generateRowsWithNewCol(state.rows, colId) }));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addColHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddCol;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { removeCol } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveCol.module.css\";\n\ninterface RemoveColType {\n  colId: number;\n  setColSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveCol: React.FC<RemoveColType> = ({ colId, setColSelected }) => {\n  const { dispatch } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeCol({ colId }));\n    setColSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveCol;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { selectCol } from \"../../../../duck/actions\";\nimport AddCol from \"../add-col\";\nimport RemoveCol from \"../remove-col\";\nimport styles from \"./TechCol.module.css\";\n\ninterface TechColType {\n  colId: number;\n}\n\nconst TechCol: React.FC<TechColType> = ({ colId }) => {\n  const { state, dispatch } = React.useContext(TableContext);\n  const [colSelected, setColSelected] = React.useState(false);\n\n  const selectColHandler = () => {\n    setColSelected(true);\n    dispatch(selectCol({ colId }));\n  };\n\n  const outsideClickHandler = () => {\n    setColSelected(false);\n  };\n\n  return (\n    <td key={colId} onClick={selectColHandler} className={styles.techCol}>\n      <AddCol colId={colId} />\n      {state.rows[0].cols.length > 1 && colSelected && (\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <RemoveCol colId={colId} setColSelected={setColSelected} />\n        </OutsideClickHandler>\n      )}\n    </td>\n  );\n};\n\nexport default TechCol;\n","import React from \"react\";\nimport { TableContext } from \"../../duck/context\";\nimport { getColCount } from \"./duck/utils\";\nimport { TechCol } from \"./components\";\n\nconst TechRow: React.FC = () => {\n  const { state } = React.useContext(TableContext);\n  const [cols, setCols] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    setCols(\n      Array(getColCount(state.rows))\n        .fill({})\n        .map((col, index) => ({ ...col, id: index + 1 }))\n    );\n  }, [state]);\n\n  if (!state.rows.length) {\n    return null;\n  }\n\n  return (\n    <tr>\n      <td style={{ width: 10 }} />\n      {cols.map((col: any) => (\n        <TechCol key={col.id} colId={col.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default TechRow;\n","import React from \"react\";\nimport { TableContext } from \"./duck/context\";\nimport tableState from \"./duck/state\";\nimport tableReducer from \"./duck/reducer\";\nimport { RowType } from \"./duck/types\";\nimport { Row, SelectionMenu, TechRow } from \"./components\";\nimport styles from \"./Table.module.css\";\nimport classNames from \"classnames\";\n\ninterface TableType {\n  onChange?: (rows: RowType[]) => any;\n}\n\nconst Table: React.FC<TableType> = ({ onChange }) => {\n  const [state, dispatch] = React.useReducer(tableReducer, tableState);\n\n  React.useEffect(() => {\n    if (onChange && typeof onChange === \"function\") {\n      onChange(state.rows);\n    }\n  }, [state, onChange]);\n\n  return (\n    <TableContext.Provider value={{ dispatch, state }}>\n      <div className={styles.wrapper}>\n        <table\n          className={classNames(styles.table, {\n            [styles.filled]: !!state.rows.length,\n          })}\n        >\n          <tbody>\n            <TechRow />\n            {state.rows.map((row: RowType) => (\n              <Row key={row.id} rowData={row} />\n            ))}\n          </tbody>\n        </table>\n        <SelectionMenu />\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { Table } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}