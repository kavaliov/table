{"version":3,"sources":["components/table/components/col/components/text/components/panel/components/insert-image/InsertImage.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/ImageMenu.module.css","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/components/change-size/ChangeSize.module.css","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/KatexMenu.module.css","components/table/components/row/components/remove-row/RemoveRow.module.css","components/table/components/tech-row/components/remove-col/RemoveCol.module.css","components/table/components/tech-row/components/change-width/ChangeWidth.module.css","components/table/duck/context.ts","components/table/duck/state.ts","components/table/duck/actions.ts","components/table/duck/utils.ts","components/table/duck/reducer.ts","components/table/components/col/components/text/components/panel/components/bold/bold.svg","components/table/components/button/Button.tsx","components/table/components/col/components/text/components/panel/components/bold/Bold.tsx","components/table/components/col/components/text/components/panel/components/italic/italic.svg","components/table/components/col/components/text/components/panel/components/italic/Italic.tsx","components/table/components/col/components/text/components/panel/components/underline/underline.svg","components/table/components/col/components/text/components/panel/components/underline/Underline.tsx","components/table/components/col/components/text/components/panel/components/unordered-list/unordered-list.svg","components/table/components/col/components/text/components/panel/components/unordered-list/UnorderedList.tsx","components/table/components/col/components/text/components/panel/components/ordered-list/ordered-list.svg","components/table/components/col/components/text/components/panel/components/ordered-list/OrderedList.tsx","components/table/components/col/components/text/duck/context.ts","components/table/components/col/components/text/duck/utils.ts","components/table/components/col/components/text/components/panel/components/font-size/duck/constants.ts","components/table/components/col/components/text/components/panel/components/font-size/FontSize.tsx","components/table/components/col/components/text/duck/constants.ts","components/table/components/col/components/text/components/panel/components/colors/duck/constants.ts","components/table/components/col/components/text/components/panel/components/colors/Colors.tsx","components/table/components/col/components/text/components/panel/components/align-right/align-right.svg","components/table/components/col/components/text/components/panel/components/align-right/AlignRight.tsx","components/table/components/col/components/text/components/panel/components/align-left/align-left.svg","components/table/components/col/components/text/components/panel/components/align-left/AlignLeft.tsx","components/table/components/col/components/text/components/panel/components/align-center/align-center.svg","components/table/components/col/components/text/components/panel/components/align-center/AlignCenter.tsx","components/table/components/col/components/text/components/panel/components/insert-image/picture.svg","components/table/components/col/components/text/components/panel/components/insert-image/InsertImage.tsx","components/table/components/col/components/text/components/panel/components/insert-katex/function.svg","components/table/components/col/components/text/components/panel/components/insert-katex/InsertKatex.tsx","components/table/components/col/components/text/components/panel/Panel.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/remove/delete.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/remove/Remove.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/duck/operations.ts","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-left/pic-left.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-left/FloatLeft.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-right/pic-right.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-right/FloatRight.tsx","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-center/pic-center.svg","components/table/components/col/components/text/components/custom-blocks/components/general-controls/float-center/FloatCenter.tsx","components/table/components/col/components/text/components/custom-blocks/duck/operations.ts","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/change-size/crop.svg","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/change-size/ChangeSize.tsx","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/link/link.svg","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/link/Link.tsx","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/ImageMenu.tsx","components/table/components/col/components/text/components/custom-blocks/components/image/Image.tsx","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/components/change-size/duck/constants.ts","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/components/change-size/ChangeSize.tsx","components/table/components/col/components/text/components/custom-blocks/components/katex/components/katex-menu/KatexMenu.tsx","components/table/components/col/components/text/components/custom-blocks/components/katex/Katex.tsx","components/table/components/col/components/text/components/custom-blocks/CustomBlock.tsx","components/table/components/col/components/text/Text.tsx","components/table/components/col/components/answer/components/teacher-answer/assets/info-circle.svg","components/table/components/col/components/answer/duck/selectors.ts","components/table/components/col/components/answer/components/teacher-answer/TeacherAnswer.tsx","components/table/components/col/components/answer/Answer.tsx","components/table/components/col/Col.tsx","components/table/duck/constants.ts","components/table/components/row/components/add-row/duck/utils.ts","components/table/components/row/components/add-row/AddRow.tsx","components/table/components/row/components/remove-row/assets/close-circle.svg","components/table/components/row/components/remove-row/RemoveRow.tsx","components/table/components/row/Row.tsx","components/table/components/selection-menu/components/merge/duck/operations.ts","components/table/components/selection-menu/components/merge/Merge.tsx","components/table/components/selection-menu/components/unmerge/Unmerge.tsx","components/table/components/selection-menu/components/unmerge/duck/operations.ts","components/table/components/selection-menu/components/change-background/ChangeBackground.tsx","components/table/components/selection-menu/components/change-type/duck/constants.ts","components/table/components/selection-menu/components/change-type/assets/check-circle.svg","components/table/components/selection-menu/components/change-type/ChangeType.tsx","components/table/components/selection-menu/components/set-answer/components/answer-modal/AnswerModal.tsx","components/table/components/selection-menu/components/set-answer/SetAnswer.tsx","components/table/components/selection-menu/assets/setting.svg","components/table/components/selection-menu/SelectionMenu.tsx","components/table/components/selection-menu/duck/utils.ts","components/table/components/tech-row/duck/utils.ts","components/table/components/tech-row/components/add-col/AddCol.tsx","components/table/components/tech-row/components/remove-col/assets/close-circle.svg","components/table/components/tech-row/components/remove-col/RemoveCol.tsx","components/table/components/tech-row/components/change-width/ChangeWidth.tsx","components/table/components/tech-row/components/tech-col/TechCol.tsx","components/table/components/tech-row/TechRow.tsx","components/table/Table.tsx","App.tsx","index.tsx","components/table/components/col/components/text/components/panel/Panel.module.css","components/table/components/col/components/text/components/panel/components/headers/Headers.module.css","components/table/components/col/components/text/components/panel/components/colors/Colors.module.css","components/table/components/col/components/text/components/panel/components/insert-katex/InsertKatex.module.css","components/table/components/selection-menu/components/change-background/ChangeBackground.module.css","components/table/components/button/Button.module.css","components/table/components/col/components/text/components/panel/components/font-size/FontSize.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/change-size/ChangeSize.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/components/image-menu/components/link/Link.module.css","components/table/components/col/components/text/components/custom-blocks/components/katex/Katex.module.css","components/table/components/selection-menu/components/change-type/ChangeType.module.css","components/table/components/selection-menu/SelectionMenu.module.css","components/table/components/col/components/answer/Answer.module.css","components/table/components/col/Col.module.css","components/table/Table.module.css","components/table/components/col/components/text/components/custom-blocks/components/image/Image.module.css","components/table/components/col/components/text/Text.module.css","components/table/components/col/components/answer/components/teacher-answer/TeacherAnswer.module.css","components/table/components/row/components/add-row/AddRow.module.css","components/table/components/row/Row.module.css","components/table/components/selection-menu/components/set-answer/components/answer-modal/AnswerModal.module.css","components/table/components/selection-menu/components/set-answer/SetAnswer.module.css","components/table/components/tech-row/components/add-col/AddCol.module.css","components/table/components/tech-row/components/tech-col/TechCol.module.css"],"names":["module","exports","TableContext","React","initialTableState","touched","selectionState","selectedCols","selected","initialRowsState","id","cols","content","type","display","setStartSelection","createStandardAction","setEndSelection","clearSelection","selectRow","selectCol","rowsUpdate","updateColContent","updateColBackground","updateColType","removeRow","setColWidth","removeCol","setTeacherAnswer","setStudentAnswer","tableStateActions","rowsStateActions","answersStateActions","getRange","start","end","row","min","rowId","max","col","colId","belongs","current","range","isSingleSelection","firstCol","rowSpan","colSpan","length","getCol","rows","position","tableStateReducer","createReducer","handleAction","state","payload","positionStart","positionEnd","finished","stateStart","push","allocatedRow","map","r","rowsStateReducer","background","newCols","width","newRows","decreasedParent","forEach","rowIndex","colToDelete","resources","newResources","reduce","acc","resource","omit","resourceFor","parentCol","parentId","includes","newColSpan","item","splice","index","rowToRemove","colIndex","slice","newRowSpan","answersStateReducer","answer","updated","newState","stateStudentAnswer","studentAnswer","teacherAnswer","stateTeacherAnswer","Button","children","onClick","onMouseDown","onBlur","className","style","active","disabled","small","e","undefined","classNames","styles","wrapper","Bold","editorState","setEditorState","useState","bold","setBold","useEffect","inlineStyle","getCurrentInlineStyle","has","preventDefault","RichUtils","toggleInlineStyle","src","icon","alt","Italic","italic","setItalic","Underline","underline","setUnderline","UnorderedList","unordered","setUnordered","blockType","getCurrentBlockType","toggleBlockType","OrderedList","ordered","setOrdered","TextContext","getBlockStyle","block","getType","indexOf","getBlockTypeByKey","blockKey","getCurrentContent","getBlockForKey","removeBlock","contentState","before","getBlockBefore","getKey","after","getBlockAfter","selectionOfAtomicBlock","getSelection","merge","anchorKey","anchorOffset","focusKey","focusOffset","contentStateWithoutEntity","Modifier","applyEntity","editorStateWithoutEntity","EditorState","contentStateWithoutBlock","removeRange","getCurrentStyle","toJS","FONT_SIZES","label","value","FontSize","useContext","fontSize","setFontSize","opened","setOpened","currentFontSize","font","find","size","fontSelect","openButton","list","changeFontSizeHandler","fontButton","TEXT_COLORS","customStyleMap","FONT_SIZE_9","FONT_SIZE_10","FONT_SIZE_13","FONT_SIZE_14","FONT_SIZE_16","FONT_SIZE_18","FONT_SIZE_21","FONT_SIZE_24","COLOR_1","color","COLOR_2","COLOR_3","COLOR_4","COLOR_5","COLOR_6","COLOR_7","COLOR_8","COLOR_9","COLORS","Colors","currentColor","setCurrentColor","colorButton","opener","backgroundColor","panel","changeColorHandler","AlignRight","right","setRight","AlignLeft","left","setLeft","AlignCenter","InsertImage","inputRef","useRef","ref","onChange","fileInput","Promise","resolve","reject","files","reader","FileReader","readAsDataURL","onload","result","onerror","error","then","blob","contentStateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","newEditorState","set","currentContent","AtomicBlockUtils","insertAtomicBlock","input","click","InsertKatex","String","raw","expression","setExpression","target","textarea","buttons","insertButton","Panel","separator","Remove","removeIcon","changeAtomicFloating","oldSelection","newSelection","createAtomicSelection","acceptSelection","selection","setBlockType","setAtomicBlockType","prevEditorState","FloatLeft","alignLeft","setAlignLeft","FloatRight","alignRight","setAlignRight","alignCenter","setAlignCenter","changeBlockData","data","entityAt","getEntityAt","newContent","mergeEntityData","ChangeSize","setEditMode","widthInputRef","getEntity","getData","height","setSize","focus","closeHandler","onChangeHandler","prevSize","name","stopPropagation","onDoubleClick","onOutsideClick","formTitle","autoComplete","forceSelection","changeButton","Link","hrefInputRef","href","setHref","ImageMenu","FloatCenter","rel","Image","entity","editMode","imageRef","clickHandler","prevOpened","SIZES","select","KatexMenu","Katex","containerRef","katex","render","throwOnError","container","CustomBlock","setSelected","getAnchorKey","Text","dispatchRowsState","editorRef","createEmpty","createWithContent","convertFromRaw","console","log","Provider","editor","convertToRaw","blockStyleFn","blockRendererFn","component","editable","readOnly","handleKeyCommand","command","beforeBlock","getFocusKey","getBeforeBlock","getEndOffset","getCurrentAnswer","answers","filter","itemAnswer","TeacherAnswer","answersState","setAnswer","answerWrapper","Answer","dispatchAnswersState","teacherMode","textAreaRef","defaultValue","text","voidHandler","Col","memo","colData","setPositionEnd","rowsState","tableState","dispatchTableState","builderMode","onMouseUp","onMouseEnter","emptyCol","BACKGROUND_COLORS","generateNewRows","prevRow","nextRow","newRow","newCol","prevCol","nextCol","increasedCols","AddRow","addButton","RemoveRow","setRowSelected","Row","rowData","rowSelected","setWidth","tdRef","techCol","closest","offsetWidth","selectArea","mergeAvailable","context","singleSelection","mergedCols","isIntersects","maxColId","maxRowId","startColId","startRowId","get","this","mergedCol","colRange","selectionRange","Math","bottom","top","colSquare","intersects","Merge","targetCol","prevRowId","prevColId","count","selectedCol","currentPosition","isTargetCol","isBelongs","mergeCols","Unmerge","canUnmerged","setCanUnmerged","selectionStart","unmergeColPosition","unmergeCol","resourceCol","unmergeCols","ChangeBackground","colors","transparent","TYPES","ChangeType","currentType","setCurrentType","selectedRowId","selectedColId","types","AnswerModal","closeAnswer","textareaRef","colPosition","SetAnswer","answerOpened","setAnswerOpened","SelectionMenu","setPosition","selectedType","setSelectedType","cell","document","getElementById","offsetTop","offsetLeft","getMenuPosition","settingButton","menu","generateRowsWithNewCol","currentResource","lineContinuation","AddCol","RemoveCol","setColSelected","ChangeWidth","tableHeight","pressed","setPressed","setStart","onUpHandler","screenX","onMouseLeave","onMouseMove","div","TechCol","colSelected","setHeight","td","offsetHeight","TechRow","setCols","Array","getColCount","fill","Table","onAnswerChange","useReducer","table","filled","App","setEditable","setTeacherMode","margin","userSelect","cursor","marginRight","checked","event","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e14799b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"InsertImage_input__UORoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ImageMenu_wrapper__hyI8u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"ChangeSize_select__2PxxQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"KatexMenu_wrapper__1QQ__\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveRow_wrapper__QxJap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveCol_wrapper__2M4QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeWidth_wrapper__Ul3dY\"};","import * as React from \"react\";\nimport { TableContext as TableContextType } from \"./types\";\n\nexport const TableContext = React.createContext<TableContextType>(null as any);\n","import { TableState, RowsState, AnswersState } from \"./types\";\n\nexport const initialTableState: TableState = {\n  touched: false,\n  selectionState: {\n    selectedCols: [],\n    selected: false,\n  },\n};\n\nexport const initialRowsState: RowsState = [\n  {\n    id: 1,\n    cols: [\n      {\n        content: \"\",\n        type: \"text\",\n        display: true,\n        id: 1,\n      },\n      {\n        content: \"\",\n        type: \"text\",\n        display: true,\n        id: 2,\n      },\n    ],\n  },\n];\n\nexport const initialAnswersState: AnswersState = [];\n","import { createStandardAction } from \"typesafe-actions\";\nimport {\n  PositionStateType,\n  RowType,\n  SelectionStateType,\n} from \"./types\";\n\nconst setStartSelection = createStandardAction(\"TABLE/SET_START_SELECTION\")<{\n  positionStart: PositionStateType;\n}>();\n\nconst setEndSelection = createStandardAction(\"TABLE/SET_END_SELECTION\")<{\n  positionEnd: PositionStateType;\n  finished: boolean;\n  rows: RowType[];\n}>();\n\nconst clearSelection = createStandardAction(\"TABLE/CLEAR_SELECTION\")();\n\nconst selectRow = createStandardAction(\"TABLE/SELECT_ROW\")<{\n  rowId: number;\n  rows: RowType[];\n}>();\n\nconst selectCol = createStandardAction(\"TABLE/SELECT_COL\")<{\n  colId: number;\n  rows: RowType[];\n}>();\n\nconst rowsUpdate = createStandardAction(\"TABLE/ROWS_UPDATE\")<{\n  rows: RowType[];\n}>();\n\nconst updateColContent = createStandardAction(\"TABLE/UPDATE_COL_CONTENT\")<{\n  rowId: number;\n  colId: number;\n  content: any;\n}>();\n\nconst updateColBackground = createStandardAction(\n  \"TABLE/UPDATE_COL_BACKGROUND\"\n)<{\n  selectionState: SelectionStateType;\n  background: string | undefined;\n}>();\n\nconst updateColType = createStandardAction(\"TABLE/UPDATE_COL_TYPE\")<{\n  selectionState: SelectionStateType;\n  type: string;\n}>();\n\nconst removeRow = createStandardAction(\"TABLE/REMOVE_ROW\")<{\n  rowId: number;\n}>();\n\nconst setColWidth = createStandardAction(\"TABLE/SET_COL_WIDTH\")<{\n  colId: number;\n  width: number;\n}>();\n\nconst removeCol = createStandardAction(\"TABLE/REMOVE_COL\")<{\n  colId: number;\n}>();\n\nconst setTeacherAnswer = createStandardAction(\"TABLE/SET_TEACHER_ANSWER\")<{\n  rowId: number;\n  colId: number;\n  answer: string;\n}>();\n\nconst setStudentAnswer = createStandardAction(\"TABLE/SET_STUDENT _ANSWER\")<{\n  rowId: number;\n  colId: number;\n  answer: string;\n}>();\n\nconst tableStateActions = {\n  setStartSelection,\n  setEndSelection,\n  clearSelection,\n  selectCol,\n  selectRow,\n};\n\nconst rowsStateActions = {\n  rowsUpdate,\n  updateColContent,\n  updateColBackground,\n  updateColType,\n  removeRow,\n  setColWidth,\n  removeCol,\n};\n\nconst answersStateActions = {\n  setTeacherAnswer,\n  setStudentAnswer\n};\n\nexport { tableStateActions, rowsStateActions, answersStateActions };\n","import {\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectionStateType,\n} from \"./types\";\n\nexport const getRange = (\n  start: PositionStateType,\n  end: PositionStateType\n): RangeType => ({\n  row: {\n    min: start.rowId < end.rowId ? start.rowId : end.rowId,\n    max: start.rowId < end.rowId ? end.rowId : start.rowId,\n  },\n  col: {\n    min: start.colId < end.colId ? start.colId : end.colId,\n    max: start.colId < end.colId ? end.colId : start.colId,\n  },\n});\n\nexport const belongs = (\n  start: PositionStateType,\n  end: PositionStateType,\n  current: PositionStateType\n): boolean => {\n  const range = getRange(start, end);\n\n  return (\n    current.rowId >= range.row.min &&\n    current.rowId <= range.row.max &&\n    current.colId >= range.col.min &&\n    current.colId <= range.col.max\n  );\n};\n\nexport const isSingleSelection = (\n  selectionState: SelectionStateType\n): boolean => {\n  const { selectedCols, start, end } = selectionState;\n  const firstCol = selectedCols[0];\n  const rowSpan = firstCol?.rowSpan ? firstCol.rowSpan - 1 : 0;\n  const colSpan = firstCol?.colSpan ? firstCol.colSpan - 1 : 0;\n\n  if (start && end && start.rowId === end.rowId && start.colId === end.colId) {\n    return true;\n  }\n\n  return (\n    (rowSpan > 0 || colSpan > 0) &&\n    !!start &&\n    !!end &&\n    end.rowId === start.rowId + rowSpan &&\n    end.colId === start.colId + colSpan &&\n    selectedCols.length > 1\n  );\n};\n\nexport const intersects = (\n  colRange: RangeType,\n  selectionRange: RangeType\n): \"full\" | \"part\" | \"not\" => {\n  const left = Math.max(colRange.col.min - 1, selectionRange.col.min - 1);\n  const right = Math.min(colRange.col.max, selectionRange.col.max);\n  const bottom = Math.max(colRange.row.min - 1, selectionRange.row.min - 1);\n  const top = Math.min(colRange.row.max, selectionRange.row.max);\n  const colSquare =\n    (colRange.col.max - colRange.col.min + 1) *\n    (colRange.row.max - colRange.row.min + 1);\n\n  if (left < right && bottom < top) {\n    const intersectsSquare = (right - left) * (top - bottom);\n    if (intersectsSquare === colSquare) {\n      return \"full\";\n    } else {\n      return \"part\";\n    }\n  } else {\n    return \"not\";\n  }\n};\n\nexport const getCol = (rows: RowType[], position: PositionStateType): ColType =>\n  rows[position.rowId - 1].cols[position.colId - 1];\n","import { ActionType, createReducer } from \"typesafe-actions\";\nimport { omit } from \"lodash-es\";\nimport {\n  initialRowsState,\n  initialTableState,\n  initialAnswersState,\n} from \"./state\";\nimport {\n  rowsStateActions,\n  tableStateActions,\n  answersStateActions,\n} from \"./actions\";\nimport * as Types from \"./types\";\nimport {\n  Answer,\n  AnswersState,\n  ColType,\n  PositionStateType,\n  RowType,\n  SelectedColsType,\n} from \"./types\";\nimport { belongs, getRange } from \"./utils\";\n\ntype TableStateAction = ActionType<typeof tableStateActions>;\ntype RowsStateAction = ActionType<typeof rowsStateActions>;\ntype AnswersStateAction = ActionType<typeof answersStateActions>;\n\nexport const tableStateReducer = createReducer<\n  Types.TableState,\n  TableStateAction\n>(initialTableState)\n  .handleAction(\n    tableStateActions.setStartSelection,\n    (state, { payload: { positionStart } }) => ({\n      touched: true,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n        start: positionStart,\n      },\n    })\n  )\n  .handleAction(\n    tableStateActions.setEndSelection,\n    (state, { payload: { positionEnd, finished, rows } }) => {\n      const selectedCols: SelectedColsType[] = [];\n      const stateStart = state.selectionState.start;\n\n      if (finished && stateStart) {\n        const range = getRange(stateStart, positionEnd);\n        const start = { rowId: range.row.min, colId: range.col.min };\n        const end = { rowId: range.row.max, colId: range.col.max };\n\n        for (let rowId = start.rowId; rowId <= end.rowId; rowId += 1) {\n          const col = { rowId };\n\n          for (let colId = start.colId; colId <= end.colId; colId += 1) {\n            const colSpan = rows[rowId - 1].cols[colId - 1].colSpan;\n            const rowSpan = rows[rowId - 1].cols[colId - 1].rowSpan;\n\n            selectedCols.push({\n              ...col,\n              colId,\n              ...(rowSpan ? { rowSpan } : {}),\n              ...(colSpan ? { colSpan } : {}),\n            });\n          }\n        }\n      }\n\n      return {\n        ...state,\n        ...(finished ? { touched: false } : {}),\n        selectionState: {\n          ...state.selectionState,\n          selectedCols,\n          ...(finished ? { selected: true } : {}),\n          end: positionEnd,\n        },\n      };\n    }\n  )\n  .handleAction(tableStateActions.clearSelection, (state) => ({\n    ...state,\n    selectionState: {\n      selectedCols: [],\n      selected: false,\n    },\n  }))\n  .handleAction(\n    tableStateActions.selectRow,\n    (state, { payload: { rowId, rows } }) => {\n      const allocatedRow = rows[rowId - 1];\n\n      const selectedCols = allocatedRow.cols.map((col: ColType) => ({\n        rowId,\n        colId: col.id,\n      }));\n\n      return {\n        ...state,\n        selectionState: {\n          selected: true,\n          selectedCols,\n          start: { rowId, colId: allocatedRow.cols[0].id },\n          end: {\n            rowId,\n            colId: allocatedRow.cols[allocatedRow.cols.length - 1].id,\n          },\n        },\n      };\n    }\n  )\n  .handleAction(\n    tableStateActions.selectCol,\n    (state, { payload: { colId, rows } }) => {\n      const selectedCols: PositionStateType[] = [];\n\n      for (let r = 1; r <= rows.length; r += 1) {\n        selectedCols.push({ rowId: r, colId });\n      }\n\n      return {\n        ...state,\n        selectionState: {\n          selected: true,\n          selectedCols,\n          start: { rowId: rows[0].id, colId },\n          end: {\n            rowId: rows[rows.length - 1].id,\n            colId,\n          },\n        },\n      };\n    }\n  );\n\nexport const rowsStateReducer = createReducer<Types.RowsState, RowsStateAction>(\n  initialRowsState\n)\n  .handleAction(\n    rowsStateActions.rowsUpdate,\n    (state, { payload: { rows } }) => rows\n  )\n  .handleAction(\n    rowsStateActions.updateColBackground,\n    (state, { payload: { selectionState, background } }) =>\n      state.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, background };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      })\n  )\n  .handleAction(\n    rowsStateActions.updateColType,\n    (state, { payload: { selectionState, type } }) =>\n      state.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, type };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      })\n  )\n  .handleAction(\n    rowsStateActions.setColWidth,\n    (state, { payload: { colId, width } }) =>\n      state.map((row) => {\n        const newCols = row.cols.map((col: ColType) => ({\n          ...col,\n          ...(col.id === colId ? { width } : {}),\n        }));\n\n        return { ...row, cols: newCols };\n      })\n  )\n  .handleAction(\n    rowsStateActions.updateColContent,\n    (state, { payload: { colId, rowId, content } }) =>\n      state.map((row: RowType) => ({\n        ...row,\n        ...(row.id === rowId\n          ? {\n              cols: row.cols.map((col: ColType) => ({\n                ...col,\n                ...(col.id === colId ? { ...col, content } : col),\n              })),\n            }\n          : {}),\n      }))\n  )\n  .handleAction(rowsStateActions.removeCol, (state, { payload: { colId } }) => {\n    const newRows = state;\n    const decreasedParent: string[] = [];\n\n    newRows.forEach((row: RowType, rowIndex) => {\n      const colToDelete = row.cols[colId - 1];\n\n      if (colToDelete.resources && colToDelete.colSpan) {\n        const { resources } = colToDelete;\n\n        const newResources = resources.reduce(\n          (acc: PositionStateType[], resource) => {\n            if (\n              resource.colId !==\n              colToDelete.id + (colToDelete.colSpan || 0) - 1\n            ) {\n              acc.push(resource);\n            }\n            return acc;\n          },\n          []\n        );\n\n        newRows[rowIndex].cols[colId] = {\n          ...omit(colToDelete, [\"colSpan\", \"resources\"]),\n          ...(colToDelete.colSpan && colToDelete.colSpan > 2\n            ? { colSpan: colToDelete.colSpan - 1 }\n            : {}),\n        };\n\n        if (newResources.length > 0) {\n          newRows[rowIndex].cols[colId].resources = newResources;\n        }\n      }\n\n      if (colToDelete.resourceFor && colToDelete.resourceFor.colId !== colId) {\n        let parentCol =\n          newRows[colToDelete.resourceFor.rowId - 1].cols[\n            colToDelete.resourceFor.colId - 1\n          ];\n\n        const parentId = `${colToDelete.resourceFor.rowId}-${colToDelete.resourceFor.colId}`;\n\n        if (!decreasedParent.includes(parentId)) {\n          decreasedParent.push(parentId);\n          const newColSpan = (parentCol.colSpan || 1) - 1;\n          const newResources = parentCol.resources?.reduce(\n            (acc: PositionStateType[], item) => {\n              if (item.colId !== parentCol.id + (parentCol.colSpan || 0) - 1) {\n                acc.push(item);\n              }\n              return acc;\n            },\n            []\n          );\n\n          if (newColSpan > 1) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].colSpan = newColSpan;\n          } else {\n            parentCol = omit(parentCol, [\"colSpan\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n\n          if (newResources && newResources.length > 0) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].resources = newResources;\n          } else {\n            parentCol = omit(parentCol, [\"resources\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n        }\n      }\n\n      row.cols.splice(colId - 1, 1);\n\n      row.cols = row.cols.map((col: ColType, index) => {\n        return {\n          ...col,\n          id: index + 1,\n        };\n      });\n    });\n\n    return newRows.map((row: RowType, index: number) => {\n      const newCols = row.cols.map((col: ColType) => {\n        const newResources = col.resources?.map((resource) => ({\n          ...resource,\n          colId: resource.colId > colId ? resource.colId - 1 : resource.colId,\n        }));\n\n        return {\n          ...col,\n          ...(newResources ? { resources: newResources } : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId - 1,\n                },\n              }\n            : {}),\n        };\n      });\n\n      return {\n        ...row,\n        id: index + 1,\n        cols: newCols,\n      };\n    });\n  })\n  .handleAction(rowsStateActions.removeRow, (state, { payload: { rowId } }) => {\n    const rowToRemove = state[rowId - 1];\n    const newRows = state;\n    const decreasedParent: string[] = [];\n\n    rowToRemove.cols.forEach((colToDelete: ColType, colIndex) => {\n      if (colToDelete.resources && colToDelete.rowSpan) {\n        const { resources } = colToDelete;\n\n        const newResources = resources?.slice(\n          0,\n          resources.length - (colToDelete.colSpan || 1)\n        );\n\n        newRows[rowId].cols[colIndex] = {\n          ...omit(colToDelete, [\"rowSpan\", \"resources\"]),\n          ...(colToDelete.rowSpan && colToDelete.rowSpan > 2\n            ? { rowSpan: colToDelete.rowSpan - 1 }\n            : {}),\n        };\n\n        if (newResources.length > 0 && newRows[rowId].cols[colIndex]) {\n          newRows[rowId].cols[colIndex].resources = newResources;\n        }\n      }\n\n      if (colToDelete.resourceFor && colToDelete.resourceFor.rowId !== rowId) {\n        let parentCol =\n          newRows[colToDelete.resourceFor.rowId - 1].cols[\n            colToDelete.resourceFor.colId - 1\n          ];\n\n        const parentId = `${colToDelete.resourceFor.rowId}-${colToDelete.resourceFor.colId}`;\n\n        if (!decreasedParent.includes(parentId)) {\n          decreasedParent.push(parentId);\n          const newRowSpan = (parentCol.rowSpan || 1) - 1;\n          const newResources = parentCol.resources?.slice(\n            0,\n            parentCol.resources.length - (parentCol.colSpan || 1)\n          );\n\n          if (newRowSpan > 1) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].rowSpan = newRowSpan;\n          } else {\n            parentCol = omit(parentCol, [\"rowSpan\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n\n          if (newResources && newResources.length > 0) {\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ].resources = newResources;\n          } else {\n            parentCol = omit(parentCol, [\"resources\"]);\n\n            newRows[colToDelete.resourceFor.rowId - 1].cols[\n              colToDelete.resourceFor.colId - 1\n            ] = parentCol;\n          }\n        }\n      }\n    });\n\n    newRows.splice(rowId - 1, 1);\n\n    return newRows.map((row: RowType, index: number) => {\n      const newCols = row.cols.map((col: ColType) => {\n        return {\n          ...col,\n          ...(col.resourceFor && col.resourceFor.rowId > rowId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  rowId: col.resourceFor.rowId - 1,\n                },\n              }\n            : {}),\n        };\n      });\n\n      return {\n        ...row,\n        id: index + 1,\n        cols: newCols,\n      };\n    });\n  });\n\nexport const answersStateReducer = createReducer<\n  Types.AnswersState,\n  AnswersStateAction\n>(initialAnswersState)\n  .handleAction(\n    answersStateActions.setStudentAnswer,\n    (state: AnswersState, { payload: { rowId, colId, answer } }) => {\n      let updated = false;\n      const newState: AnswersState = state.map((stateStudentAnswer) => {\n        if (\n          stateStudentAnswer.rowId === rowId &&\n          stateStudentAnswer.colId === colId\n        ) {\n          updated = true;\n          return { ...stateStudentAnswer, studentAnswer: answer };\n        } else {\n          return stateStudentAnswer;\n        }\n      });\n\n      if (!updated) {\n        newState.push({\n          rowId,\n          colId,\n          studentAnswer: answer,\n          teacherAnswer: \"\",\n        });\n      }\n\n      return newState;\n    }\n  )\n  .handleAction(\n    answersStateActions.setTeacherAnswer,\n    (state: Answer[], { payload: { rowId, colId, answer } }) => {\n      let updated = false;\n      const newState: AnswersState = state.map((stateTeacherAnswer) => {\n        if (\n          stateTeacherAnswer.rowId === rowId &&\n          stateTeacherAnswer.colId === colId\n        ) {\n          updated = true;\n          return { ...stateTeacherAnswer, teacherAnswer: answer };\n        } else {\n          return stateTeacherAnswer;\n        }\n      });\n\n      if (!updated) {\n        newState.push({\n          rowId,\n          colId,\n          studentAnswer: \"\",\n          teacherAnswer: answer,\n        });\n      }\n\n      return newState;\n    }\n  );\n","export default __webpack_public_path__ + \"static/media/bold.aaa73dad.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.css\";\n\ninterface ButtonType {\n  onClick?: (e: any) => any;\n  onMouseDown?: (e: any) => any;\n  onBlur?: () => any;\n  className?: string;\n  active?: boolean;\n  style?: any;\n  disabled?: boolean;\n  small?: boolean;\n}\n\nconst Button: React.FC<ButtonType> = ({\n  children,\n  onClick,\n  onMouseDown,\n  onBlur,\n  className,\n  style,\n  active = false,\n  disabled = false,\n  small,\n}) => (\n  <button\n    disabled={disabled}\n    onClick={onClick ? (e: any) => onClick(e) : undefined}\n    onMouseDown={onMouseDown ? (e: any) => onMouseDown(e) : undefined}\n    onBlur={onBlur}\n    className={classNames(styles.wrapper, className, {\n      [styles.active]: active,\n      [styles.disabled]: disabled,\n      [styles.small]: small,\n    })}\n    style={style}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./bold.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Bold: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const [bold, setBold] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const inlineStyle = editorState.getCurrentInlineStyle();\n    setBold(inlineStyle.has(\"BOLD\"));\n  }, [editorState]);\n\n  const boldHandler = () => {\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"BOLD\"));\n  };\n\n  return (\n    <Button\n      active={bold}\n      small\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={boldHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Bold;\n","export default __webpack_public_path__ + \"static/media/italic.8e03cb99.svg\";","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./italic.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Italic: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const [italic, setItalic] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const inlineStyle = editorState.getCurrentInlineStyle();\n    setItalic(inlineStyle.has(\"ITALIC\"));\n  }, [editorState]);\n\n  const italicHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"ITALIC\"));\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={italic}\n      small\n      onClick={italicHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Italic;\n","export default __webpack_public_path__ + \"static/media/underline.037f1cd5.svg\";","import React from \"react\";\nimport { RichUtils, EditorState } from \"draft-js\";\nimport icon from \"./underline.svg\";\nimport Button from \"../../../../../../../button\";\n\ninterface BoldType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Underline: React.FC<BoldType> = ({ editorState, setEditorState }) => {\n  const [underline, setUnderline] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    const inlineStyle = editorState.getCurrentInlineStyle();\n    setUnderline(inlineStyle.has(\"UNDERLINE\"));\n  }, [editorState]);\n\n  const underlineHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(RichUtils.toggleInlineStyle(editorState, \"UNDERLINE\"));\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={underline}\n      small\n      onClick={underlineHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Underline;\n","export default __webpack_public_path__ + \"static/media/unordered-list.d3b3a77e.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./unordered-list.svg\";\n\ninterface UnorderedListType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst UnorderedList: React.FC<UnorderedListType> = ({\n  setEditorState,\n  editorState,\n}) => {\n  const [unordered, setUnordered] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setUnordered(blockType === \"unordered-list-item\");\n  }, [editorState]);\n\n  const listHandler = (e: any) => {\n    e.preventDefault();\n    setEditorState(\n      RichUtils.toggleBlockType(editorState, \"unordered-list-item\")\n    );\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={unordered}\n      small\n      onClick={listHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default UnorderedList;\n","export default __webpack_public_path__ + \"static/media/ordered-list.f732fa03.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./ordered-list.svg\";\n\ninterface UnorderedListType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst OrderedList: React.FC<UnorderedListType> = ({\n  setEditorState,\n  editorState,\n}) => {\n  const [ordered, setOrdered] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setOrdered(blockType === \"ordered-list-item\");\n  }, [editorState]);\n\n  const listHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"ordered-list-item\"));\n  };\n\n  return (\n    <Button\n      onMouseDown={(e) => e.preventDefault()}\n      active={ordered}\n      small\n      onClick={listHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default OrderedList;\n","import * as React from \"react\";\nimport { TextContext as TextContextType } from \"./types\";\n\nexport const TextContext = React.createContext<TextContextType>(null as any);\n","import {\n  ContentBlock,\n  EditorState,\n  SelectionState,\n  ContentState,\n  Modifier,\n  genKey,\n} from \"draft-js\";\n\nexport const getBlockStyle = (block: ContentBlock): string => {\n  const type = block.getType();\n  let className = \"\";\n\n  if (type.indexOf(\"left\") > -1) {\n    className = `${className} align-left`;\n  }\n\n  if (type.indexOf(\"center\") > -1) {\n    className = `${className} align-center`;\n  }\n\n  if (type.indexOf(\"right\") > -1) {\n    className = `${className} align-right`;\n  }\n\n  if (type.indexOf(\"floatLeft\") > -1) {\n    className = `${className} float-left`;\n  }\n\n  if (type.indexOf(\"floatRight\") > -1) {\n    className = `${className} float-right`;\n  }\n\n  if (type.indexOf(\"floatCenter\") > -1) {\n    className = `${className} float-center`;\n  }\n\n  return className;\n};\n\nexport const getBlockTypeByKey = (\n  editorState: EditorState,\n  blockKey: string\n): string => editorState.getCurrentContent().getBlockForKey(blockKey).getType();\n\nexport const getImageInfo = (fileInput: HTMLInputElement): Promise<string> =>\n  new Promise((resolve, reject) => {\n    const { files } = fileInput;\n    const reader = new FileReader();\n    if (files) {\n      reader.readAsDataURL(files[0]);\n    }\n\n    reader.onload = () => {\n      resolve(reader.result as string);\n    };\n\n    reader.onerror = (error) => reject(error);\n  });\n\nexport const createAtomicSelection = (\n  editorState: EditorState,\n  blockKey: string\n): SelectionState => {\n  const selection = editorState.getSelection();\n\n  return selection.merge({\n    anchorKey: blockKey,\n    anchorOffset: 0,\n    focusKey: blockKey,\n    focusOffset: 0,\n  });\n};\n\nexport const setAtomicBlockType = (\n  editorState: EditorState,\n  selection: SelectionState,\n  type: string\n) =>\n  EditorState.push(\n    editorState,\n    Modifier.setBlockType(editorState.getCurrentContent(), selection, type),\n    \"change-block-type\"\n  );\n\nexport const getNextBlock = (editorState: EditorState): ContentBlock | null => {\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const anchorKey = selection.getAnchorKey();\n  const focusKey = selection.getFocusKey();\n\n  // single line selection\n  if (anchorKey === focusKey) {\n    const after = contentState.getBlockAfter(anchorKey);\n\n    if (after) {\n      return after;\n    }\n  }\n\n  return null;\n};\n\nexport const getBeforeBlock = (\n  editorState: EditorState\n): ContentBlock | null => {\n  const contentState = editorState.getCurrentContent();\n  const selection = editorState.getSelection();\n  const anchorKey = selection.getAnchorKey();\n  const focusKey = selection.getFocusKey();\n\n  // single line selection\n  if (anchorKey === focusKey) {\n    const before = contentState.getBlockBefore(anchorKey);\n\n    if (before) {\n      return before;\n    }\n  }\n\n  return null;\n};\n\nexport const addEmptyBlock = (editorState: EditorState, blockKey: string) => {\n  const contentState = editorState.getCurrentContent();\n\n  const newBlock = new ContentBlock({\n    key: genKey(),\n    type: \"unstyled\",\n    text: \"\",\n  });\n  const newBlockMap = contentState\n    .getBlockMap()\n    .set(newBlock.getKey(), newBlock);\n\n  return EditorState.push(\n    editorState,\n    ContentState.createFromBlockArray(newBlockMap.toArray()),\n    \"split-block\"\n  );\n};\n\nexport const removeBlock = (\n  editorState: EditorState,\n  blockKey: string\n): EditorState => {\n  const contentState = editorState.getCurrentContent();\n  const block = contentState.getBlockForKey(blockKey);\n  const before = contentState.getBlockBefore(block.getKey());\n  const after = contentState.getBlockAfter(block.getKey());\n  const selection = editorState.getSelection();\n\n  const selectionOfAtomicBlock = selection.merge({\n    anchorKey: before ? before.getKey() : blockKey,\n    anchorOffset: 0,\n    focusKey: after ? after.getKey() : blockKey,\n    focusOffset: 0,\n  });\n\n  const contentStateWithoutEntity = Modifier.applyEntity(\n    contentState,\n    selectionOfAtomicBlock,\n    null\n  );\n\n  const editorStateWithoutEntity = EditorState.push(\n    editorState,\n    contentStateWithoutEntity,\n    \"apply-entity\"\n  );\n\n  const contentStateWithoutBlock = Modifier.removeRange(\n    contentStateWithoutEntity,\n    selectionOfAtomicBlock,\n    \"backward\"\n  );\n\n  return EditorState.push(\n    editorStateWithoutEntity,\n    contentStateWithoutBlock,\n    \"remove-range\"\n  );\n};\n\nexport const getCurrentStyle = (\n  editorState: EditorState,\n  style: string\n): string[] => {\n  const inlineStyle = editorState.getCurrentInlineStyle();\n  const stylesArray = inlineStyle.toJS();\n\n  return stylesArray.reduce((acc: string[], current: string) => {\n    if (current.indexOf(style) > -1) {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n};\n","export const FONT_SIZES = [\n  { label: \"9 px\", value: \"FONT_SIZE_9\" },\n  { label: \"10 px\", value: \"FONT_SIZE_10\" },\n  { label: \"13 px\", value: \"FONT_SIZE_13\" },\n  { label: \"14 px\", value: \"FONT_SIZE_14\" },\n  { label: \"16 px\", value: \"FONT_SIZE_16\" },\n  { label: \"18 px\", value: \"FONT_SIZE_18\" },\n  { label: \"21 px\", value: \"FONT_SIZE_21\" },\n  { label: \"24 px\", value: \"FONT_SIZE_24\" },\n];\n","import React from \"react\";\nimport { RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { getCurrentStyle } from \"../../../../duck/utils\";\nimport { FONT_SIZES } from \"./duck/constants\";\nimport styles from \"./FontSize.module.css\";\n\nconst FontSize: React.FC = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [fontSize, setFontSize] = React.useState(\"13 px\");\n  const [opened, setOpened] = React.useState(false);\n\n  React.useEffect(() => {\n    const currentFontSize = getCurrentStyle(editorState, \"FONT_SIZE\")[0];\n    if (currentFontSize) {\n      const font = FONT_SIZES.find((size) => size.value === currentFontSize);\n      setFontSize(font?.label || \"\");\n    }\n  }, [editorState]);\n\n  const changeFontSizeHandler = (size: {\n    label: string;\n    value: string;\n  }): void => {\n    const currentFontSize = getCurrentStyle(editorState, \"FONT_SIZE\")[0];\n\n    const newState = RichUtils.toggleInlineStyle(\n      currentFontSize\n        ? RichUtils.toggleInlineStyle(editorState, currentFontSize)\n        : editorState,\n      size.value\n    );\n    setEditorState(newState);\n    setOpened(false);\n  };\n\n  return (\n    <div className={styles.fontSelect}>\n      <Button\n        onClick={() => setOpened(!opened)}\n        onMouseDown={(e) => e.preventDefault()}\n        small\n        className={styles.openButton}\n      >\n        {fontSize}\n      </Button>\n      {opened && (\n        <ul className={styles.list}>\n          {FONT_SIZES.map((font) => (\n            <li key={font.value}>\n              <button\n                onClick={() => changeFontSizeHandler(font)}\n                onMouseDown={(e) => e.preventDefault()}\n                className={styles.fontButton}\n              >\n                {font.label}\n              </button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default FontSize;\n","export const TEXT_COLORS = {\n  COLOR_1: \"#000000\",\n  COLOR_2: \"#1f497d\",\n  COLOR_3: \"#4f81bd\",\n  COLOR_4: \"#c0504d\",\n  COLOR_5: \"#9bbb59\",\n  COLOR_6: \"#8064a2\",\n  COLOR_7: \"#4bacc6\",\n  COLOR_8: \"#f79646\",\n  COLOR_9: \"#ffff00\",\n};\n\nexport const customStyleMap = {\n  FONT_SIZE_9: {\n    fontSize: \"9px\",\n  },\n  FONT_SIZE_10: {\n    fontSize: \"10px\",\n  },\n  FONT_SIZE_13: {\n    fontSize: \"13px\",\n  },\n  FONT_SIZE_14: {\n    fontSize: \"14px\",\n  },\n  FONT_SIZE_16: {\n    fontSize: \"16px\",\n  },\n  FONT_SIZE_18: {\n    fontSize: \"18px\",\n  },\n  FONT_SIZE_21: {\n    fontSize: \"21px\",\n  },\n  FONT_SIZE_24: {\n    fontSize: \"24px\",\n  },\n  COLOR_1: {\n    color: TEXT_COLORS[\"COLOR_1\"],\n  },\n  COLOR_2: {\n    color: TEXT_COLORS[\"COLOR_2\"],\n  },\n  COLOR_3: {\n    color: TEXT_COLORS[\"COLOR_3\"],\n  },\n  COLOR_4: {\n    color: TEXT_COLORS[\"COLOR_4\"],\n  },\n  COLOR_5: {\n    color: TEXT_COLORS[\"COLOR_5\"],\n  },\n  COLOR_6: {\n    color: TEXT_COLORS[\"COLOR_6\"],\n  },\n  COLOR_7: {\n    color: TEXT_COLORS[\"COLOR_7\"],\n  },\n  COLOR_8: {\n    color: TEXT_COLORS[\"COLOR_8\"],\n  },\n  COLOR_9: {\n    color: TEXT_COLORS[\"COLOR_9\"],\n  },\n};\n","import { TEXT_COLORS } from \"../../../../../duck/constants\";\n\nexport const COLORS = [\n  { label: TEXT_COLORS[\"COLOR_1\"], value: \"COLOR_1\" },\n  { label: TEXT_COLORS[\"COLOR_2\"], value: \"COLOR_2\" },\n  { label: TEXT_COLORS[\"COLOR_3\"], value: \"COLOR_3\" },\n  { label: TEXT_COLORS[\"COLOR_4\"], value: \"COLOR_4\" },\n  { label: TEXT_COLORS[\"COLOR_5\"], value: \"COLOR_5\" },\n  { label: TEXT_COLORS[\"COLOR_6\"], value: \"COLOR_6\" },\n  { label: TEXT_COLORS[\"COLOR_7\"], value: \"COLOR_7\" },\n  { label: TEXT_COLORS[\"COLOR_8\"], value: \"COLOR_8\" },\n  { label: TEXT_COLORS[\"COLOR_9\"], value: \"COLOR_9\" },\n];\n","import React from \"react\";\nimport { RichUtils } from \"draft-js\";\nimport classNames from \"classnames\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { TEXT_COLORS } from \"../../../../duck/constants\";\nimport { COLORS } from \"./duck/constants\";\nimport { getCurrentStyle } from \"../../../../duck/utils\";\nimport styles from \"./Colors.module.css\";\n\nconst Colors: React.FC = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [currentColor, setCurrentColor] = React.useState(\n    TEXT_COLORS[\"COLOR_1\"]\n  );\n  const [opened, setOpened] = React.useState(false);\n\n  React.useEffect(() => {\n    const currentColor = getCurrentStyle(editorState, \"COLOR\")[0];\n    if (currentColor) {\n      const font = COLORS.find((color) => color.value === currentColor);\n      setCurrentColor(font?.label || \"\");\n    }\n  }, [editorState]);\n\n  const changeColorHandler = (color: { label: string; value: string }) => {\n    const currentFontSize = getCurrentStyle(editorState, \"COLOR\")[0];\n\n    const newState = RichUtils.toggleInlineStyle(\n      currentFontSize\n        ? RichUtils.toggleInlineStyle(editorState, currentFontSize)\n        : editorState,\n      color.value\n    );\n    setEditorState(newState);\n    setOpened(false);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button\n        className={classNames(styles.colorButton, styles.opener)}\n        style={{ backgroundColor: currentColor }}\n        onMouseDown={(e) => e.preventDefault()}\n        onClick={() => setOpened(!opened)}\n      />\n      {opened && (\n        <div className={styles.panel}>\n          {COLORS.map((color) => (\n            <button\n              key={color.value}\n              className={styles.colorButton}\n              style={{ backgroundColor: color.label }}\n              onClick={() => changeColorHandler(color)}\n              onMouseDown={(e) => e.preventDefault()}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Colors;\n","export default __webpack_public_path__ + \"static/media/align-right.9b80b95b.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./align-right.svg\";\n\ninterface AlignRightType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst AlignRight: React.FC<AlignRightType> = ({\n  editorState,\n  setEditorState,\n}) => {\n  const [right, setRight] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setRight(blockType === \"right\");\n  }, [editorState]);\n\n  const rightHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"right\"));\n  };\n\n  return (\n    <Button\n      active={right}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={rightHandler}\n      small\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default AlignRight;\n","export default __webpack_public_path__ + \"static/media/align-left.39c3c5bc.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./align-left.svg\";\n\ninterface AlignRightType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst AlignLeft: React.FC<AlignRightType> = ({\n  editorState,\n  setEditorState,\n}) => {\n  const [left, setLeft] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setLeft(blockType === \"left\");\n  }, [editorState]);\n\n  const leftHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"left\"));\n  };\n\n  return (\n    <Button\n      active={left}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={leftHandler}\n      small\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default AlignLeft;\n","export default __webpack_public_path__ + \"static/media/align-center.6b7955c5.svg\";","import React from \"react\";\nimport { EditorState, RichUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport icon from \"./align-center.svg\";\n\ninterface AlignRightType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst AlignCenter: React.FC<AlignRightType> = ({\n  editorState,\n  setEditorState,\n}) => {\n  const [right, setRight] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = RichUtils.getCurrentBlockType(editorState);\n\n    setRight(blockType === \"center\");\n  }, [editorState]);\n\n  const centerHandler = () => {\n    setEditorState(RichUtils.toggleBlockType(editorState, \"center\"));\n  };\n\n  return (\n    <Button\n      active={right}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={centerHandler}\n      small\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default AlignCenter;\n","export default __webpack_public_path__ + \"static/media/picture.3e97766c.svg\";","import React from \"react\";\nimport icon from \"./picture.svg\";\nimport { EditorState, AtomicBlockUtils } from \"draft-js\";\nimport Button from \"../../../../../../../button\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { getImageInfo } from \"../../../../duck/utils\";\nimport styles from \"./InsertImage.module.css\";\n\nconst InsertImage: React.FC = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const inputRef = React.useRef<HTMLInputElement>(null);\n\n  const changeFileHandler = () => {\n    if (inputRef.current) {\n      getImageInfo(inputRef.current).then((blob) => {\n        const contentState = editorState.getCurrentContent();\n        const contentStateWithEntity = contentState.createEntity(\n          \"IMAGE\",\n          \"IMMUTABLE\",\n          { src: blob }\n        );\n\n        const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n        const newEditorState = EditorState.set(editorState, {\n          currentContent: contentStateWithEntity,\n        });\n\n        setEditorState(\n          AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n        );\n      });\n    }\n  };\n\n  const buttonClickHandler = () => {\n    inputRef.current?.click();\n  };\n\n  return (\n    <>\n      <input\n        ref={inputRef}\n        type=\"file\"\n        onChange={changeFileHandler}\n        className={styles.input}\n      />\n      <Button\n        small\n        onMouseDown={(e) => e.preventDefault()}\n        onClick={buttonClickHandler}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n    </>\n  );\n};\n\nexport default InsertImage;\n","export default __webpack_public_path__ + \"static/media/function.4b8d7631.svg\";","import React, { ChangeEvent } from \"react\";\nimport { AtomicBlockUtils, EditorState } from \"draft-js\";\nimport classNames from \"classnames\";\nimport Button from \"../../../../../../../button\";\nimport { TextContext } from \"../../../../duck/context\";\nimport icon from \"./function.svg\";\nimport styles from \"./InsertKatex.module.css\";\n\ninterface InsertKatexProps {}\n\nconst InsertKatex: React.FC<InsertKatexProps> = () => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [opened, setOpened] = React.useState(false);\n  const [expression, setExpression] = React.useState<string>(\n    String.raw`c = \\pm\\sqrt{a^2 + b^2}`\n  );\n\n  const clickHandler = () => {\n    setOpened(!opened);\n  };\n\n  const changeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n    setExpression(String.raw`${e.target.value}`);\n  };\n\n  const cancelHandler = () => {\n    setOpened(false);\n  };\n\n  const insertHandler = () => {\n    const contentState = editorState.getCurrentContent();\n    const contentStateWithEntity = contentState.createEntity(\n      \"KATEX\",\n      \"IMMUTABLE\",\n      { expression, size: \"size1\" }\n    );\n\n    const entityKey = contentStateWithEntity.getLastCreatedEntityKey();\n\n    const newEditorState = EditorState.set(editorState, {\n      currentContent: contentStateWithEntity,\n    });\n\n    setEditorState(\n      AtomicBlockUtils.insertAtomicBlock(newEditorState, entityKey, \" \")\n    );\n\n    setOpened(false);\n    setExpression(\"\");\n  };\n\n  return (\n    <>\n      <Button small onClick={clickHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n      <div className={classNames(styles.wrapper, { [styles.opened]: opened })}>\n        Type an expression\n        <textarea\n          value={expression}\n          onChange={changeHandler}\n          className={styles.textarea}\n        />\n        <div className={styles.buttons}>\n          <Button small onClick={cancelHandler}>\n            Cancel\n          </Button>\n          <Button small onClick={insertHandler} className={styles.insertButton}>\n            Insert\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default InsertKatex;\n","import React from \"react\";\nimport { EditorState } from \"draft-js\";\nimport {\n  Bold,\n  Italic,\n  Underline,\n  UnorderedList,\n  OrderedList,\n  FontSize,\n  Colors,\n  AlignRight,\n  AlignLeft,\n  AlignCenter,\n  InsertImage,\n  InsertKatex,\n} from \"./components\";\nimport styles from \"./Panel.module.css\";\n\ninterface PanelType {\n  editorState: EditorState;\n  setEditorState: React.Dispatch<React.SetStateAction<EditorState>>;\n}\n\nconst Panel: React.FC<PanelType> = ({ editorState, setEditorState }) => (\n  <div className={styles.wrapper}>\n    <Bold editorState={editorState} setEditorState={setEditorState} />\n    <Italic editorState={editorState} setEditorState={setEditorState} />\n    <Underline editorState={editorState} setEditorState={setEditorState} />\n    <div className={styles.separator} />\n    <FontSize />\n    <div className={styles.separator} />\n    <Colors />\n    <div className={styles.separator} />\n    <AlignLeft editorState={editorState} setEditorState={setEditorState} />\n    <AlignCenter editorState={editorState} setEditorState={setEditorState} />\n    <AlignRight editorState={editorState} setEditorState={setEditorState} />\n    <div className={styles.separator} />\n    <UnorderedList editorState={editorState} setEditorState={setEditorState} />\n    <OrderedList editorState={editorState} setEditorState={setEditorState} />\n    <div className={styles.separator} />\n    <InsertImage />\n    <InsertKatex />\n  </div>\n);\n\nexport default Panel;\n","export default __webpack_public_path__ + \"static/media/delete.a12f546f.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { removeBlock } from \"../../../../../duck/utils\";\nimport removeIcon from \"./delete.svg\";\n\ninterface RemoveType {\n  blockKey: string;\n}\n\nconst Remove: React.FC<RemoveType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n\n  const removeHandler = (): void => {\n    setEditorState(removeBlock(editorState, blockKey));\n  };\n\n  return (\n    <Button onClick={removeHandler}>\n      <img src={removeIcon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default Remove;\n","import { EditorState } from \"draft-js\";\nimport {\n  createAtomicSelection,\n  setAtomicBlockType,\n} from \"../../../../../duck/utils\";\n\nexport const changeAtomicFloating = (\n  editorState: EditorState,\n  setEditorState: any,\n  blockKey: string,\n  type: string\n): void => {\n  const oldSelection = editorState.getSelection();\n  const newSelection = createAtomicSelection(editorState, blockKey);\n  const newEditorState = EditorState.acceptSelection(editorState, newSelection);\n\n  setEditorState(\n    setAtomicBlockType(newEditorState, newEditorState.getSelection(), type)\n  );\n\n  setEditorState((prevEditorState: EditorState) =>\n    EditorState.acceptSelection(prevEditorState, oldSelection)\n  );\n};\n","export default __webpack_public_path__ + \"static/media/pic-left.55843bb4.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { getBlockTypeByKey } from \"../../../../../duck/utils\";\nimport { changeAtomicFloating } from \"../duck/operations\";\nimport icon from \"./pic-left.svg\";\n\ninterface FloatLeftType {\n  blockKey: string;\n}\n\nconst FloatLeft: React.FC<FloatLeftType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [alignLeft, setAlignLeft] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = getBlockTypeByKey(editorState, blockKey);\n    setAlignLeft(blockType.indexOf(\"floatLeft\") !== -1);\n  }, [editorState, blockKey]);\n\n  const clickHandler = () => {\n    changeAtomicFloating(\n      editorState,\n      setEditorState,\n      blockKey,\n      `atomic ${!alignLeft && \"floatLeft\"}`\n    );\n  };\n\n  return (\n    <Button\n      active={alignLeft}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={clickHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default FloatLeft;\n","export default __webpack_public_path__ + \"static/media/pic-right.9b35e01a.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { getBlockTypeByKey } from \"../../../../../duck/utils\";\nimport { changeAtomicFloating } from \"../duck/operations\";\nimport icon from \"./pic-right.svg\";\n\ninterface FloatRightType {\n  blockKey: string;\n}\n\nconst FloatRight: React.FC<FloatRightType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [alignRight, setAlignRight] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = getBlockTypeByKey(editorState, blockKey);\n    setAlignRight(blockType.indexOf(\"floatRight\") !== -1);\n  }, [editorState, blockKey]);\n\n  const clickHandler = () => {\n    changeAtomicFloating(\n      editorState,\n      setEditorState,\n      blockKey,\n      `atomic ${!alignRight && \"floatRight\"}`\n    );\n  };\n\n  return (\n    <Button\n      active={alignRight}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={clickHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default FloatRight;\n","export default __webpack_public_path__ + \"static/media/pic-center.11e51db5.svg\";","import React from \"react\";\nimport Button from \"../../../../../../../../button\";\nimport { TextContext } from \"../../../../../duck/context\";\nimport { getBlockTypeByKey } from \"../../../../../duck/utils\";\nimport { changeAtomicFloating } from \"../duck/operations\";\nimport icon from \"./pic-center.svg\";\n\ninterface FloatLeftType {\n  blockKey: string;\n}\n\nconst FloatLeft: React.FC<FloatLeftType> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const [alignCenter, setAlignCenter] = React.useState(false);\n\n  React.useEffect(() => {\n    const blockType = getBlockTypeByKey(editorState, blockKey);\n    setAlignCenter(blockType.indexOf(\"floatCenter\") !== -1);\n  }, [editorState, blockKey]);\n\n  const clickHandler = () => {\n    changeAtomicFloating(\n      editorState,\n      setEditorState,\n      blockKey,\n      `atomic ${!alignCenter && \"floatCenter\"}`\n    );\n  };\n\n  return (\n    <Button\n      active={alignCenter}\n      onMouseDown={(e) => e.preventDefault()}\n      onClick={clickHandler}\n    >\n      <img src={icon} alt=\"\" />\n    </Button>\n  );\n};\n\nexport default FloatLeft;\n","import { EditorState } from \"draft-js\";\n\nexport const changeBlockData = (\n  editorState: EditorState,\n  blockKey: string,\n  data: any\n) => {\n  const contentState = editorState.getCurrentContent();\n  const block = contentState.getBlockForKey(blockKey);\n  const entityAt = block.getEntityAt(0);\n\n  const newContent = contentState.mergeEntityData(entityAt, {\n    ...data,\n  });\n\n  return EditorState.push(editorState, newContent, \"change-block-data\");\n};\n","export default __webpack_public_path__ + \"static/media/crop.8aac24fe.svg\";","import React, { ChangeEvent } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport Button from \"../../../../../../../../../../../button\";\nimport { TextContext } from \"../../../../../../../../duck/context\";\nimport { changeBlockData } from \"../../../../../../duck/operations\";\nimport icon from \"./crop.svg\";\nimport styles from \"./ChangeSize.module.css\";\n\ninterface ChangeSizeType {\n  blockKey: string;\n}\n\nconst ChangeSize: React.FC<ChangeSizeType> = ({ blockKey }) => {\n  const { setEditMode, editorState, setEditorState } = React.useContext(\n    TextContext\n  );\n  const widthInputRef = React.useRef<HTMLInputElement>(null);\n  const [opened, setOpened] = React.useState(false);\n  const contentState = editorState.getCurrentContent();\n  const entityKey = contentState.getBlockForKey(blockKey).getEntityAt(0);\n  const data = contentState.getEntity(entityKey).getData();\n  const [size, setSize] = React.useState({\n    width: data.width || 0,\n    height: data.height || 0,\n  });\n\n  React.useEffect(() => {\n    if (opened && widthInputRef.current) {\n      setEditMode(false);\n      widthInputRef.current.focus();\n    }\n  }, [opened, setEditMode]);\n\n  const openHandler = (): void => {\n    setOpened(true);\n  };\n\n  const closeHandler = () => {\n    setOpened(false);\n    setEditMode(true);\n  };\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n    setSize((prevSize) => ({ ...prevSize, [e.target.name]: +e.target.value }));\n  };\n\n  const changeSizeHandler = () => {\n    setEditMode(true);\n    setOpened(false);\n    const newEditorState = changeBlockData(editorState, blockKey, size);\n    setEditorState(\n      EditorState.forceSelection(newEditorState, newEditorState.getSelection())\n    );\n  };\n\n  return (\n    <>\n      <Button onClick={openHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <div\n          className={styles.wrapper}\n          onMouseDown={(e) => {\n            e.stopPropagation();\n          }}\n          onDoubleClick={(e) => {\n            e.stopPropagation();\n          }}\n        >\n          <OutsideClickHandler onOutsideClick={closeHandler}>\n            <div className={styles.formTitle}>Change Size (px)</div>\n            <input\n              value={size.width}\n              name=\"width\"\n              onChange={onChangeHandler}\n              type=\"number\"\n              ref={widthInputRef}\n              autoComplete=\"off\"\n            />\n            <input\n              value={size.height}\n              name=\"height\"\n              onChange={onChangeHandler}\n              type=\"number\"\n              autoComplete=\"off\"\n            />\n            <div className={styles.buttons}>\n              <Button small onClick={closeHandler}>\n                Cancel\n              </Button>\n              <Button\n                small\n                onClick={changeSizeHandler}\n                className={styles.changeButton}\n              >\n                Change\n              </Button>\n            </div>\n          </OutsideClickHandler>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ChangeSize;\n","export default __webpack_public_path__ + \"static/media/link.6b6bbeaa.svg\";","import React, { ChangeEvent } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport Button from \"../../../../../../../../../../../button\";\nimport { TextContext } from \"../../../../../../../../duck/context\";\nimport { changeBlockData } from \"../../../../../../duck/operations\";\nimport icon from \"./link.svg\";\nimport styles from \"./Link.module.css\";\n\ninterface LinkType {\n  blockKey: string;\n}\n\nconst Link: React.FC<LinkType> = ({ blockKey }) => {\n  const { setEditMode, editorState, setEditorState } = React.useContext(\n    TextContext\n  );\n  const [opened, setOpened] = React.useState(false);\n  const hrefInputRef = React.useRef<HTMLInputElement>(null);\n  const contentState = editorState.getCurrentContent();\n  const entityKey = contentState.getBlockForKey(blockKey).getEntityAt(0);\n  const data = contentState.getEntity(entityKey).getData();\n  const [href, setHref] = React.useState(data.href || \"\");\n\n  React.useEffect(() => {\n    if (opened && hrefInputRef.current) {\n      setEditMode(false);\n      hrefInputRef.current.focus();\n    }\n  }, [opened, setEditMode]);\n\n  const clickHandler = (): void => {\n    setOpened(true);\n    setEditMode(true);\n  };\n\n  const closeHandler = (): void => {\n    setOpened(false);\n    setEditMode(false);\n  };\n\n  const setLinkHandler = (): void => {\n    setEditMode(true);\n    setOpened(false);\n    const newEditorState = changeBlockData(editorState, blockKey, { href });\n    setEditorState(\n      EditorState.forceSelection(newEditorState, newEditorState.getSelection())\n    );\n  };\n\n  const onChangeHandler = (e: ChangeEvent<HTMLInputElement>): void => {\n    setHref(e.target.value);\n  };\n\n  return (\n    <>\n      <Button onClick={clickHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <div className={styles.wrapper}>\n          <div className={styles.formTitle}>Set Link</div>\n          <input\n            ref={hrefInputRef}\n            value={href}\n            onChange={onChangeHandler}\n            autoComplete=\"off\"\n          />\n          <div className={styles.buttons}>\n            <Button small onClick={closeHandler}>\n              Cancel\n            </Button>\n            <Button\n              small\n              onClick={setLinkHandler}\n              className={styles.changeButton}\n            >\n              Add Link\n            </Button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Link;\n","import React from \"react\";\nimport {\n  Remove,\n  FloatLeft,\n  FloatRight,\n  FloatCenter,\n} from \"../../../general-controls\";\nimport { ChangeSize, Link } from \"./components\";\nimport styles from \"./ImageMenu.module.css\";\n\ninterface ImageMenuType {\n  blockKey: string;\n}\n\nconst ImageMenu: React.FC<ImageMenuType> = ({ blockKey }) => (\n  <div className={styles.wrapper}>\n    <Remove blockKey={blockKey} />\n    <ChangeSize blockKey={blockKey} />\n    <Link blockKey={blockKey} />\n    <FloatLeft blockKey={blockKey} />\n    <FloatCenter blockKey={blockKey} />\n    <FloatRight blockKey={blockKey} />\n  </div>\n);\n\nexport default ImageMenu;\n","import React, { useRef } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { EntityInstance, ContentBlock } from \"draft-js\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { ImageMenu } from \"./components\";\nimport styles from \"./Image.module.css\";\n\ninterface ImageType {\n  entity: EntityInstance;\n  block: ContentBlock;\n  selected: boolean;\n}\n\ninterface LinkType {\n  href: string;\n}\n\nconst Link: React.FC<LinkType> = ({ href, children }) => (\n  <a target=\"_blank\" rel=\"noreferrer\" href={href}>\n    {children}\n  </a>\n);\n\nconst Image: React.FC<ImageType> = ({ entity, block, selected }) => {\n  const { editMode } = React.useContext(TextContext);\n  const [opened, setOpened] = React.useState(selected);\n  const { src, width, height, href } = entity.getData();\n  const imageRef = useRef<HTMLImageElement>(null);\n  const blockKey = block.getKey();\n\n  React.useEffect(() => {\n    setOpened(selected);\n  }, [selected]);\n\n  const clickHandler = () => {\n    if (editMode) {\n      setOpened((prevOpened) => !prevOpened);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    setOpened(false);\n  };\n\n  const Image = () => (\n    <img\n      ref={imageRef}\n      src={src}\n      alt=\"\"\n      onClick={clickHandler}\n      className={opened ? styles.opened : \"\"}\n      style={{ width, height }}\n    />\n  );\n\n  return (\n    <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n      <div className={styles.wrapper}>\n        {href && !editMode ? (\n          <Link href={href}>\n            <Image />\n          </Link>\n        ) : (\n          <Image />\n        )}\n        {opened && <ImageMenu blockKey={blockKey} />}\n      </div>\n    </OutsideClickHandler>\n  );\n};\n\nexport default Image;\n","export const SIZES = [\n  { label: \"Size 1\", value: \"size1\" },\n  { label: \"Size 2\", value: \"size2\" },\n  { label: \"Size 3\", value: \"size3\" },\n  { label: \"Size 4\", value: \"size4\" },\n  { label: \"Size 5\", value: \"size5\" },\n];\n","import React, { ChangeEvent } from \"react\";\nimport { EditorState } from \"draft-js\";\nimport { changeBlockData } from \"../../../../../../duck/operations\";\nimport { TextContext } from \"../../../../../../../../duck/context\";\nimport { SIZES } from \"./duck/constants\";\nimport styles from \"./ChangeSize.module.css\";\n\ninterface ChangeSizeProps {\n  blockKey: string;\n}\n\nconst ChangeSize: React.FC<ChangeSizeProps> = ({ blockKey }) => {\n  const { editorState, setEditorState } = React.useContext(TextContext);\n  const contentState = editorState.getCurrentContent();\n  const entityKey = contentState.getBlockForKey(blockKey).getEntityAt(0);\n  const data = contentState.getEntity(entityKey).getData();\n  const [size, setSize] = React.useState(data.size);\n\n  const onChangeHandler = (e: ChangeEvent<HTMLSelectElement>) => {\n    setSize(e.target.value);\n    const newEditorState = changeBlockData(editorState, blockKey, {\n      size: e.target.value,\n    });\n    setEditorState(\n      EditorState.forceSelection(newEditorState, newEditorState.getSelection())\n    );\n  };\n\n  return (\n    <select value={size} onChange={onChangeHandler} className={styles.select}>\n      {SIZES.map((size) => (\n        <option key={size.value} value={size.value}>\n          {size.label}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default ChangeSize;\n","import React from \"react\";\nimport { Remove, FloatLeft, FloatRight, FloatCenter } from \"../../../general-controls\";\nimport { ChangeSize } from \"./components\";\nimport styles from \"./KatexMenu.module.css\";\n\ninterface KatexMenuProps {\n  blockKey: string;\n}\n\nconst KatexMenu: React.FC<KatexMenuProps> = ({ blockKey }) => (\n  <div className={styles.wrapper}>\n    <Remove blockKey={blockKey} />\n    <ChangeSize blockKey={blockKey} />\n    <FloatLeft blockKey={blockKey} />\n    <FloatCenter blockKey={blockKey} />\n    <FloatRight blockKey={blockKey} />\n  </div>\n);\n\nexport default KatexMenu;\n","import React from \"react\";\nimport katex from \"katex\";\nimport classNames from \"classnames\";\nimport { ContentBlock, EntityInstance } from \"draft-js\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TextContext } from \"../../../../duck/context\";\nimport { KatexMenu } from \"./components\";\nimport styles from \"./Katex.module.css\";\n\ninterface KatexProps {\n  entity: EntityInstance;\n  block: ContentBlock;\n  selected: boolean;\n}\n\nconst Katex: React.FC<KatexProps> = ({ entity, block, selected }) => {\n  const { editMode } = React.useContext(TextContext);\n  const [opened, setOpened] = React.useState(false);\n  const { expression, size } = entity.getData();\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const blockKey = block.getKey();\n\n  React.useEffect(() => {\n    setOpened(selected);\n  }, [selected]);\n\n  React.useEffect(() => {\n    if (containerRef.current) {\n      katex.render(expression, containerRef.current, {\n        throwOnError: false,\n      });\n    }\n  }, [expression]);\n\n  const selectHandler = () => {\n    if (editMode) {\n      setOpened(true);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    setOpened(false);\n  };\n\n  return (\n    <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n      <div className={classNames(styles.wrapper, styles[size])}>\n        <div\n          ref={containerRef}\n          onClick={selectHandler}\n          className={classNames(styles.container, {\n            [styles.selected]: opened,\n          })}\n        />\n        {opened && <KatexMenu blockKey={blockKey} />}\n      </div>\n    </OutsideClickHandler>\n  );\n};\n\nexport default Katex;\n","import React from \"react\";\nimport { ContentBlock, ContentState } from \"draft-js\";\nimport { TextContext } from \"../../duck/context\";\nimport { Image, Katex } from \"./components\";\n\ninterface CustomBlockType {\n  contentState: ContentState;\n  block: ContentBlock;\n}\n\nconst CustomBlock: React.FC<CustomBlockType> = ({ contentState, block }) => {\n  const { editorState } = React.useContext(TextContext);\n  const [selected, setSelected] = React.useState(false);\n  const entityAt = block.getEntityAt(0);\n\n  React.useEffect(() => {\n    const selection = editorState.getSelection();\n    const after = contentState.getBlockAfter(block.getKey());\n    setSelected(selection.getAnchorKey() === after?.getKey());\n  }, [contentState, block, editorState]);\n\n  if (entityAt) {\n    const entity = contentState.getEntity(entityAt);\n\n    const type = entity.getType();\n\n    if (type === \"IMAGE\") {\n      return <Image entity={entity} block={block} selected={selected} />;\n    }\n\n    if (type === \"KATEX\") {\n      return <Katex entity={entity} block={block} selected={selected} />;\n    }\n  }\n\n  return null;\n};\n\nexport default CustomBlock;\n","import React, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport {\n  Editor,\n  EditorState,\n  convertToRaw,\n  convertFromRaw,\n  DraftHandleValue,\n} from \"draft-js\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { Panel, CustomBlock } from \"./components\";\nimport { getBeforeBlock, getBlockStyle, removeBlock } from \"./duck/utils\";\nimport { TextContext } from \"./duck/context\";\nimport { customStyleMap } from \"./duck/constants\";\nimport styles from \"./Text.module.css\";\n\ninterface TextType {\n  value: any;\n  rowId: number;\n  colId: number;\n  background?: string;\n  editMode: boolean;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Text: React.FC<TextType> = ({\n  value,\n  colId,\n  rowId,\n  editMode,\n  setEditMode,\n}) => {\n  const { dispatchRowsState } = React.useContext(TableContext);\n  const editorRef = useRef<Editor>(null);\n  const [editorState, setEditorState] = React.useState(\n    EditorState.createEmpty()\n  );\n\n  React.useEffect(() => {\n    if (editorRef.current) {\n      editorRef.current.focus();\n    }\n  }, [editMode]);\n\n  React.useEffect(() => {\n    if (value) {\n      setEditorState(EditorState.createWithContent(convertFromRaw(value)));\n      console.log(value);\n    } else {\n      setEditorState(EditorState.createEmpty());\n    }\n  }, [value]);\n\n  const outsideClickHandler = () => {\n    if (editMode) {\n      const contentState = editorState.getCurrentContent();\n      dispatchRowsState(\n        rowsStateActions.updateColContent({\n          rowId,\n          colId,\n          content: convertToRaw(contentState),\n        })\n      );\n      setEditMode(false);\n    }\n  };\n\n  const handleKeyCommand = (command: string): DraftHandleValue => {\n    if (command === \"backspace\") {\n      const beforeBlock = getBeforeBlock(editorState);\n      const selection = editorState.getSelection();\n\n      if (\n        beforeBlock &&\n        beforeBlock.getType().indexOf(\"atomic\") > -1 &&\n        !selection.getEndOffset()\n      ) {\n        setEditorState(removeBlock(editorState, beforeBlock.getKey()));\n\n        return \"handled\";\n      }\n    }\n\n    return \"not-handled\";\n  };\n\n  return (\n    <TextContext.Provider\n      value={{\n        editMode,\n        setEditMode,\n        editorState,\n        setEditorState,\n        editor: editorRef.current,\n      }}\n    >\n      <div\n        className={classNames(styles.wrapper, { [styles.editMode]: editMode })}\n      >\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          {editMode && (\n            <Panel editorState={editorState} setEditorState={setEditorState} />\n          )}\n          <Editor\n            blockStyleFn={getBlockStyle}\n            blockRendererFn={(block) => {\n              if (block.getType().indexOf(\"atomic\") > -1) {\n                return {\n                  component: CustomBlock,\n                  editable: false,\n                };\n              }\n\n              return null;\n            }}\n            readOnly={!editMode}\n            editorState={editorState}\n            onChange={setEditorState}\n            handleKeyCommand={handleKeyCommand}\n            customStyleMap={customStyleMap}\n            ref={editorRef}\n          />\n        </OutsideClickHandler>\n      </div>\n    </TextContext.Provider>\n  );\n};\n\nexport default Text;\n","export default __webpack_public_path__ + \"static/media/info-circle.4089b448.svg\";","import { Answer, AnswersState } from \"../../../../../duck/types\";\n\nexport const getCurrentAnswer = (\n  answers: AnswersState,\n  rowId: number,\n  colId: number\n): Answer =>\n  answers.filter(\n    (itemAnswer: Answer) =>\n      itemAnswer.rowId === rowId && itemAnswer.colId === colId\n  )[0];\n","import React from \"react\";\nimport { TableContext } from \"../../../../../../duck/context\";\nimport Button from \"../../../../../button\";\nimport icon from \"./assets/info-circle.svg\";\nimport styles from \"./TeacherAnswer.module.css\";\nimport { getCurrentAnswer } from \"../../duck/selectors\";\n\ninterface TeacherAnswerProps {\n  colId: number;\n  rowId: number;\n}\n\nconst TeacherAnswer: React.FC<TeacherAnswerProps> = ({ colId, rowId }) => {\n  const { answersState } = React.useContext(TableContext);\n  const [answer, setAnswer] = React.useState<string>(\"\");\n  const [opened, setOpened] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setAnswer(\n      getCurrentAnswer(answersState, rowId, colId)?.teacherAnswer || \"\"\n    );\n  }, [answersState, rowId, colId]);\n\n  const showAnswerHandler = (): void => {\n    setOpened(!opened);\n  };\n\n  if (!answer) {\n    return null;\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      {opened && <div className={styles.answerWrapper}>{answer}</div>}\n      <Button active={opened} small onClick={showAnswerHandler}>\n        <img src={icon} alt=\"\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default TeacherAnswer;\n","import React, { useContext, useRef } from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { answersStateActions } from \"../../../../duck/actions\";\nimport { TeacherAnswer } from \"./components\";\nimport { getCurrentAnswer } from \"./duck/selectors\";\nimport styles from \"./Answer.module.css\";\n\ninterface AnswerProps {\n  rowId: number;\n  colId: number;\n  background?: string;\n  editMode: boolean;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst Answer: React.FC<AnswerProps> = ({\n  editMode,\n  setEditMode,\n  rowId,\n  colId,\n}) => {\n  const { answersState, dispatchAnswersState, teacherMode } = useContext(\n    TableContext\n  );\n  const textAreaRef = useRef<HTMLTextAreaElement>(null);\n  const [answer, setAnswer] = React.useState<string>(\n    getCurrentAnswer(answersState, rowId, colId)?.studentAnswer || \"\"\n  );\n\n  React.useEffect(() => {\n    if (textAreaRef.current && editMode) {\n      textAreaRef.current.focus();\n    }\n  }, [editMode]);\n\n  const outsideHandler = () => {\n    if (editMode && textAreaRef.current) {\n      dispatchAnswersState(\n        answersStateActions.setStudentAnswer({\n          rowId,\n          colId,\n          answer: textAreaRef.current.value,\n        })\n      );\n      setEditMode(false);\n    }\n  };\n\n  const onChangeHandler = (e: any) => {\n    setAnswer(e.target.value);\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      {teacherMode && <TeacherAnswer colId={colId} rowId={rowId} />}\n      <OutsideClickHandler onOutsideClick={outsideHandler}>\n        {editMode ? (\n          <textarea\n            ref={textAreaRef}\n            defaultValue={answer}\n            onChange={onChangeHandler}\n            className={styles.answer}\n          />\n        ) : (\n          <div className={styles.text}>{answer}</div>\n        )}\n      </OutsideClickHandler>\n    </div>\n  );\n};\n\nexport default Answer;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { ColType as ColDataType, PositionStateType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { tableStateActions } from \"../../duck/actions\";\nimport { belongs } from \"../../duck/utils\";\nimport { Answer, Text } from \"./components\";\nimport styles from \"./Col.module.css\";\n\ninterface ColType {\n  colData: ColDataType;\n  rowId: number;\n}\n\nconst voidHandler = (): void => {};\n\nconst Col: React.FC<ColType> = React.memo(({ colData, rowId }) => {\n  const [selected, setSelected] = React.useState<boolean>(false);\n  const [editMode, setEditMode] = React.useState<boolean>(false);\n  const [positionEnd, setPositionEnd] = React.useState<PositionStateType>({\n    rowId: 0,\n    colId: 0,\n  });\n  const {\n    rowsState,\n    tableState,\n    dispatchTableState,\n    builderMode,\n  } = React.useContext(TableContext);\n\n  React.useEffect(() => {\n    if (tableState.selectionState.start && tableState.selectionState.end) {\n      setSelected(\n        belongs(\n          tableState.selectionState.start,\n          tableState.selectionState.end,\n          {\n            rowId,\n            colId: colData.id,\n          }\n        )\n      );\n    } else {\n      setSelected(false);\n    }\n\n    setPositionEnd({\n      rowId:\n        colData.rowSpan &&\n        tableState.selectionState.start &&\n        tableState.selectionState.start.rowId < rowId\n          ? rowId + colData.rowSpan - 1\n          : rowId,\n      colId:\n        colData.colSpan &&\n        tableState.selectionState.start &&\n        tableState.selectionState.start.colId < colData.id\n          ? colData.id + colData.colSpan - 1\n          : colData.id,\n    });\n  }, [tableState, rowId, colData]);\n\n  if (!colData.display) {\n    return null;\n  }\n\n  const selectStartHandler = () => {\n    if (!tableState.touched && !editMode) {\n      dispatchTableState(\n        tableStateActions.setStartSelection({\n          positionStart: { rowId, colId: colData.id },\n        })\n      );\n    } else if (!editMode) {\n      dispatchTableState(\n        tableStateActions.setEndSelection({\n          positionEnd,\n          finished: true,\n          rows: rowsState,\n        })\n      );\n    }\n  };\n\n  const selectEndHandler = () => {\n    if (!editMode) {\n      dispatchTableState(\n        tableStateActions.setEndSelection({\n          positionEnd,\n          finished: true,\n          rows: rowsState,\n        })\n      );\n    }\n  };\n\n  const selectUpdateHandler = () => {\n    if (tableState.touched && !editMode) {\n      dispatchTableState(\n        tableStateActions.setEndSelection({\n          positionEnd: { rowId, colId: colData.id },\n          finished: false,\n          rows: rowsState,\n        })\n      );\n    }\n  };\n\n  const doubleClickHandler = () => {\n    if (tableState.selectionState.selected) {\n      dispatchTableState(tableStateActions.clearSelection());\n    }\n    setEditMode(true);\n  };\n\n  return (\n    <td\n      id={`col-${rowId}-${colData.id}`}\n      onMouseDown={builderMode ? selectStartHandler : voidHandler}\n      onMouseUp={builderMode ? selectEndHandler : voidHandler}\n      onMouseEnter={builderMode ? selectUpdateHandler : voidHandler}\n      onDoubleClick={builderMode ? doubleClickHandler : voidHandler}\n      colSpan={colData.colSpan}\n      rowSpan={colData.rowSpan}\n      className={classNames(styles.wrapper, {\n        [styles.selected]: selected,\n        [styles.editMode]: editMode,\n      })}\n      style={{ background: colData.background }}\n    >\n      {colData.type === \"text\" && (\n        <Text\n          value={colData.content}\n          background={colData.background}\n          rowId={rowId}\n          colId={colData.id}\n          editMode={editMode && builderMode}\n          setEditMode={setEditMode}\n        />\n      )}\n      {colData.type === \"answer\" && (\n        <Answer\n          background={colData.background}\n          rowId={rowId}\n          colId={colData.id}\n          editMode={builderMode ? editMode : true}\n          setEditMode={setEditMode}\n        />\n      )}\n    </td>\n  );\n});\n\nexport default Col;\n","export const emptyCol = { content: \"\", type: \"text\", display: true };\n\nexport const BACKGROUND_COLORS = [\n  \"#fff1b8\",\n  \"#ffffb8\",\n  \"#f4ffb8\",\n  \"#d9f7be\",\n  \"#b5f5ec\",\n  \"#bae7ff\",\n  \"#d6e4ff\",\n  \"#efdbff\",\n  \"#ffccc7\",\n];\n","import { ColType, RowType } from \"../../../../../duck/types\";\nimport { emptyCol } from \"../../../../../duck/constants\";\n\nexport const generateNewRows = (rows: RowType[], rowId: number): RowType[] => {\n  const prevRow = rows[rowId - 1];\n  const nextRow = rows[rowId];\n  const newRow: RowType = {\n    id: rowId + 1,\n    cols: [],\n  };\n\n  prevRow.cols.forEach((col: ColType, index) => {\n    const newCol = { ...emptyCol, id: col.id };\n\n    if (nextRow) {\n      const prevCol = prevRow.cols[index];\n      const nextCol = nextRow.cols[index];\n\n      if (\n        prevCol.rowSpan &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.id &&\n        nextCol.resourceFor.rowId === prevRow.id\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: { rowId, colId: col.id },\n        });\n      } else if (\n        prevCol.resourceFor &&\n        nextCol.resourceFor &&\n        nextCol.resourceFor.colId === prevCol.resourceFor.colId &&\n        nextCol.resourceFor.rowId === prevCol.resourceFor.rowId\n      ) {\n        newRow.cols.push({\n          ...newCol,\n          display: false,\n          resourceFor: prevCol.resourceFor,\n        });\n      } else {\n        newRow.cols.push(newCol);\n      }\n    } else {\n      newRow.cols.push(newCol);\n    }\n  });\n\n  const increasedCols: string[] = [];\n\n  newRow.cols.forEach((col) => {\n    if (col.resourceFor) {\n      const colId = `${col.resourceFor.rowId}${col.resourceFor.colId}`;\n\n      if (!increasedCols.includes(colId)) {\n        const rowSpan =\n          rows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n            .rowSpan || 0;\n\n        rows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].rowSpan = rowSpan + 1;\n\n        increasedCols.push(colId);\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    if (row.id > rowId) {\n      let newCols = row.cols.map((col: ColType) => ({\n        ...col,\n        ...(col.resourceFor && col.resourceFor.rowId > rowId\n          ? {\n              resourceFor: {\n                ...col.resourceFor,\n                rowId: col.resourceFor.rowId + 1,\n              },\n            }\n          : col.resourceFor),\n      }));\n\n      return { ...row, id: row.id + 1, cols: newCols };\n    }\n\n    return row;\n  });\n\n  newRows.splice(rowId, 0, newRow);\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (\n        col.resourceFor &&\n        newRows[col.resourceFor.rowId - 1].cols[col.resourceFor.colId - 1]\n      ) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ].resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { generateNewRows } from \"./duck/utils\";\nimport styles from \"./AddRow.module.css\";\n\ninterface AddRowType {\n  rowId: number;\n}\n\nconst AddRow: React.FC<AddRowType> = ({ rowId }) => {\n  const { dispatchRowsState, rowsState } = React.useContext(TableContext);\n\n  const addNewRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchRowsState(\n      rowsStateActions.rowsUpdate({ rows: generateNewRows(rowsState, rowId) })\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addNewRowHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddRow;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveRow.module.css\";\n\ninterface RemoveRowType {\n  rowId: number;\n  setRowSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveRow: React.FC<RemoveRowType> = ({ rowId, setRowSelected }) => {\n  const { dispatchRowsState } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchRowsState(rowsStateActions.removeRow({ rowId }));\n    setRowSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveRow;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { RowType as RowDataType, ColType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { tableStateActions } from \"../../duck/actions\";\nimport Col from \"../col\";\nimport { AddRow, RemoveRow } from \"./components\";\nimport styles from \"./Row.module.css\";\n\ninterface RowType {\n  rowData: RowDataType;\n}\n\nconst Row: React.FC<RowType> = ({ rowData }) => {\n  const [rowSelected, setRowSelected] = React.useState(false);\n  const { rowsState, dispatchTableState, builderMode } = React.useContext(\n    TableContext\n  );\n  const [width, setWidth] = React.useState(0);\n  const tdRef = React.useRef<HTMLTableDataCellElement>(null);\n\n  const selectRowHandler = () => {\n    setRowSelected(true);\n    dispatchTableState(tableStateActions.clearSelection());\n\n    if (tdRef.current) {\n      setWidth((tdRef.current.closest(\"table\")?.offsetWidth || 0) - 12);\n    }\n  };\n\n  const outsideClickHandler = () => {\n    if (rowSelected) {\n      setRowSelected(false);\n    }\n  };\n\n  return (\n    <tr>\n      {builderMode && (\n        <td ref={tdRef} className={styles.techCol} onClick={selectRowHandler}>\n          <AddRow rowId={rowData.id} />\n          {rowSelected && rowsState.length > 1 && (\n            <>\n              <div className={styles.selectArea} style={{ width }} />\n              <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n                <RemoveRow rowId={rowData.id} setRowSelected={setRowSelected} />\n              </OutsideClickHandler>\n            </>\n          )}\n        </td>\n      )}\n      {rowData.cols.map((col: ColType) => (\n        <Col key={col.id} colData={col} rowId={rowData.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Row;\n","import { omit } from \"lodash-es\";\nimport {\n  ColType,\n  PositionStateType,\n  RangeType,\n  RowType,\n  SelectedColsType,\n  TableContext,\n} from \"../../../../../duck/types\";\nimport {\n  belongs,\n  intersects,\n  isSingleSelection,\n} from \"../../../../../duck/utils\";\nimport {\n  rowsStateActions,\n  tableStateActions,\n} from \"../../../../../duck/actions\";\n\nexport const mergeCols = (context: TableContext): void => {\n  const { selectionState } = context.tableState;\n  const rows = context.rowsState;\n  const resources: PositionStateType[] = [];\n  const { selectedCols } = selectionState;\n  const targetCol = {\n    rowId: selectedCols[0].rowId,\n    colId: selectedCols[0].colId,\n  };\n  let colSpan = { prevRowId: selectedCols[0].rowId, prevColId: 0, count: 0 };\n  let rowSpan = { prevRowId: 0, count: 0 };\n\n  selectedCols.forEach((selectedCol: SelectedColsType, index) => {\n    if (\n      selectedCol.colId !== colSpan.prevColId &&\n      selectedCol.rowId === colSpan.prevRowId\n    ) {\n      colSpan.prevColId = selectedCol.colId;\n      colSpan.count += 1;\n      if (selectedCols.length === index - 1 && selectedCol.colSpan) {\n        colSpan.count += selectedCol.colSpan;\n      }\n    }\n\n    if (selectedCol.rowId !== rowSpan.prevRowId) {\n      rowSpan.prevRowId = selectedCol.rowId;\n      rowSpan.count += 1;\n      if (\n        selectionState.selectedCols.length === index - 1 &&\n        selectedCol.rowSpan\n      ) {\n        rowSpan.count += selectedCol.rowSpan;\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    const newCols = row.cols.map((col: ColType) => {\n      const currentPosition: PositionStateType = {\n        rowId: row.id,\n        colId: col.id,\n      };\n      const isTargetCol =\n        targetCol.rowId === row.id && targetCol.colId === col.id;\n      const isBelongs = belongs(\n        selectionState.start as PositionStateType,\n        selectionState.end as PositionStateType,\n        currentPosition\n      );\n\n      if (isTargetCol && colSpan.count > 1) {\n        col.colSpan = colSpan.count;\n      }\n\n      if (isTargetCol && rowSpan.count > 1) {\n        col.rowSpan = rowSpan.count;\n      }\n\n      if (isBelongs && !isTargetCol) {\n        resources.push(currentPosition);\n      }\n\n      return {\n        ...(isBelongs && !isTargetCol\n          ? omit(col, [\"colSpan\", \"rowSpan\"])\n          : col),\n        ...(isTargetCol ? { resources: [] } : {}),\n        ...(isBelongs && !isTargetCol\n          ? { display: false, resourceFor: targetCol }\n          : {}),\n      };\n    });\n\n    return { ...row, cols: newCols };\n  });\n\n  newRows[targetCol.rowId - 1].cols[targetCol.colId - 1].resources = resources;\n\n  context.dispatchRowsState(rowsStateActions.rowsUpdate({ rows: newRows }));\n  context.dispatchTableState(tableStateActions.clearSelection());\n};\n\nexport const mergeAvailable = (context: TableContext): boolean => {\n  const { selectionState } = context.tableState;\n  const rows = context.rowsState;\n  const { selectedCols, start, end } = selectionState;\n  const singleSelection = isSingleSelection(selectionState);\n  const mergedCols: RangeType[] = [];\n  let isIntersects = false;\n  const size = {\n    maxColId: 0,\n    maxRowId: 0,\n    startColId: 0,\n    startRowId: 0,\n    get: function () {\n      return (\n        (this.maxColId - this.startColId + 1) *\n        (this.maxRowId - this.startRowId + 1)\n      );\n    },\n  };\n\n  rows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.colSpan || col.rowSpan) {\n        const colSpan = col.colSpan || 0;\n        const rowSpan = col.rowSpan || 0;\n\n        mergedCols.push({\n          row: {\n            min: row.id,\n            max: !!rowSpan ? row.id + rowSpan - 1 : row.id,\n          },\n          col: {\n            min: col.id,\n            max: !!colSpan ? col.id + colSpan - 1 : col.id,\n          },\n        });\n      }\n    });\n  });\n\n  selectedCols.forEach((col: SelectedColsType, index) => {\n    const colId = col.colSpan ? col.colId + col.colSpan - 1 : col.colId;\n    const rowId = col.rowSpan ? col.rowId + col.rowSpan - 1 : col.rowId;\n\n    if (colId > size.maxColId) {\n      size.maxColId = colId;\n    }\n\n    if (rowId > size.maxRowId) {\n      size.maxRowId = rowId;\n    }\n\n    if (index === 0) {\n      size.startColId = col.colId;\n      size.startRowId = col.rowId;\n    }\n  });\n\n  mergedCols.forEach((mergedCol: RangeType) => {\n    if (start && end && !isIntersects) {\n      const intersectStatus = intersects(mergedCol, {\n        row: {\n          min: start.rowId,\n          max: end.rowId,\n        },\n        col: {\n          min: start.colId,\n          max: end.colId,\n        },\n      });\n\n      if (intersectStatus === \"part\") {\n        isIntersects = true;\n      }\n    }\n  });\n\n  return (\n    !singleSelection && size.get() === selectedCols.length && !isIntersects\n  );\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { mergeAvailable, mergeCols } from \"./duck/operations\";\n\nconst Merge: React.FC = () => {\n  const context = React.useContext(TableContext);\n\n  const mergeHandler = () => {\n    mergeCols(context);\n  };\n\n  return (\n    <li>\n      <button disabled={!mergeAvailable(context)} onClick={mergeHandler}>\n        Merge\n      </button>\n    </li>\n  );\n};\n\nexport default Merge;\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { getCol, isSingleSelection } from \"../../../../duck/utils\";\nimport { unmergeCols } from \"./duck/operations\";\n\nconst Unmerge: React.FC = () => {\n  const context = React.useContext(TableContext);\n  const [canUnmerged, setCanUnmerged] = React.useState(false);\n  const { tableState, rowsState } = context;\n\n  const unmergeHandler = () => {\n    unmergeCols(context);\n  };\n\n  React.useEffect(() => {\n    const selectionStart = tableState.selectionState.start;\n    if (selectionStart) {\n      const selectedCol = getCol(rowsState, selectionStart);\n      if (\n        (selectedCol.colSpan || selectedCol.rowSpan) &&\n        isSingleSelection(tableState.selectionState)\n      ) {\n        setCanUnmerged(true);\n      }\n    }\n  }, [tableState, rowsState]);\n\n  return (\n    <li>\n      <button disabled={!canUnmerged} onClick={unmergeHandler}>\n        Unmerge\n      </button>\n    </li>\n  );\n};\n\nexport default Unmerge;\n","import { omit } from \"lodash-es\";\nimport { PositionStateType, TableContext } from \"../../../../../duck/types\";\nimport {\n  tableStateActions,\n  rowsStateActions,\n} from \"../../../../../duck/actions\";\n\nexport const unmergeCols = (context: TableContext) => {\n  const { selectionState } = context.tableState;\n  const rows = context.rowsState;\n  const unmergeColPosition = selectionState.selectedCols[0];\n  const unmergeCol =\n    rows[unmergeColPosition.rowId - 1].cols[unmergeColPosition.colId - 1];\n\n  if (unmergeCol && unmergeCol.resources) {\n    unmergeCol.resources.forEach((resource: PositionStateType) => {\n      const resourceCol = rows[resource.rowId - 1].cols[resource.colId - 1];\n\n      rows[resource.rowId - 1].cols[resource.colId - 1] = {\n        ...omit(resourceCol, [\"resourceFor\"]),\n        display: true,\n      };\n    });\n  }\n\n  rows[unmergeColPosition.rowId - 1].cols[\n    unmergeColPosition.colId - 1\n  ] = omit(unmergeCol, [\"resources\", \"colSpan\", \"rowSpan\"]);\n\n  context.dispatchRowsState(rowsStateActions.rowsUpdate({ rows }));\n  context.dispatchTableState(tableStateActions.clearSelection());\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { BACKGROUND_COLORS } from \"../../../../duck/constants\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport styles from \"./ChangeBackground.module.css\";\n\nconst ChangeBackground: React.FC = () => {\n  const { dispatchRowsState, tableState } = React.useContext(TableContext);\n\n  const changeColorHandler = (color: string | undefined) => {\n    dispatchRowsState(\n      rowsStateActions.updateColBackground({\n        selectionState: tableState.selectionState,\n        background: color,\n      })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Background color</button>\n      <div className={styles.colors}>\n        <button\n          onClick={() => changeColorHandler(undefined)}\n          className={classNames(styles.colorButton, styles.transparent)}\n        />\n        {BACKGROUND_COLORS.map((color: string) => (\n          <button\n            onClick={() => changeColorHandler(color)}\n            key={color}\n            style={{ background: color }}\n            className={styles.colorButton}\n          />\n        ))}\n      </div>\n    </li>\n  );\n};\n\nexport default ChangeBackground;\n","export const TYPES = [\n  { label: \"Text\", value: \"text\" },\n  { label: \"Answer\", value: \"answer\" },\n];\n","export default __webpack_public_path__ + \"static/media/check-circle.c253255a.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { TYPES } from \"./duck/constants\";\nimport icon from \"./assets/check-circle.svg\";\nimport styles from \"./ChangeType.module.css\";\n\nconst ChangeType: React.FC = () => {\n  const { dispatchRowsState, tableState, rowsState } = React.useContext(\n    TableContext\n  );\n  const [currentType, setCurrentType] = React.useState(\"\");\n  const { selectionState } = tableState;\n\n  React.useEffect(() => {\n    if (selectionState.selected) {\n      const selectedRowId = selectionState.selectedCols[0].rowId;\n      const selectedColId = selectionState.selectedCols[0].colId;\n      setCurrentType(rowsState[selectedRowId - 1].cols[selectedColId - 1].type);\n    }\n  }, [selectionState, rowsState]);\n\n  const clickHandler = (type: string) => {\n    const { rowId } = selectionState.selectedCols[0];\n    const { colId } = selectionState.selectedCols[0];\n\n    dispatchRowsState(\n      rowsStateActions.updateColType({\n        selectionState: tableState.selectionState,\n        type,\n      })\n    );\n    dispatchRowsState(\n      rowsStateActions.updateColContent({ colId, rowId, content: \"\" })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Type</button>\n      <ul className={styles.types}>\n        {TYPES.map((type) => (\n          <li key={type.value}>\n            <button\n              className={currentType === type.value ? styles.selected : \"\"}\n              onClick={() => clickHandler(type.value)}\n            >\n              {type.label}\n              {currentType === type.value && (\n                <img src={icon} alt=\"\" className={styles.icon} />\n              )}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </li>\n  );\n};\n\nexport default ChangeType;\n","import React from \"react\";\nimport Button from \"../../../../../button\";\nimport { TableContext } from \"../../../../../../duck/context\";\nimport { answersStateActions } from \"../../../../../../duck/actions\";\nimport styles from \"./AnswerModal.module.css\";\n\ninterface AnswerModalProps {\n  closeAnswer: () => void;\n}\n\nconst AnswerModal: React.FC<AnswerModalProps> = ({ closeAnswer }) => {\n  const { dispatchAnswersState, tableState } = React.useContext(TableContext);\n  const textareaRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (textareaRef.current) {\n      textareaRef.current.focus();\n    }\n  }, []);\n\n  const setAnswerHandler = () => {\n    const colPosition = tableState.selectionState.start;\n\n    if (colPosition && textareaRef.current) {\n      dispatchAnswersState(\n        answersStateActions.setTeacherAnswer({\n          colId: colPosition.colId,\n          rowId: colPosition.rowId,\n          answer: textareaRef.current.value,\n        })\n      );\n      closeAnswer();\n    }\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <textarea ref={textareaRef} className={styles.textarea} />\n      <Button onClick={setAnswerHandler}>Set answer</Button>\n    </div>\n  );\n};\n\nexport default AnswerModal;\n","import React from \"react\";\nimport { AnswerModal } from \"./components\";\nimport styles from \"./SetAnswer.module.css\";\n\ninterface SetAnswerType {\n  setOpened: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst SetAnswer: React.FC<SetAnswerType> = ({ setOpened }) => {\n  const [answerOpened, setAnswerOpened] = React.useState<boolean>(false);\n\n  const openModalHandler = (): void => {\n    setAnswerOpened(true);\n  };\n\n  const closeAnswer = (): void => {\n    setOpened(false);\n    setAnswerOpened(false);\n  }\n\n  return (\n    <li className={styles.container}>\n      <button onClick={openModalHandler} className={styles.wrapper}>\n        Set Answer\n      </button>\n      {answerOpened && <AnswerModal closeAnswer={closeAnswer} />}\n    </li>\n  );\n};\n\nexport default SetAnswer;\n","export default __webpack_public_path__ + \"static/media/setting.5524b19c.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../duck/context\";\nimport { isSingleSelection, getCol } from \"../../duck/utils\";\nimport Button from \"../button\";\nimport { getMenuPosition, PositionType } from \"./duck/utils\";\nimport {\n  Merge,\n  ChangeBackground,\n  Unmerge,\n  ChangeType,\n  SetAnswer,\n} from \"./components\";\nimport icon from \"./assets/setting.svg\";\nimport styles from \"./SelectionMenu.module.css\";\n\nconst SelectionMenu: React.FC = () => {\n  const { tableState, rowsState } = React.useContext(TableContext);\n  const [position, setPosition] = React.useState<PositionType>();\n  const [opened, setOpened] = React.useState<boolean>(false);\n  const [selectedType, setSelectedType] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n    if (tableState.selectionState.start && tableState.selectionState.end) {\n      setPosition(\n        getMenuPosition(\n          tableState.selectionState.start,\n          tableState.selectionState.end\n        )\n      );\n    }\n\n    if (\n      isSingleSelection(tableState.selectionState) &&\n      tableState.selectionState.start\n    ) {\n      setSelectedType(getCol(rowsState, tableState.selectionState.start).type);\n    }\n  }, [tableState, rowsState]);\n\n  const outsideClickHandler = () => {\n    if (opened) {\n      setOpened(false);\n    }\n  };\n\n  return (\n    <div\n      className={classNames(styles.wrapper, {\n        [styles.selected]:\n          tableState.selectionState.selected &&\n          tableState.selectionState.selectedCols.length > 0,\n      })}\n      style={position}\n    >\n      <Button\n        onClick={() => setOpened(!opened)}\n        className={styles.settingButton}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <ul className={styles.menu}>\n            {selectedType === \"answer\" &&\n              isSingleSelection(tableState.selectionState) && (\n                <SetAnswer setOpened={setOpened} />\n              )}\n            <ChangeBackground />\n            <ChangeType />\n            <Merge />\n            <Unmerge />\n          </ul>\n        </OutsideClickHandler>\n      )}\n    </div>\n  );\n};\n\nexport default SelectionMenu;\n","import { getRange } from \"../../../duck/utils\";\nimport { PositionStateType } from \"../../../duck/types\";\n\nexport interface PositionType {\n  top: number;\n  left: number;\n}\n\nexport const getMenuPosition = (\n  start: PositionStateType,\n  end: PositionStateType\n): PositionType => {\n  const range = getRange(start, end);\n  const cell = document.getElementById(`col-${range.row.min}-${range.col.min}`);\n\n  if (cell) {\n    return {\n      top: cell.offsetTop + 5,\n      left: cell.offsetLeft + 5,\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0,\n  };\n};\n","import { ColType, RowType } from \"../../../duck/types\";\nimport { emptyCol } from \"../../../duck/constants\";\n\nexport const generateRowsWithNewCol = (\n  rows: RowType[],\n  colId: number\n): RowType[] => {\n  const newRows = rows.map((row: RowType) => {\n    const { cols } = row;\n\n    // updating all colId in curren row\n    let newCols = cols.map((col: ColType) => {\n      if (col.id > colId) {\n        return {\n          ...col,\n          id: col.id + 1,\n          ...(col.resources\n            ? {\n                resources: col.resources.map((currentResource) => ({\n                  ...currentResource,\n                  colId: currentResource.colId + 1,\n                })),\n              }\n            : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId + 1,\n                },\n              }\n            : col.resourceFor),\n        };\n      }\n      return col;\n    });\n\n    const lineContinuation =\n      newCols[colId - 1] &&\n      newCols[colId - 1].resourceFor &&\n      newCols[colId] &&\n      newCols[colId].resourceFor &&\n      newCols[colId - 1].resourceFor?.colId ===\n        newCols[colId].resourceFor?.colId;\n\n    const newCol: ColType = {\n      id: colId + 1,\n      ...emptyCol,\n      ...(newCols[colId - 1] && newCols[colId - 1].colSpan\n        ? {\n            display: false,\n            resourceFor: { rowId: row.id, colId: newCols[colId - 1].id },\n          }\n        : {}),\n      ...(lineContinuation\n        ? { display: false, resourceFor: newCols[colId - 1].resourceFor }\n        : {}),\n    };\n\n    if (newCols[colId - 1] && newCols[colId - 1].colSpan) {\n      // @ts-ignore\n      newCols[colId - 1].colSpan += 1;\n    }\n\n    if (lineContinuation) {\n      const { resourceFor } = newCols[colId - 1];\n\n      if (resourceFor && newCols[resourceFor.colId - 1]) {\n        // @ts-ignore\n        newCols[resourceFor.colId - 1].colSpan += 1;\n      }\n    }\n\n    newCols.splice(colId, 0, newCol);\n\n    return {\n      ...row,\n      cols: newCols,\n    };\n  });\n\n  newRows.forEach((row: RowType) => {\n    row.cols.forEach((col: ColType) => {\n      if (col.resources) {\n        newRows[row.id - 1].cols[col.id - 1].resources = [];\n      }\n\n      if (col.resourceFor) {\n        newRows[col.resourceFor.rowId - 1].cols[\n          col.resourceFor.colId - 1\n        ]?.resources?.push({\n          colId: col.id,\n          rowId: row.id,\n        });\n      }\n    });\n  });\n\n  return newRows;\n};\n\nexport const getColCount = (rows: RowType[]): number => {\n  let count = 0;\n\n  rows.forEach((row: RowType) => {\n    if (row.cols.length > count) {\n      count = row.cols.length;\n    }\n  });\n\n  return count;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport { generateRowsWithNewCol } from \"../../duck/utils\";\nimport styles from \"./AddCol.module.css\";\n\ninterface AddColType {\n  colId: number;\n}\n\nconst AddCol: React.FC<AddColType> = ({ colId }) => {\n  const { rowsState, dispatchRowsState } = React.useContext(TableContext);\n\n  const addColHandler = (e: any): void => {\n    e.stopPropagation();\n    dispatchRowsState(\n      rowsStateActions.rowsUpdate({\n        rows: generateRowsWithNewCol(rowsState, colId),\n      })\n    );\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addColHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddCol;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsStateActions } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveCol.module.css\";\n\ninterface RemoveColType {\n  colId: number;\n  setColSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveCol: React.FC<RemoveColType> = ({ colId, setColSelected }) => {\n  const { dispatchRowsState } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchRowsState(rowsStateActions.removeCol({ colId }));\n    setColSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveCol;\n","import React, { useState } from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { tableStateActions, rowsStateActions } from \"../../../../duck/actions\";\nimport styles from \"./ChangeWidth.module.css\";\n\ninterface ChangeWidthType {\n  tableHeight: number;\n  colId: number;\n}\n\nconst ChangeWidth: React.FC<ChangeWidthType> = ({ tableHeight, colId }) => {\n  const { rowsState, dispatchTableState, dispatchRowsState } = React.useContext(\n    TableContext\n  );\n  const [pressed, setPressed] = useState<boolean>(false);\n  const [width, setWidth] = useState<number>(0);\n  const [start, setStart] = useState<number>(0);\n  const [right, setRight] = useState<number>(0);\n\n  const onMouseDownHandler = (e: any) => {\n    e.stopPropagation();\n    dispatchTableState(tableStateActions.clearSelection());\n    setPressed(true);\n    setStart(e.screenX + right);\n  };\n\n  const onUpHandler = (e: any) => {\n    e.stopPropagation();\n    if (pressed) {\n      dispatchRowsState(\n        rowsStateActions.setColWidth({ colId, width: width - right })\n      );\n      setRight(0);\n      setPressed(false);\n    }\n  };\n\n  const onMouseMoveHandler = (e: any) => {\n    e.stopPropagation();\n\n    if (pressed && width - right > 10) {\n      setRight(start - e.screenX);\n    }\n  };\n\n  if (rowsState[0].cols.length === colId) {\n    return null;\n  }\n\n  return (\n    <div\n      onMouseDown={onMouseDownHandler}\n      onMouseUp={onUpHandler}\n      onMouseLeave={onUpHandler}\n      onMouseMove={onMouseMoveHandler}\n      onClick={(e) => e.stopPropagation()}\n      ref={(div: HTMLDivElement) =>\n        setWidth(div?.closest(\"td\")?.offsetWidth || 0)\n      }\n      className={styles.wrapper}\n      style={{ height: tableHeight, right }}\n    />\n  );\n};\n\nexport default ChangeWidth;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { tableStateActions } from \"../../../../duck/actions\";\nimport AddCol from \"../add-col\";\nimport RemoveCol from \"../remove-col\";\nimport ChangeWidth from \"../change-width\";\nimport styles from \"./TechCol.module.css\";\n\ninterface TechColType {\n  colId: number;\n}\n\nconst TechCol: React.FC<TechColType> = ({ colId }) => {\n  const { rowsState, dispatchTableState } = React.useContext(TableContext);\n  const [colSelected, setColSelected] = React.useState(false);\n  const [height, setHeight] = React.useState(0);\n\n  const selectColHandler = () => {\n    dispatchTableState(tableStateActions.clearSelection());\n    setColSelected(true);\n  };\n\n  const outsideClickHandler = () => {\n    if (colSelected) {\n      setColSelected(false);\n    }\n  };\n\n  return (\n    <td\n      ref={(td: HTMLTableDataCellElement) =>\n        setHeight((td?.closest(\"table\")?.offsetHeight || 0) - 12)\n      }\n      onClick={selectColHandler}\n      className={styles.techCol}\n      style={{\n        width:\n          rowsState[0].cols.length > 1\n            ? rowsState[0].cols[colId - 1]?.width\n            : \"auto\",\n      }}\n    >\n      <AddCol colId={colId} />\n      <ChangeWidth tableHeight={height} colId={colId} />\n      {rowsState[0].cols.length > 1 && colSelected && (\n        <>\n          <div className={styles.selectArea} style={{ height }} />\n          <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n            <RemoveCol colId={colId} setColSelected={setColSelected} />\n          </OutsideClickHandler>\n        </>\n      )}\n    </td>\n  );\n};\n\nexport default TechCol;\n","import React from \"react\";\nimport { TableContext } from \"../../duck/context\";\nimport { getColCount } from \"./duck/utils\";\nimport { TechCol } from \"./components\";\n\nconst TechRow: React.FC = () => {\n  const { rowsState } = React.useContext(TableContext);\n  const [cols, setCols] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    setCols(\n      Array(getColCount(rowsState))\n        .fill({})\n        .map((col, index) => ({ ...col, id: index + 1 }))\n    );\n  }, [rowsState]);\n\n  if (!rowsState.length) {\n    return null;\n  }\n\n  return (\n    <tr>\n      <td style={{ width: 10 }} />\n      {cols.map((col: any) => (\n        <TechCol key={col.id} colId={col.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default TechRow;\n","import React from \"react\";\nimport \"draft-js/dist/Draft.css\";\nimport \"katex/dist/katex.min.css\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"./duck/context\";\nimport { initialTableState, initialRowsState } from \"./duck/state\";\nimport {\n  tableStateReducer,\n  rowsStateReducer,\n  answersStateReducer,\n} from \"./duck/reducer\";\nimport { AnswersState, RowType } from \"./duck/types\";\nimport { tableStateActions } from \"./duck/actions\";\nimport { Row, SelectionMenu, TechRow } from \"./components\";\nimport styles from \"./Table.module.css\";\n\ninterface TableType {\n  onChange?: (rows: RowType[]) => any;\n  onAnswerChange?: (answers: AnswersState) => any;\n  builderMode: boolean;\n  teacherMode: boolean;\n}\n\nconst Table: React.FC<TableType> = ({\n  onChange,\n  onAnswerChange,\n  builderMode,\n  teacherMode,\n}) => {\n  const [tableState, dispatchTableState] = React.useReducer(\n    tableStateReducer,\n    initialTableState\n  );\n  const [rowsState, dispatchRowsState] = React.useReducer(\n    rowsStateReducer,\n    initialRowsState\n  );\n  const [answersState, dispatchAnswersState] = React.useReducer(\n    answersStateReducer,\n    []\n  );\n\n  React.useEffect(() => {\n    if (onChange && typeof onChange === \"function\") {\n      onChange(rowsState);\n    }\n  }, [rowsState, onChange]);\n\n  React.useEffect(() => {\n    if (onAnswerChange && typeof onAnswerChange === \"function\") {\n      onAnswerChange(answersState);\n    }\n  }, [answersState, onAnswerChange]);\n\n  const outsideClickHandler = () => {\n    if (tableState.selectionState.selected) {\n      dispatchTableState(tableStateActions.clearSelection());\n    }\n  };\n\n  return (\n    <TableContext.Provider\n      value={{\n        tableState,\n        dispatchTableState,\n        rowsState,\n        dispatchRowsState,\n        answersState,\n        dispatchAnswersState,\n        builderMode,\n        teacherMode,\n      }}\n    >\n      <div className={styles.wrapper}>\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <table\n            className={classNames(styles.table, {\n              [styles.filled]: !!rowsState.length,\n            })}\n          >\n            <tbody>\n              {builderMode && <TechRow />}\n              {rowsState.map((row: RowType) => (\n                <Row key={row.id} rowData={row} />\n              ))}\n            </tbody>\n          </table>\n          <SelectionMenu />\n        </OutsideClickHandler>\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport { Table } from \"./components\";\n\nfunction App() {\n  const [editable, setEditable] = React.useState<boolean>(true);\n  const [teacherMode, setTeacherMode] = React.useState<boolean>(false);\n\n  const builderHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setEditable(event.target.checked);\n    setTeacherMode(false);\n  };\n\n  const teacherHandler = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setTeacherMode(event.target.checked);\n  };\n\n  return (\n    <div className=\"App\">\n      <div style={{ width: 700, margin: \"20px auto 35px\" }}>\n        <label style={{ userSelect: \"none\", cursor: \"pointer\", marginRight: 16 }}>\n          <input\n            checked={editable}\n            type=\"checkbox\"\n            onChange={builderHandler}\n            style={{ marginRight: 4 }}\n          />\n          Builder mode\n        </label>\n        <label\n          style={{ userSelect: \"none\", cursor: \"pointer\" }}\n        >\n          <input\n            disabled={editable}\n            checked={teacherMode}\n            type=\"checkbox\"\n            onChange={teacherHandler}\n            style={{ marginRight: 4 }}\n          />\n          Teacher mode\n        </label>\n      </div>\n      <Table\n        builderMode={editable}\n        teacherMode={teacherMode}\n        onAnswerChange={(answers) => console.log(answers)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Panel_wrapper__15ls_\",\"separator\":\"Panel_separator__3uLZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Headers_wrapper__X7WTc\",\"select\":\"Headers_select__1J-Af\",\"openButton\":\"Headers_openButton__fmsxb\",\"list\":\"Headers_list__33JR1\",\"header\":\"Headers_header__pg6Cl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Colors_wrapper__1PXUt\",\"colorButton\":\"Colors_colorButton__hV4pH\",\"opener\":\"Colors_opener__3DrUL\",\"panel\":\"Colors_panel__1E15m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InsertKatex_wrapper__dodJP\",\"opened\":\"InsertKatex_opened__22-W0\",\"textarea\":\"InsertKatex_textarea__32QvQ\",\"buttons\":\"InsertKatex_buttons__1xWnc\",\"insertButton\":\"InsertKatex_insertButton__LpxkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeBackground_wrapper__2Uwxj\",\"colors\":\"ChangeBackground_colors__Je-TV\",\"colorButton\":\"ChangeBackground_colorButton__2QEDl\",\"transparent\":\"ChangeBackground_transparent__mqomV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__pj90c\",\"active\":\"Button_active__FWtIw\",\"disabled\":\"Button_disabled__1AAMG\",\"small\":\"Button_small__2T4PP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"fontSelect\":\"FontSize_fontSelect__Zuhvx\",\"openButton\":\"FontSize_openButton__IL83w\",\"list\":\"FontSize_list__1b88t\",\"fontButton\":\"FontSize_fontButton__3WX-s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeSize_wrapper__1REPo\",\"formTitle\":\"ChangeSize_formTitle__tQnyh\",\"buttons\":\"ChangeSize_buttons__3SB7j\",\"changeButton\":\"ChangeSize_changeButton__AHMPs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Link_wrapper__pVwoB\",\"formTitle\":\"Link_formTitle__b8RDv\",\"buttons\":\"Link_buttons__nTc6w\",\"changeButton\":\"Link_changeButton__-tGgd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Katex_wrapper__32DMN\",\"size1\":\"Katex_size1__1h_Au\",\"size2\":\"Katex_size2__34cOg\",\"size3\":\"Katex_size3__1BKut\",\"size4\":\"Katex_size4__1AeUB\",\"size5\":\"Katex_size5__rSocC\",\"container\":\"Katex_container__1_kc3\",\"selected\":\"Katex_selected__1hAIn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeType_wrapper__1P-DQ\",\"types\":\"ChangeType_types__bLLj_\",\"icon\":\"ChangeType_icon__1EOsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SelectionMenu_wrapper__2E3fb\",\"selected\":\"SelectionMenu_selected__1dW4V\",\"settingButton\":\"SelectionMenu_settingButton__2RZd1\",\"menu\":\"SelectionMenu_menu__3_fZg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Answer_wrapper__1O_Mt\",\"answer\":\"Answer_answer__2dXPb\",\"text\":\"Answer_text__3igXT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Col_wrapper__3FddR\",\"selected\":\"Col_selected__29n3t\",\"editMode\":\"Col_editMode__3GAwp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__2oJSk\",\"table\":\"Table_table__3Cw9e\",\"filled\":\"Table_filled__wq5i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Image_wrapper__1UzAe\",\"opened\":\"Image_opened__2scOB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Text_wrapper__2zOXf\",\"editMode\":\"Text_editMode__2BkYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TeacherAnswer_wrapper__1_S5M\",\"answerWrapper\":\"TeacherAnswer_answerWrapper__2HhPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddRow_wrapper__3NW4Q\",\"addButton\":\"AddRow_addButton__1hGob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"Row_techCol__HSNZB\",\"active\":\"Row_active__1oG0c\",\"selectArea\":\"Row_selectArea__X8N3B\",\"blinker\":\"Row_blinker__6_-6l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AnswerModal_wrapper__2KHnc\",\"textarea\":\"AnswerModal_textarea__qHJZ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SetAnswer_container__3SpU4\",\"wrapper\":\"SetAnswer_wrapper__PNNdE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCol_wrapper__OkM3j\",\"addButton\":\"AddCol_addButton__2VG6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"TechCol_techCol__3-ePx\",\"selectArea\":\"TechCol_selectArea__1hdFm\",\"blinker\":\"TechCol_blinker__3LS_s\"};"],"sourceRoot":""}