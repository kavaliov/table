{"version":3,"sources":["components/table/components/button/Button.module.css","components/table/Table.module.css","components/table/components/col/Col.module.css","components/table/components/row/components/add-row/AddRow.module.css","components/table/components/tech-row/components/add-col/AddCol.module.css","components/table/components/col/components/text-edit/TextEdit.module.css","components/table/components/row/components/remove-row/RemoveRow.module.css","components/table/components/row/Row.module.css","components/table/components/tech-row/components/remove-col/RemoveCol.module.css","components/table/components/tech-row/components/tech-col/TechCol.module.css","components/table/duck/context.ts","components/table/duck/state.ts","components/table/duck/actions.ts","components/table/duck/utils.ts","components/table/duck/reducer.ts","components/table/duck/constants.ts","components/table/components/col/components/text-edit/TextEdit.tsx","components/table/components/col/Col.tsx","components/table/components/row/components/add-row/duck/utils.ts","components/table/components/row/components/add-row/AddRow.tsx","components/table/components/row/components/remove-row/assets/close-circle.svg","components/table/components/row/components/remove-row/RemoveRow.tsx","components/table/components/row/Row.tsx","components/table/components/button/Button.tsx","components/table/components/selection-menu/components/merge/Merge.tsx","components/table/components/selection-menu/components/merge/duck/operations.ts","components/table/components/selection-menu/components/change-background/ChangeBackground.tsx","components/table/components/selection-menu/assets/setting.svg","components/table/components/selection-menu/SelectionMenu.tsx","components/table/components/selection-menu/duck/utils.ts","components/table/components/tech-row/duck/utils.ts","components/table/components/tech-row/components/add-col/AddCol.tsx","components/table/components/tech-row/components/remove-col/assets/close-circle.svg","components/table/components/tech-row/components/remove-col/RemoveCol.tsx","components/table/components/tech-row/components/tech-col/TechCol.tsx","components/table/components/tech-row/TechRow.tsx","components/table/Table.tsx","App.tsx","index.tsx","components/table/components/selection-menu/components/change-background/ChangeBackground.module.css","components/table/components/selection-menu/SelectionMenu.module.css"],"names":["module","exports","TableContext","React","tableState","touched","selectionState","selectedCols","selected","rows","id","cols","content","type","display","setStartSelection","createStandardAction","setEndSelection","clearSelection","rowsUpdate","updateColContent","updateColBackground","selectRow","removeRow","selectCol","removeCol","getRange","start","end","row","min","rowId","max","col","colId","belongs","current","range","tableReducer","createReducer","initialState","handleAction","actions","state","positionStart","payload","positionEnd","finished","colSpan","rowSpan","push","allocatedRow","map","length","r","newRows","splice","index","forEach","background","newCols","emptyCol","BACKGROUND_COLORS","TextEdit","value","setEditMode","dispatch","useContext","inputRef","useRef","useEffect","focus","editHandler","e","target","ref","defaultValue","onBlur","onKeyDown","code","className","styles","wrapper","style","Col","colData","useState","setSelected","editMode","onMouseDown","onMouseUp","onMouseEnter","onDoubleClick","classNames","generateNewRows","prevRow","increasedCols","newRow","colID","includes","resourceFor","resources","currentResource","AddRow","addButton","onClick","stopPropagation","RemoveRow","setRowSelected","src","icon","alt","Row","rowData","rowSelected","height","techCol","onOutsideClick","Button","children","active","disabled","Merge","selectedCellCounts","setSelectedCellCounts","getCellCount","targetCol","prevRowId","prevColId","count","selectedCol","currentPosition","isTargetCol","isBelongs","mergeCols","ChangeBackground","changeColorHandler","color","colors","undefined","colorButton","transparent","SelectionMenu","position","setPosition","opened","setOpened","cell","document","getElementById","top","offsetTop","left","offsetLeft","getMenuPosition","settingButton","menu","generateRowsWithNewCol","lineContinuation","newCol","AddCol","RemoveCol","setColSelected","TechCol","colSelected","TechRow","setCols","Array","getColCount","fill","width","Table","onChange","useReducer","console","log","Provider","table","filled","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8997cfd2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Button_wrapper__pj90c\",\"active\":\"Button_active__FWtIw\",\"disabled\":\"Button_disabled__1AAMG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Table_wrapper__2oJSk\",\"table\":\"Table_table__3Cw9e\",\"filled\":\"Table_filled__wq5i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Col_wrapper__3FddR\",\"selected\":\"Col_selected__29n3t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddRow_wrapper__3NW4Q\",\"addButton\":\"AddRow_addButton__1hGob\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"AddCol_wrapper__OkM3j\",\"addButton\":\"AddCol_addButton__2VG6f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextEdit_wrapper__3ANjp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveRow_wrapper__QxJap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"Row_techCol__HSNZB\",\"active\":\"Row_active__1oG0c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RemoveCol_wrapper__2M4QV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"techCol\":\"TechCol_techCol__3-ePx\"};","import * as React from \"react\";\nimport { SketchContext as SketchContextType } from \"./types\";\n\nexport const TableContext = React.createContext<SketchContextType>(\n  null as any\n);\n","import { TableState } from \"./types\";\n\nconst tableState: TableState = {\n  touched: false,\n  selectionState: {\n    selectedCols: [],\n    selected: false,\n  },\n  rows: [\n    {\n      id: 1,\n      cols: [\n        {\n          content: \"\",\n          type: \"text\",\n          display: true,\n          id: 1,\n        },\n        {\n          content: \"\",\n          type: \"text\",\n          display: true,\n          id: 2,\n        },\n      ],\n    },\n  ],\n};\n\nexport default tableState;\n","import { createStandardAction } from \"typesafe-actions\";\nimport { PositionStateType, RowType, SelectionStateType } from \"./types\";\n\nexport const setStartSelection = createStandardAction(\n  \"TABLE/SET_START_SELECTION\"\n)<{\n  positionStart: PositionStateType;\n}>();\n\nexport const setEndSelection = createStandardAction(\"TABLE/SET_END_SELECTION\")<{\n  positionEnd: PositionStateType;\n  finished: boolean;\n}>();\n\nexport const clearSelection = createStandardAction(\"TABLE/CLEAR_SELECTION\")();\n\nexport const rowsUpdate = createStandardAction(\"TABLE/ROWS_UPDATE\")<{\n  rows: RowType[];\n}>();\n\nexport const updateColContent = createStandardAction(\n  \"TABLE/UPDATE_COL_CONTENT\"\n)<{\n  rowId: number;\n  colId: number;\n  content: string;\n}>();\n\nexport const updateColBackground = createStandardAction(\n  \"TABLE/UPDATE_COL_BACKGROUND\"\n)<{\n  selectionState: SelectionStateType;\n  background: string | undefined;\n}>();\n\nexport const selectRow = createStandardAction(\"TABLE/SELECT_ROW\")<{\n  rowId: number;\n}>();\n\nexport const removeRow = createStandardAction(\"TABLE/REMOVE_ROW\")<{\n  rowId: number;\n}>();\n\nexport const selectCol = createStandardAction(\"TABLE/SELECT_COL\")<{\n  colId: number;\n}>();\n\nexport const removeCol = createStandardAction(\"TABLE/REMOVE_COL\")<{\n  colId: number;\n}>();\n","import { PositionStateType, RangeType, SelectionStateType } from \"./types\";\n\nexport const getRange = (\n  start: PositionStateType,\n  end: PositionStateType\n): RangeType => ({\n  row: {\n    min: start.rowId < end.rowId ? start.rowId : end.rowId,\n    max: start.rowId < end.rowId ? end.rowId : start.rowId,\n  },\n  col: {\n    min: start.colId < end.colId ? start.colId : end.colId,\n    max: start.colId < end.colId ? end.colId : start.colId,\n  },\n});\n\nexport const belongs = (\n  start: PositionStateType,\n  end: PositionStateType,\n  current: PositionStateType\n): boolean => {\n  const range = getRange(start, end);\n\n  return (\n    current.rowId >= range.row.min &&\n    current.rowId <= range.row.max &&\n    current.colId >= range.col.min &&\n    current.colId <= range.col.max\n  );\n};\n\nexport const getCellCount = (selectionState: SelectionStateType): number => {\n  if (selectionState.start && selectionState.end) {\n    const range = getRange(selectionState.start, selectionState.end);\n\n    return (\n      (range.row.max - range.row.min + 1) * (range.col.max - range.col.min + 1)\n    );\n  }\n\n  return 0;\n};\n","import { createReducer, ActionType } from \"typesafe-actions\";\nimport initialState from \"./state\";\nimport * as actions from \"./actions\";\nimport * as Types from \"./types\";\nimport { ColType, PositionStateType, RowType, SelectedColsType } from \"./types\";\nimport { belongs } from \"./utils\";\n\ntype Action = ActionType<typeof actions>;\n\nconst tableReducer = createReducer<Types.TableState, Action>(initialState)\n  .handleAction(\n    actions.setStartSelection,\n    (state, { payload: { positionStart } }) => ({\n      ...state,\n      touched: true,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n        start: positionStart,\n      },\n    })\n  )\n  .handleAction(\n    actions.setEndSelection,\n    (state, { payload: { positionEnd, finished } }) => {\n      const selectedCols: SelectedColsType[] = [];\n      const { rows } = state;\n\n      if (finished && state.selectionState.start) {\n        for (\n          let rowId = state.selectionState.start.rowId;\n          rowId <= positionEnd.rowId;\n          rowId += 1\n        ) {\n          const col = { rowId };\n\n          for (\n            let colId = state.selectionState.start.colId;\n            colId <= positionEnd.colId;\n            colId += 1\n          ) {\n            const colSpan = rows[rowId - 1].cols[colId - 1].colSpan;\n            const rowSpan = rows[rowId - 1].cols[colId - 1].rowSpan;\n\n            selectedCols.push({\n              ...col,\n              colId,\n              ...(rowSpan ? { rowSpan } : {}),\n              ...(colSpan ? { colSpan } : {}),\n            });\n          }\n        }\n      }\n\n      return {\n        ...state,\n        ...(finished ? { touched: false } : {}),\n        selectionState: {\n          ...state.selectionState,\n          selectedCols,\n          ...(finished ? { selected: true } : {}),\n          end: positionEnd,\n        },\n      };\n    }\n  )\n  .handleAction(actions.clearSelection, (state) => ({\n    ...state,\n    selectionState: {\n      selectedCols: [],\n      selected: false,\n    },\n  }))\n  .handleAction(actions.rowsUpdate, (state, { payload: { rows } }) => ({\n    ...state,\n    rows,\n  }))\n  .handleAction(actions.selectRow, (state, { payload: { rowId } }) => {\n    const allocatedRow = state.rows[rowId - 1];\n\n    const selectedCols = allocatedRow.cols.map((col: ColType) => ({\n      rowId,\n      colId: col.id,\n    }));\n\n    return {\n      ...state,\n      selectionState: {\n        selected: true,\n        selectedCols,\n        start: { rowId, colId: allocatedRow.cols[0].id },\n        end: {\n          rowId,\n          colId: allocatedRow.cols[allocatedRow.cols.length - 1].id,\n        },\n      },\n    };\n  })\n  .handleAction(actions.selectCol, (state, { payload: { colId } }) => {\n    const selectedCols: PositionStateType[] = [];\n\n    for (let r = 1; r <= state.rows.length; r += 1) {\n      selectedCols.push({ rowId: r, colId });\n    }\n\n    return {\n      ...state,\n      selectionState: {\n        selected: true,\n        selectedCols,\n        start: { rowId: state.rows[0].id, colId },\n        end: {\n          rowId: state.rows[state.rows.length - 1].id,\n          colId,\n        },\n      },\n    };\n  })\n  .handleAction(actions.removeRow, (state, { payload: { rowId } }) => {\n    const newRows = state.rows;\n    newRows.splice(rowId - 1, 1);\n\n    return {\n      ...state,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n      },\n      rows: newRows.map((row: RowType, index: number) => ({\n        ...row,\n        id: index + 1,\n      })),\n    };\n  })\n  .handleAction(actions.removeCol, (state, { payload: { colId } }) => {\n    const newRows = state.rows;\n\n    newRows.forEach((row: RowType) => {\n      row.cols.splice(colId - 1, 1);\n      row.cols = row.cols.map((col: ColType, index) => ({\n        ...col,\n        id: index + 1,\n      }));\n    });\n\n    return {\n      ...state,\n      selectionState: {\n        selectedCols: [],\n        selected: false,\n      },\n      rows: newRows.map((row: RowType, index: number) => ({\n        ...row,\n        id: index + 1,\n      })),\n    };\n  })\n  .handleAction(\n    actions.updateColContent,\n    (state, { payload: { colId, rowId, content } }) => {\n      const { rows } = state;\n\n      rows[rowId - 1].cols[colId - 1].content = content;\n\n      return {\n        ...state,\n        rows,\n      };\n    }\n  )\n  .handleAction(\n    actions.updateColBackground,\n    (state, { payload: { selectionState, background } }) => {\n      const { rows } = state;\n\n      const newRows = rows.map((row: RowType) => {\n        const newCols = row.cols.map((col: ColType) => {\n          if (\n            selectionState.start &&\n            selectionState.end &&\n            belongs(selectionState.start, selectionState.end, {\n              rowId: row.id,\n              colId: col.id,\n            })\n          ) {\n            return { ...col, background };\n          }\n\n          return col;\n        });\n\n        return { ...row, cols: newCols };\n      });\n\n      return {\n        ...state,\n        rows: newRows,\n      };\n    }\n  );\n\nexport default tableReducer;\n","export const emptyCol = { content: \"\", type: \"text\", display: true };\n\nexport const ROW_HEIGHT = 45;\n\nexport const BACKGROUND_COLORS = [\n  \"#fff1b8\",\n  \"#ffffb8\",\n  \"#f4ffb8\",\n  \"#d9f7be\",\n  \"#b5f5ec\",\n  \"#bae7ff\",\n  \"#d6e4ff\",\n  \"#efdbff\",\n  \"#ffccc7\",\n];\n","import React, { useRef } from \"react\";\nimport { updateColContent } from \"../../../../duck/actions\";\nimport { TableContext } from \"../../../../duck/context\";\nimport styles from \"./TextEdit.module.css\";\n\ninterface TextEditType {\n  value: string;\n  rowId: number;\n  colId: number;\n  background?: string;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst TextEdit: React.FC<TextEditType> = ({\n  value,\n  colId,\n  rowId,\n  background,\n  setEditMode,\n}) => {\n  const { dispatch } = React.useContext(TableContext);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const editHandler = (e: any) => {\n    dispatch(updateColContent({ rowId, colId, content: e.target.value }));\n    setEditMode(false);\n  };\n\n  const keyDownHandler = (e: any) => {\n    if (e.code === \"Enter\") {\n      editHandler(e);\n    }\n  };\n\n  return (\n    <input\n      ref={inputRef}\n      defaultValue={value}\n      onBlur={editHandler}\n      onKeyDown={keyDownHandler}\n      className={styles.wrapper}\n      style={{ background }}\n    />\n  );\n};\n\nexport default TextEdit;\n","import React, { useRef } from \"react\";\nimport classNames from \"classnames\";\nimport { ColType as ColDataType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { setEndSelection, setStartSelection } from \"../../duck/actions\";\nimport { belongs } from \"../../duck/utils\";\nimport { TextEdit } from \"./components\";\nimport styles from \"./Col.module.css\";\n\ninterface ColType {\n  colData: ColDataType;\n  rowId: number;\n}\n\nconst Col: React.FC<ColType> = ({ colData, rowId }) => {\n  const [selected, setSelected] = React.useState<boolean>(false);\n  const [editMode, setEditMode] = React.useState<boolean>(false);\n  const { state, dispatch } = React.useContext(TableContext);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setSelected(\n        belongs(state.selectionState.start, state.selectionState.end, {\n          rowId,\n          colId: colData.id,\n        })\n      );\n    } else {\n      setSelected(false);\n    }\n  }, [state, rowId, colData, inputRef]);\n\n  if (!colData.display) {\n    return null;\n  }\n\n  const selectStartHandler = () => {\n    dispatch(\n      setStartSelection({ positionStart: { rowId, colId: colData.id } })\n    );\n  };\n\n  const selectEndHandler = () => {\n    dispatch(\n      setEndSelection({\n        positionEnd: {\n          rowId: colData.rowSpan ? rowId + colData.rowSpan - 1 : rowId,\n          colId: colData.colSpan\n            ? colData.id + colData.colSpan - 1\n            : colData.id,\n        },\n        finished: true,\n      })\n    );\n  };\n\n  const selectUpdateHandler = () => {\n    if (state.touched) {\n      dispatch(\n        setEndSelection({\n          positionEnd: { rowId, colId: colData.id },\n          finished: false,\n        })\n      );\n    }\n  };\n\n  return (\n    <td\n      id={`col-${rowId}-${colData.id}`}\n      onMouseDown={selectStartHandler}\n      onMouseUp={selectEndHandler}\n      onMouseEnter={selectUpdateHandler}\n      onDoubleClick={() => setEditMode(true)}\n      colSpan={colData.colSpan}\n      rowSpan={colData.rowSpan}\n      className={classNames(styles.wrapper, { [styles.selected]: selected })}\n      style={{ background: colData.background }}\n    >\n      {editMode && colData.type === \"text\" && (\n        <TextEdit\n          value={colData.content}\n          background={colData.background}\n          rowId={rowId}\n          colId={colData.id}\n          setEditMode={setEditMode}\n        />\n      )}\n      {!editMode && colData.content}\n    </td>\n  );\n};\n\nexport default Col;\n","import { ColType, RowType } from \"../../../../../duck/types\";\nimport { emptyCol } from \"../../../../../duck/constants\";\n\nexport const generateNewRows = (rows: RowType[], rowId: number): RowType[] => {\n  const prevRow = rows[rowId - 1];\n  const increasedCols: string[] = [];\n  const newRow: RowType = {\n    id: rowId + 1,\n    cols: [],\n  };\n\n  prevRow.cols.forEach((col: ColType, index) => {\n    if (col.rowSpan) {\n      const colID = `${prevRow.id}${col.id}`;\n      if (!increasedCols.includes(colID)) {\n        rows[rowId - 1].cols[index].rowSpan = col.rowSpan + 1;\n        increasedCols.push(colID);\n      }\n\n      newRow.cols.push({\n        ...emptyCol,\n        id: col.id,\n        display: false,\n        resourceFor: { rowId: rowId, colId: col.id },\n        ...(col.colSpan ? { colSpan: col.colSpan } : {}),\n      });\n    } else if (col.resourceFor) {\n      newRow.cols.push({\n        ...emptyCol,\n        id: col.id,\n        resourceFor: col.resourceFor,\n        display: false,\n        ...(col.colSpan ? { colSpan: col.colSpan } : {}),\n      });\n\n      if (col.resourceFor.rowId !== prevRow.id) {\n        const colID = `${col.resourceFor.rowId}${col.resourceFor.colId}`;\n        if (!increasedCols.includes(colID)) {\n          // @ts-ignore\n          rows[col.resourceFor.rowId - 1].cols[\n            col.resourceFor.colId - 1\n          ].rowSpan += 1;\n          increasedCols.push(colID);\n        }\n      }\n    } else {\n      newRow.cols.push({\n        ...emptyCol,\n        id: col.id,\n        ...(col.colSpan ? { colSpan: col.colSpan } : {}),\n      });\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    if (row.id > rowId) {\n      let newCols = row.cols.map((col: ColType) => {\n        return {\n          ...col,\n          ...(col.resources\n            ? {\n                resources: col.resources.map((currentResource) => ({\n                  ...currentResource,\n                  rowId: currentResource.rowId + 1,\n                })),\n              }\n            : {}),\n          ...(col.resourceFor && col.resourceFor.rowId > rowId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  rowId: col.resourceFor.rowId + 1,\n                },\n              }\n            : col.resourceFor),\n        };\n      });\n\n      return { ...row, id: row.id + 1, cols: newCols };\n    }\n\n    return row;\n  });\n\n  newRows.splice(rowId, 0, newRow);\n\n  return newRows;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsUpdate } from \"../../../../duck/actions\";\nimport { generateNewRows } from \"./duck/utils\";\nimport styles from \"./AddRow.module.css\";\n\ninterface AddRowType {\n  rowId: number;\n}\n\nconst AddRow: React.FC<AddRowType> = ({ rowId }) => {\n  const { dispatch, state } = React.useContext(TableContext);\n\n  const addNewRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(rowsUpdate({ rows: generateNewRows(state.rows, rowId) }));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addNewRowHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddRow;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { removeRow } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveRow.module.css\";\n\ninterface RemoveRowType {\n  rowId: number;\n  setRowSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveRow: React.FC<RemoveRowType> = ({ rowId, setRowSelected }) => {\n  const { dispatch } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeRow({ rowId }));\n    setRowSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveRow;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { RowType as RowDataType, ColType } from \"../../duck/types\";\nimport { TableContext } from \"../../duck/context\";\nimport { selectRow } from \"../../duck/actions\";\nimport { ROW_HEIGHT } from \"../../duck/constants\";\nimport Col from \"../col\";\nimport { AddRow, RemoveRow } from \"./components\";\nimport styles from \"./Row.module.css\";\n\ninterface RowType {\n  rowData: RowDataType;\n}\n\nconst Row: React.FC<RowType> = ({ rowData }) => {\n  const [rowSelected, setRowSelected] = React.useState(false);\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const selectRowHandler = () => {\n    setRowSelected(true);\n    dispatch(selectRow({ rowId: rowData.id }));\n  };\n\n  const outsideClickHandler = () => {\n    setRowSelected(false);\n  };\n\n  return (\n    <tr style={{ height: rowData.height || ROW_HEIGHT }}>\n      <td className={styles.techCol} onClick={selectRowHandler}>\n        <AddRow rowId={rowData.id} />\n        {rowSelected && state.rows.length > 1 && (\n          <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n            <RemoveRow rowId={rowData.id} setRowSelected={setRowSelected} />\n          </OutsideClickHandler>\n        )}\n      </td>\n      {rowData.cols.map((col: ColType) => (\n        <Col key={col.id} colData={col} rowId={rowData.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default Row;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.css\";\n\ninterface ButtonType {\n  onClick?: () => any;\n  onBlur?: () => any;\n  className?: string;\n  active?: boolean;\n  style?: any;\n  disabled?: boolean;\n}\n\nconst Button: React.FC<ButtonType> = ({\n  children,\n  onClick,\n  onBlur,\n  className,\n  style,\n  active = false,\n  disabled = false,\n}) => (\n  <button\n    disabled={disabled}\n    onClick={onClick}\n    onBlur={onBlur}\n    className={classNames(styles.wrapper, className, {\n      [styles.active]: active,\n      [styles.disabled]: disabled,\n    })}\n    style={style}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { getCellCount } from \"../../../../duck/utils\";\nimport { mergeCols } from \"./duck/operations\";\n\nconst Merge: React.FC = () => {\n  const [selectedCellCounts, setSelectedCellCounts] = React.useState(0);\n  const { state, dispatch } = React.useContext(TableContext);\n\n  React.useEffect(() => {\n    setSelectedCellCounts(getCellCount(state.selectionState));\n  }, [state]);\n\n  const mergeHandler = () => {\n    mergeCols(state, dispatch);\n  };\n\n  return (\n    <li>\n      <button disabled={selectedCellCounts <= 1} onClick={mergeHandler}>\n        Merge\n      </button>\n    </li>\n  );\n};\n\nexport default Merge;\n","import {\n  AnyDispatch,\n  ColType,\n  PositionStateType,\n  RowType,\n  SelectedColsType,\n  TableState,\n} from \"../../../../../duck/types\";\nimport { belongs } from \"../../../../../duck/utils\";\nimport { clearSelection, rowsUpdate } from \"../../../../../duck/actions\";\n\nexport const mergeCols = (state: TableState, dispatch: AnyDispatch): void => {\n  const { selectionState, rows } = state;\n  const resources: PositionStateType[] = [];\n  const { selectedCols } = selectionState;\n  const targetCol = {\n    rowId: selectedCols[0].rowId,\n    colId: selectedCols[0].colId,\n  };\n  let colSpan = { prevRowId: selectedCols[0].rowId, prevColId: 0, count: 0 };\n  let rowSpan = { prevRowId: 0, count: 0 };\n\n  selectedCols.forEach((selectedCol: SelectedColsType, index) => {\n    if (\n      selectedCol.colId !== colSpan.prevColId &&\n      selectedCol.rowId === colSpan.prevRowId\n    ) {\n      colSpan.prevColId = selectedCol.colId;\n      colSpan.count += 1;\n      if (selectedCols.length === index - 1 && selectedCol.colSpan) {\n        colSpan.count += selectedCol.colSpan;\n      }\n    }\n\n    if (selectedCol.rowId !== rowSpan.prevRowId) {\n      rowSpan.prevRowId = selectedCol.rowId;\n      rowSpan.count += 1;\n      if (\n        selectionState.selectedCols.length === index - 1 &&\n        selectedCol.rowSpan\n      ) {\n        rowSpan.count += selectedCol.rowSpan;\n      }\n    }\n  });\n\n  const newRows = rows.map((row: RowType) => {\n    const newCols = row.cols.map((col: ColType) => {\n      const currentPosition: PositionStateType = {\n        rowId: row.id,\n        colId: col.id,\n      };\n      const isTargetCol =\n        targetCol.rowId === row.id && targetCol.colId === col.id;\n      const isBelongs = belongs(\n        selectionState.start as PositionStateType,\n        selectionState.end as PositionStateType,\n        currentPosition\n      );\n\n      if (isTargetCol && colSpan.count > 1) {\n        col.colSpan = colSpan.count;\n      }\n\n      if (isTargetCol && rowSpan.count > 1) {\n        col.rowSpan = rowSpan.count;\n      }\n\n      if (isBelongs && !isTargetCol) {\n        resources.push(currentPosition);\n      }\n\n      return {\n        ...col,\n        ...(isTargetCol ? { resources: [] } : {}),\n        ...(isBelongs && !isTargetCol\n          ? { display: false, resourceFor: targetCol }\n          : {}),\n      };\n    });\n\n    return { ...row, cols: newCols };\n  });\n\n  newRows[targetCol.rowId - 1].cols[targetCol.colId - 1].resources = resources;\n\n  dispatch(rowsUpdate({ rows: newRows }));\n  dispatch(clearSelection());\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { BACKGROUND_COLORS } from \"../../../../duck/constants\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { updateColBackground } from \"../../../../duck/actions\";\nimport styles from \"./ChangeBackground.module.css\";\n\nconst ChangeBackground: React.FC = () => {\n  const { state, dispatch } = React.useContext(TableContext);\n\n  const changeColorHandler = (color: string | undefined) => {\n    dispatch(\n      updateColBackground({\n        selectionState: state.selectionState,\n        background: color,\n      })\n    );\n  };\n\n  return (\n    <li className={styles.wrapper}>\n      <button>Background color</button>\n      <div className={styles.colors}>\n        <button\n          onClick={() => changeColorHandler(undefined)}\n          className={classNames(styles.colorButton, styles.transparent)}\n        />\n        {BACKGROUND_COLORS.map((color: string) => (\n          <button\n            onClick={() => changeColorHandler(color)}\n            key={color}\n            style={{ background: color }}\n            className={styles.colorButton}\n          />\n        ))}\n      </div>\n    </li>\n  );\n};\n\nexport default ChangeBackground;\n","export default __webpack_public_path__ + \"static/media/setting.5524b19c.svg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../duck/context\";\nimport Button from \"../button\";\nimport { getMenuPosition, PositionType } from \"./duck/utils\";\nimport { Merge, ChangeBackground } from \"./components\";\nimport icon from \"./assets/setting.svg\";\nimport styles from \"./SelectionMenu.module.css\";\n\nconst SelectionMenu: React.FC = () => {\n  const { state } = React.useContext(TableContext);\n  const [position, setPosition] = React.useState<PositionType>();\n  const [opened, setOpened] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    if (state.selectionState.start && state.selectionState.end) {\n      setPosition(\n        getMenuPosition(state.selectionState.start, state.selectionState.end)\n      );\n    }\n  }, [state]);\n\n  return (\n    <div\n      className={classNames(styles.wrapper, {\n        [styles.selected]: state.selectionState.selected,\n      })}\n      style={position}\n    >\n      <Button\n        onClick={() => setOpened(!opened)}\n        className={styles.settingButton}\n      >\n        <img src={icon} alt=\"\" />\n      </Button>\n      {opened && (\n        <OutsideClickHandler onOutsideClick={() => setOpened(false)}>\n          <ul className={styles.menu}>\n            <ChangeBackground />\n            <Merge />\n          </ul>\n        </OutsideClickHandler>\n      )}\n    </div>\n  );\n};\n\nexport default SelectionMenu;\n","import { getRange } from \"../../../duck/utils\";\nimport { PositionStateType } from \"../../../duck/types\";\n\nexport interface PositionType {\n  top: number;\n  left: number;\n}\n\nexport const getMenuPosition = (\n  start: PositionStateType,\n  end: PositionStateType\n): PositionType => {\n  const range = getRange(start, end);\n  const cell = document.getElementById(`col-${range.row.min}-${range.col.min}`);\n\n  if (cell) {\n    return {\n      top: cell.offsetTop + 5,\n      left: cell.offsetLeft + 5,\n    };\n  }\n\n  return {\n    top: 0,\n    left: 0,\n  };\n};\n","import { ColType, RowType } from \"../../../duck/types\";\nimport { emptyCol } from \"../../../duck/constants\";\n\nexport const generateRowsWithNewCol = (\n  rows: RowType[],\n  colId: number\n): RowType[] =>\n  rows.map((row: RowType) => {\n    const { cols } = row;\n\n    // updating all colId in curren row\n    let newCols = cols.map((col: ColType) => {\n      if (col.id > colId) {\n        return {\n          ...col,\n          id: col.id + 1,\n          ...(col.resources\n            ? {\n                resources: col.resources.map((currentResource) => ({\n                  ...currentResource,\n                  colId: currentResource.colId + 1,\n                })),\n              }\n            : {}),\n          ...(col.resourceFor && col.resourceFor.colId > colId\n            ? {\n                resourceFor: {\n                  ...col.resourceFor,\n                  colId: col.resourceFor.colId + 1,\n                },\n              }\n            : col.resourceFor),\n        };\n      }\n      return col;\n    });\n\n    const lineContinuation =\n      newCols[colId - 1] &&\n      newCols[colId - 1].resourceFor &&\n      newCols[colId] &&\n      newCols[colId].resourceFor &&\n      newCols[colId - 1].resourceFor?.colId ===\n        newCols[colId].resourceFor?.colId;\n\n    const newCol: ColType = {\n      id: colId + 1,\n      ...emptyCol,\n      ...(newCols[colId - 1] && newCols[colId - 1].colSpan\n        ? {\n            display: false,\n            resourceFor: { rowId: row.id, colId: newCols[colId - 1].id },\n          }\n        : {}),\n      ...(lineContinuation\n        ? { display: false, resourceFor: newCols[colId - 1].resourceFor }\n        : {}),\n    };\n\n    if (newCols[colId - 1] && newCols[colId - 1].colSpan) {\n      // @ts-ignore\n      newCols[colId - 1].colSpan += 1;\n      newCols[colId - 1].resources?.push({ rowId: row.id, colId: newCol.id });\n    }\n\n    if (lineContinuation) {\n      const { resourceFor } = newCols[colId - 1];\n\n      if (resourceFor && newCols[resourceFor.colId - 1]) {\n        // @ts-ignore\n        newCols[resourceFor.colId - 1].colSpan += 1;\n      }\n    }\n\n    newCols.splice(colId, 0, newCol);\n\n    return {\n      ...row,\n      cols: newCols,\n    };\n  });\n\nexport const getColCount = (rows: RowType[]): number => {\n  let count = 0;\n\n  rows.forEach((row: RowType) => {\n    if (row.cols.length > count) {\n      count = row.cols.length;\n    }\n  });\n\n  return count;\n};\n","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { rowsUpdate } from \"../../../../duck/actions\";\nimport { generateRowsWithNewCol } from \"../../duck/utils\";\nimport styles from \"./AddCol.module.css\";\n\ninterface AddColType {\n  colId: number;\n}\n\nconst AddCol: React.FC<AddColType> = ({ colId }) => {\n  const { dispatch, state } = React.useContext(TableContext);\n\n  const addColHandler = (e: any): void => {\n    e.stopPropagation();\n    dispatch(rowsUpdate({ rows: generateRowsWithNewCol(state.rows, colId) }));\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <button className={styles.addButton} onClick={addColHandler}>\n        +\n      </button>\n    </div>\n  );\n};\n\nexport default AddCol;\n","export default __webpack_public_path__ + \"static/media/close-circle.50ed0904.svg\";","import React from \"react\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { removeCol } from \"../../../../duck/actions\";\nimport icon from \"./assets/close-circle.svg\";\nimport styles from \"./RemoveCol.module.css\";\n\ninterface RemoveColType {\n  colId: number;\n  setColSelected: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst RemoveCol: React.FC<RemoveColType> = ({ colId, setColSelected }) => {\n  const { dispatch } = React.useContext(TableContext);\n\n  const removeRowHandler = (e: any) => {\n    e.stopPropagation();\n    dispatch(removeCol({ colId }));\n    setColSelected(false);\n  };\n\n  return (\n    <button className={styles.wrapper} onClick={removeRowHandler}>\n      <img src={icon} alt=\"\" />\n    </button>\n  );\n};\n\nexport default RemoveCol;\n","import React from \"react\";\nimport OutsideClickHandler from \"react-outside-click-handler\";\nimport { TableContext } from \"../../../../duck/context\";\nimport { selectCol } from \"../../../../duck/actions\";\nimport AddCol from \"../add-col\";\nimport RemoveCol from \"../remove-col\";\nimport styles from \"./TechCol.module.css\";\n\ninterface TechColType {\n  colId: number;\n}\n\nconst TechCol: React.FC<TechColType> = ({ colId }) => {\n  const { state, dispatch } = React.useContext(TableContext);\n  const [colSelected, setColSelected] = React.useState(false);\n\n  const selectColHandler = () => {\n    setColSelected(true);\n    dispatch(selectCol({ colId }));\n  };\n\n  const outsideClickHandler = () => {\n    setColSelected(false);\n  };\n\n  return (\n    <td key={colId} onClick={selectColHandler} className={styles.techCol}>\n      <AddCol colId={colId} />\n      {state.rows[0].cols.length > 1 && colSelected && (\n        <OutsideClickHandler onOutsideClick={outsideClickHandler}>\n          <RemoveCol colId={colId} setColSelected={setColSelected} />\n        </OutsideClickHandler>\n      )}\n    </td>\n  );\n};\n\nexport default TechCol;\n","import React from \"react\";\nimport { TableContext } from \"../../duck/context\";\nimport { getColCount } from \"./duck/utils\";\nimport { TechCol } from \"./components\";\n\nconst TechRow: React.FC = () => {\n  const { state } = React.useContext(TableContext);\n  const [cols, setCols] = React.useState<any>([]);\n\n  React.useEffect(() => {\n    setCols(\n      Array(getColCount(state.rows))\n        .fill({})\n        .map((col, index) => ({ ...col, id: index + 1 }))\n    );\n  }, [state]);\n\n  if (!state.rows.length) {\n    return null;\n  }\n\n  return (\n    <tr>\n      <td style={{ width: 10 }} />\n      {cols.map((col: any) => (\n        <TechCol key={col.id} colId={col.id} />\n      ))}\n    </tr>\n  );\n};\n\nexport default TechRow;\n","import React from \"react\";\nimport { TableContext } from \"./duck/context\";\nimport tableState from \"./duck/state\";\nimport tableReducer from \"./duck/reducer\";\nimport { RowType } from \"./duck/types\";\nimport { Row, SelectionMenu, TechRow } from \"./components\";\nimport styles from \"./Table.module.css\";\nimport classNames from \"classnames\";\n\ninterface TableType {\n  onChange?: (rows: RowType[]) => any;\n}\n\nconst Table: React.FC<TableType> = ({ onChange }) => {\n  const [state, dispatch] = React.useReducer(tableReducer, tableState);\n\n  React.useEffect(() => {\n    if (onChange && typeof onChange === \"function\") {\n      onChange(state.rows);\n    }\n\n    console.log(state.rows, \"rows state\");\n  }, [state, onChange]);\n\n  return (\n    <TableContext.Provider value={{ dispatch, state }}>\n      <div className={styles.wrapper}>\n        <table\n          className={classNames(styles.table, {\n            [styles.filled]: !!state.rows.length,\n          })}\n        >\n          <tbody>\n            <TechRow />\n            {state.rows.map((row: RowType) => (\n              <Row key={row.id} rowData={row} />\n            ))}\n          </tbody>\n        </table>\n        <SelectionMenu />\n      </div>\n    </TableContext.Provider>\n  );\n};\n\nexport default Table;\n","import React from 'react';\nimport { Table } from \"./components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ChangeBackground_wrapper__2Uwxj\",\"colors\":\"ChangeBackground_colors__Je-TV\",\"colorButton\":\"ChangeBackground_colorButton__2QEDl\",\"transparent\":\"ChangeBackground_transparent__mqomV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SelectionMenu_wrapper__2E3fb\",\"selected\":\"SelectionMenu_selected__1dW4V\",\"settingButton\":\"SelectionMenu_settingButton__2RZd1\",\"menu\":\"SelectionMenu_menu__3_fZg\"};"],"sourceRoot":""}